[{"E:\\FYP\\geo-ecommerce\\src\\index.js":"1","E:\\FYP\\geo-ecommerce\\src\\reportWebVitals.js":"2","E:\\FYP\\geo-ecommerce\\src\\App.js":"3","E:\\FYP\\geo-ecommerce\\src\\pages\\login\\index.jsx":"4","E:\\FYP\\geo-ecommerce\\src\\components\\login_sign_up_components\\index.js":"5","E:\\FYP\\geo-ecommerce\\src\\pages\\register\\index.jsx":"6","E:\\FYP\\geo-ecommerce\\src\\config.js":"7","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\index.js":"8","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\style.js":"9","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\index.js":"10","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\search_bar.js":"11","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\navbar_items.js":"12","E:\\FYP\\geo-ecommerce\\src\\enums\\index.js":"13","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\style.js":"14","E:\\FYP\\geo-ecommerce\\src\\utils\\history.js":"15","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\buy_sell_info.js":"16","E:\\FYP\\geo-ecommerce\\src\\redux\\store.js":"17","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userReducer.js":"18","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userTypes.js":"19","E:\\FYP\\geo-ecommerce\\src\\redux\\index.js":"20","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userActions.js":"21","E:\\FYP\\geo-ecommerce\\src\\services\\auth.js":"22","E:\\FYP\\geo-ecommerce\\src\\utils\\storage.js":"23","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\how_saman_works_info.js":"24","E:\\FYP\\geo-ecommerce\\src\\routes.js":"25","E:\\FYP\\geo-ecommerce\\src\\layout\\blank_layout.js":"26","E:\\FYP\\geo-ecommerce\\src\\layout\\conditional_layout.js":"27","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\index.js":"28","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\style.js":"29","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\index.js":"30","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\style.js":"31","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\productDetailTable.js":"32","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\uploadImageComponent.js":"33","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsActions.js":"34","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsTypes.js":"35","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsReducer.js":"36","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\your_store_tab\\index.js":"37","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\index.js":"38","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\main_layout.js":"39","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\style.js":"40","E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsReducer.js":"41","E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsTypes.js":"42","E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsActions.js":"43","E:\\FYP\\geo-ecommerce\\src\\utils\\product_type.js":"44","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\product_modal.js":"45","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\login\\index.js":"46","E:\\FYP\\geo-ecommerce\\src\\layout\\admin_layout.js":"47","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\index.js":"48","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\navbar_items.js":"49","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\style.js":"50","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\index.js":"51","E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminReducer.js":"52","E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminTypes.js":"53","E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminActions.js":"54","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\style.js":"55","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\index.js":"56","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\style.js":"57","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\rating_component.js":"58","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\index.js":"59","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\style.js":"60"},{"size":984,"mtime":1613876971182,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":499162500000,"results":"63","hashOfConfig":"62"},{"size":2918,"mtime":1615192781718,"results":"64","hashOfConfig":"62"},{"size":8010,"mtime":1615189121613,"results":"65","hashOfConfig":"62"},{"size":677,"mtime":1615189029914,"results":"66","hashOfConfig":"62"},{"size":9161,"mtime":1615189131522,"results":"67","hashOfConfig":"62"},{"size":189,"mtime":1613804706930,"results":"68","hashOfConfig":"62"},{"size":9290,"mtime":1615523298199,"results":"69","hashOfConfig":"62"},{"size":1546,"mtime":1615258289091,"results":"70","hashOfConfig":"62"},{"size":6383,"mtime":1615523566228,"results":"71","hashOfConfig":"62"},{"size":214,"mtime":1609678318417,"results":"72","hashOfConfig":"62"},{"size":2455,"mtime":1614744494499,"results":"73","hashOfConfig":"62"},{"size":6145,"mtime":1615284694075,"results":"74","hashOfConfig":"62"},{"size":2578,"mtime":1615567024779,"results":"75","hashOfConfig":"62"},{"size":117,"mtime":1613046848940,"results":"76","hashOfConfig":"62"},{"size":806,"mtime":1614920973528,"results":"77","hashOfConfig":"62"},{"size":1647,"mtime":1615264290776,"results":"78","hashOfConfig":"62"},{"size":4120,"mtime":1615540030639,"results":"79","hashOfConfig":"62"},{"size":816,"mtime":1615539545385,"results":"80","hashOfConfig":"62"},{"size":180,"mtime":1615263948126,"results":"81","hashOfConfig":"62"},{"size":4244,"mtime":1615539526665,"results":"82","hashOfConfig":"62"},{"size":356,"mtime":1615189764207,"results":"83","hashOfConfig":"62"},{"size":437,"mtime":1615191388477,"results":"84","hashOfConfig":"62"},{"size":3479,"mtime":1614934131855,"results":"85","hashOfConfig":"62"},{"size":3356,"mtime":1615537591338,"results":"86","hashOfConfig":"62"},{"size":143,"mtime":1613393474778,"results":"87","hashOfConfig":"62"},{"size":498,"mtime":1613395638186,"results":"88","hashOfConfig":"62"},{"size":1372,"mtime":1614939995219,"results":"89","hashOfConfig":"62"},{"size":566,"mtime":1614523510248,"results":"90","hashOfConfig":"62"},{"size":9561,"mtime":1614152896216,"results":"91","hashOfConfig":"62"},{"size":646,"mtime":1613809541941,"results":"92","hashOfConfig":"62"},{"size":3009,"mtime":1613805462798,"results":"93","hashOfConfig":"62"},{"size":3797,"mtime":1613839397989,"results":"94","hashOfConfig":"62"},{"size":5038,"mtime":1615370608063,"results":"95","hashOfConfig":"62"},{"size":1115,"mtime":1614149879431,"results":"96","hashOfConfig":"62"},{"size":5950,"mtime":1614150282961,"results":"97","hashOfConfig":"62"},{"size":10475,"mtime":1615370190516,"results":"98","hashOfConfig":"62"},{"size":2599,"mtime":1614832050391,"results":"99","hashOfConfig":"62"},{"size":5001,"mtime":1614832060935,"results":"100","hashOfConfig":"62"},{"size":2144,"mtime":1614778088274,"results":"101","hashOfConfig":"62"},{"size":1211,"mtime":1614746908660,"results":"102","hashOfConfig":"62"},{"size":209,"mtime":1614519674243,"results":"103","hashOfConfig":"62"},{"size":1045,"mtime":1615370873066,"results":"104","hashOfConfig":"62"},{"size":1205,"mtime":1614832057795,"results":"105","hashOfConfig":"62"},{"size":2670,"mtime":1615521816964,"results":"106","hashOfConfig":"62"},{"size":5368,"mtime":1615521716433,"results":"107","hashOfConfig":"62"},{"size":1563,"mtime":1615259566253,"results":"108","hashOfConfig":"62"},{"size":1443,"mtime":1615285244118,"results":"109","hashOfConfig":"62"},{"size":837,"mtime":1615284718555,"results":"110","hashOfConfig":"62"},{"size":426,"mtime":1615258345667,"results":"111","hashOfConfig":"62"},{"size":7130,"mtime":1615521452381,"results":"112","hashOfConfig":"62"},{"size":2784,"mtime":1615521043793,"results":"113","hashOfConfig":"62"},{"size":519,"mtime":1615521053329,"results":"114","hashOfConfig":"62"},{"size":2071,"mtime":1615521136749,"results":"115","hashOfConfig":"62"},{"size":382,"mtime":1615284292178,"results":"116","hashOfConfig":"62"},{"size":8903,"mtime":1615521638621,"results":"117","hashOfConfig":"62"},{"size":162,"mtime":1615379879797,"results":"118","hashOfConfig":"62"},{"size":2803,"mtime":1615541966619,"results":"119","hashOfConfig":"62"},{"size":6242,"mtime":1615608700959,"results":"120","hashOfConfig":"62"},{"size":929,"mtime":1615608667529,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1l58w15",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"124"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\FYP\\geo-ecommerce\\src\\index.js",[],["268","269"],"E:\\FYP\\geo-ecommerce\\src\\reportWebVitals.js",[],"E:\\FYP\\geo-ecommerce\\src\\App.js",["270","271","272","273","274"],"import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { message } from 'antd';\nimport Routes from './routes';\nimport { getAdminToken, getToken } from './utils/storage';\nimport { getAllSellerProducts } from './redux';\n\nfunction App() {\n\n  const PrivateRouter = () => {\n    useEffect(() => {\n      message.info({\n        content: \"You must login to view this page!\",\n      });\n    });\n\n    return <Redirect to=\"/\"></Redirect>\n  }\n\n  const AdminPrivateRouter = () => {\n    useEffect(() => {\n      message.info({\n        content: \"You must be admin to view this page!\"\n      })\n    });\n    return <Redirect to=\"/admin/login\" />\n  }\n\n  return (\n    <Switch>\n      {Routes.map((\n        {\n          name,\n          path,\n          privateRoute,\n          adminRoute,\n          exact,\n          displaySearchBar,\n          layout: Layout,\n          component: Component\n        },\n        i\n      ) => {\n        if (privateRoute && !adminRoute) {\n          return (\n            <Route\n              key={`${path}_${i}`}\n              path={path}\n              exact={exact}\n              render={(props) => {\n                if (!getToken()) {\n                  return <PrivateRouter />\n                } else {\n                  return (\n                    <Layout displaySearchBar={displaySearchBar} {...props}>\n                      <Component {...props}></Component>\n                    </Layout>\n                  )\n                }\n              }}\n            >\n            </Route>\n          )\n        } else if (privateRoute && adminRoute) {\n          return (\n            <Route\n              key={`${path}_${i}`}\n              path={path}\n              exact={exact}\n              render={(props) => {\n                if (!getAdminToken()) {\n                  return <AdminPrivateRouter />;\n                } else {\n                  return (\n                    <Layout {...props}>\n                      <Component {...props}></Component>\n                    </Layout>\n                  )\n                }\n              }}\n            />\n          )\n        } else {\n          return (\n            <Route\n              key={`${path}_${i}`}\n              path={path}\n              exact={exact}\n              render={(props) => {\n                return (\n                  <Layout displaySearchBar={displaySearchBar} {...props}>\n                    <Component {...props}></Component>\n                  </Layout>\n                )\n              }\n              }\n            ></Route>\n          )\n        }\n      })}\n      <Route path=\"*\" exact>\n        <div style={{ display: \"flex\", height: \"100vh\", alignItems: \"center\", justifyContent: \"center\" }}>Page Not Found!</div>\n      </Route>\n    </Switch >\n  );\n}\n\nexport default App;\n","E:\\FYP\\geo-ecommerce\\src\\pages\\login\\index.jsx",["275","276","277","278"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, withRouter, useHistory } from 'react-router-dom';\r\nimport { Layout, Row, Col, Form, Input, Checkbox, Button, Divider, Image, Alert } from 'antd';\r\nimport { Content, Footer, Header } from 'antd/lib/layout/layout';\r\nimport { CustomizedButton, CustomGoogleLoginBtn, DividerColumn } from '../../components/login_sign_up_components';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport logo from '../../assests/images/logo.png'\r\nimport { google_client_id } from '../../config';\r\nimport { getToken } from '../../utils/storage';\r\n// import history  from '../../utils/history';\r\n\r\n//User Actions\r\nimport { loginUser, onUserErrorReset } from '../../redux';\r\n\r\nconst LoginUserPage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const loggingUser = useSelector(state => state.user?.loggingIn);\r\n    const userDetail = useSelector(state => state.user?.user);\r\n    const loggingErrorMsg = useSelector(state => state.user?.loggingError);\r\n\r\n    //Reset Errors\r\n    useEffect(()=>{\r\n        dispatch(onUserErrorReset());\r\n    },[]);\r\n\r\n    //Google Sign Up Response\r\n    const responseGoogle = (response) => {\r\n        const googleResponse = response.profileObj;\r\n        const googleFormValues = {\r\n            firstName: googleResponse.name,\r\n            email: googleResponse.email,\r\n            googleId: googleResponse.googleId,\r\n            type: \"googleAuth\"\r\n        }\r\n        dispatch(loginUser(googleFormValues, history));\r\n    }\r\n\r\n    const responseGoogleFailure = (response) => {\r\n        console.log('Failed: ', response);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        dispatch(loginUser(values, history));\r\n    }\r\n\r\n    //Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getToken()) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [userDetail]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout >\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>\r\n                        <Col span={8} offset={8} style={{ textAlign: \"end\" }}>\r\n                            <CustomizedButton><Link to=\"/users/register\">CREATE ACCOUNT</Link></CustomizedButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content >\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Log into Saman.com</h2>\r\n                        </Row>\r\n                        {loggingErrorMsg && (\r\n                            <Alert\r\n                                type=\"error\"\r\n                                message={loggingErrorMsg}\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row style={{ width: \"100vw\", paddingTop: \"1rem\" }}>\r\n                            <Col md={{ span: 8 }} offset={3}>\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 16 }}\r\n                                    name=\"loginForm\"\r\n                                    onFinish={onFinish}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: \"Please Enter Email!\" }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\" }}\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 },\r\n                                        }}\r\n                                        name=\"logIn\"\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}\r\n                                            loading={loggingUser}\r\n                                        >Log In</Button>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\" }}\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 },\r\n                                        }}\r\n                                        valuePropName=\"checked\"\r\n                                        name=\"rememberMe\"\r\n                                    >\r\n                                        <Checkbox>Remember Me</Checkbox>\r\n                                    </Form.Item>\r\n\r\n                                </Form>\r\n                            </Col>\r\n                            <DividerColumn xs={{ span: 24 }} md={{ span: 2 }}>\r\n                                <Divider type=\"vertical\" style={{  'backgroundColor': \"#616362\" }}></Divider>\r\n                                <span>OR</span>\r\n                            </DividerColumn>\r\n                            <Col \r\n                            xs={{\r\n                                span: 24\r\n                            }}\r\n                                md={{\r\n                                    span: 8\r\n                                }}\r\n                                style={{ padding: \"1.4rem 0\", }}\r\n                            >\r\n                                <CustomGoogleLoginBtn\r\n                                    clientId={google_client_id}\r\n                                    buttonText=\"Continue With Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogleFailure}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default LoginUserPage;","E:\\FYP\\geo-ecommerce\\src\\components\\login_sign_up_components\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\register\\index.jsx",["279","280","281"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport Layout, { Header, Content, Footer } from 'antd/lib/layout/layout';\r\nimport { Row, Col, Form, Input, Divider, Image, Button, Alert } from 'antd';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport { CustomizedButton, CustomGoogleLoginBtn, DividerColumn } from '../../components/login_sign_up_components';\r\nimport { google_client_id } from '../../config';\r\nimport logo from '../../assests/images/logo.png';\r\nimport { getToken } from '../../utils/storage';\r\n\r\n//Actions\r\nimport { registerUser, onUserErrorReset } from '../../redux';\r\n\r\nconst RegisterUserPage = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const registeringUser = useSelector(state => state.user?.registeringUser);\r\n    const registerErrorMsg = useSelector(state => state.user?.registrationError);\r\n\r\n    //Reset Errors\r\n    useEffect(() => {\r\n        dispatch(onUserErrorReset());\r\n    }, []);\r\n\r\n    //Google Sign Up Response\r\n    const responseGoogle = (response) => {\r\n        const googleResponse = response.profileObj;\r\n        const googleFormValues = {\r\n            firstName: googleResponse.name,\r\n            email: googleResponse.email,\r\n            googleId: googleResponse.googleId,\r\n            type: \"googleAuth\"\r\n        }\r\n        dispatch(registerUser(googleFormValues, history));\r\n    }\r\n\r\n    const responseGoogleFailure = (response) => {\r\n        console.log('Failed: ', response);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        const formValues = {\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            email: values.registerEmail,\r\n            password: values.registerPassword,\r\n            confirm_password: values.registerConfirmPassword,\r\n        }\r\n        dispatch(registerUser(formValues, history));\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ', errorInfo);\r\n    };\r\n\r\n    //Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getToken()) {\r\n            history.push(\"/\");\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col xs={{ span: 2 }} md={{ span: 8 }}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>\r\n                        <Col xs={{ span: 4, offset: 6 }} md={{ span: 8, offset: 8 }} style={{ textAlign: \"end\" }}>\r\n                            <CustomizedButton><Link to=\"/users/login\">Already have an account? Log In</Link></CustomizedButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content>\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Sign Up</h2>\r\n                        </Row>\r\n                        {registerErrorMsg && (\r\n                            <Alert\r\n                                message={registerErrorMsg}\r\n                                type=\"error\"\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row gutter={24} style={{ width: \"100%\", paddingTop: \"1rem\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\r\n                            <Col md={{ span: 8 }} >\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 16 }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"First Name\"\r\n                                        name=\"firstName\"\r\n                                        rules={[{ required: true, message: \"Please Enter Your First Name!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        rules={[{ required: true, message: \"Please Enter Your Last Name!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"registerEmail\"\r\n                                        rules={[{ required: true, message: \"Please Enter Email!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"registerPassword\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Confirm Password\"\r\n                                        name=\"registerConfirmPassword\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"signUp\"\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 }\r\n                                        }}\r\n                                        style={{ textAlign: \"center\" }}\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}\r\n                                            loading={registeringUser}\r\n                                        >Sign Up\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                            <DividerColumn xs={{ span: 24 }} md={{ span: 2 }} style={{ textAlign: \"center\", }} align=\"middle\">\r\n                                <Divider type=\"vertical\" style={{ 'backgroundColor': \"#616362\" }}></Divider>\r\n                                <span>OR</span>\r\n                            </DividerColumn>\r\n                            <Col xs={{\r\n                                span: 24\r\n                            }} md={{ span: 8 }}>\r\n                                <CustomGoogleLoginBtn\r\n                                    clientId={google_client_id}\r\n                                    buttonText=\"Sign Up With Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogleFailure}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterUserPage;","E:\\FYP\\geo-ecommerce\\src\\config.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\index.js",["282","283","284"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport SearchBar from './search_bar';\r\nimport RatingComponent from './rating_component';\r\nimport { NavBarDiv, NavBarMenu, MenuItem, DropDownMenuDiv, UserDropDownMenuDiv, LogoutButton } from './style';\r\nimport { Row, Col, Dropdown, Divider, Image, Input } from 'antd';\r\nimport { DownOutlined, SmileOutlined, UserOutlined } from '@ant-design/icons'\r\nimport { NavbarItems, UserProfileItems } from './navbar_items';\r\nimport { getToken } from '../../utils/storage';\r\nimport { Fragment } from 'react';\r\nimport { logoutUser } from '../../redux';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport logo from '../../assests/images/logo.png';\r\n\r\nconst Navbar = ({ displaySearchBar }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const User = useSelector(state => state.user?.user);\r\n    const fullName = `${User?.first_name} ${User?.last_name ? User?.last_name : \"\"}`;\r\n\r\n    const onLogout = () => {\r\n        dispatch(logoutUser(history));\r\n    }\r\n\r\n    const DropDownMenu = (props) => {\r\n        return (\r\n            <DropDownMenuDiv>\r\n                {\r\n                    (props.subMenu && props.subMenu.length > 0)\r\n                        ? props.subMenu.map(({ name, label, path }, i) => {\r\n                            return (\r\n                                <NavBarMenu>\r\n                                    <MenuItem\r\n                                        key={i}\r\n                                    >\r\n                                        <Link to={path}>\r\n                                            {label}\r\n                                        </Link>\r\n\r\n                                    </MenuItem>\r\n                                </NavBarMenu>\r\n                            )\r\n                        }) :\r\n                        \"\"\r\n                }\r\n            </DropDownMenuDiv>\r\n        )\r\n    }\r\n\r\n    const UserDropDownMenu = () => {\r\n        return (\r\n            <UserDropDownMenuDiv>\r\n                <Row className=\"userMenuLabel\">\r\n                    <h4><b>{fullName}</b></h4>\r\n                </Row>\r\n                <Row className=\"userMenuLabel userMenuEmail\">\r\n                    <p>{User?.email}</p>\r\n                </Row>\r\n                <Divider style={{ margin: \"2px 0px\" }} />\r\n                <Row>\r\n                    <LogoutButton\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            onLogout()\r\n                        }}\r\n                    >\r\n                        Log out\r\n                    </LogoutButton>\r\n                </Row>\r\n            </UserDropDownMenuDiv>\r\n        )\r\n    }\r\n\r\n    //Return Main Component\r\n    return (\r\n        <NavBarDiv id=\"navBarDiv\">\r\n            <Row gutter={24}>\r\n                <Col\r\n                    md={{ span: 5, offset: 0 }}\r\n                    xl={{ span: 5, offset: 0 }}\r\n                    style={{ display: \"flex\", alignItems: \"baseline\", flexDirection: \"row\", justifyContent: \"space-between\", zIndex: \"999\", textAlign: \"center\" }}\r\n                >\r\n                    <div style={{ padding: \"1rem\" }}>\r\n                        <Link to=\"/\">\r\n                            <Image src={logo}\r\n                                width=\"50%\"\r\n                                alt=\"Logo.png\"\r\n                                onClick={() => {\r\n                                    <Redirect to=\"/\"></Redirect>\r\n                                }}\r\n                                preview={false}\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    {/* Conditional Search Bar Rendering */}\r\n\r\n                    {displaySearchBar ?\r\n                        (\r\n                            <div style={{ padding: \"1rem\" }}>\r\n                                <div id=\"searchIconDiv\">\r\n                                    <div>\r\n                                        <SearchBar></SearchBar>\r\n                                    </div>\r\n                                    <div>\r\n                                        Search\r\n                                </div>\r\n                                </div>\r\n                                <div>\r\n                                    <Input id=\"searchInput\" placeholder=\"Search\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                        :\r\n                        (\r\n                            \"\"\r\n                        )\r\n                    }\r\n                </Col>\r\n\r\n                <Col\r\n                    md={{ span: 8 }}\r\n                    xl={{ span: 14 }}\r\n                >\r\n                    <Row style={{ display: \"flex\", flexDirection: \"column\", textAlign: \"center\" }}>\r\n                        <Col>\r\n                            <h2>Saman.com</h2>\r\n                            {/* <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image> */}\r\n                        </Col>\r\n                        <Col>\r\n                            <NavBarMenu\r\n                                mode=\"horizontal\"\r\n                            >\r\n                                {NavbarItems.map(({ name, label, subMenu, path }, i) =>\r\n                                    subMenu ?\r\n                                        (\r\n                                            <Dropdown\r\n                                                overlay={<DropDownMenu subMenu={subMenu}></DropDownMenu>}\r\n                                            >\r\n\r\n                                                <a className=\"nav-bar-anchor\">\r\n                                                    <div>{label}<DownOutlined /></div>\r\n                                                </a>\r\n\r\n\r\n                                            </Dropdown>\r\n                                        )\r\n                                        :\r\n                                        (\r\n                                            <MenuItem\r\n                                                key={i}\r\n                                            >\r\n                                                <Link to={path}>\r\n                                                    <h3>{label}</h3>\r\n                                                </Link>\r\n\r\n                                            </MenuItem>\r\n                                        )\r\n\r\n                                )}\r\n                            </NavBarMenu>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n                <Col\r\n                    md={{ span: 8 }}\r\n                    xl={{ span: 4, offset: 0 }}\r\n                    style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", zIndex: \"999\", padding: \"1rem\", textAlign: \"center\" }}\r\n                >\r\n                    <RatingComponent />\r\n                    {getToken() ?\r\n                        (\r\n                            UserProfileItems.map(({ name, label }) => {\r\n                                return (\r\n                                    <Fragment>\r\n                                        <Dropdown\r\n                                            overlay={<UserDropDownMenu />}\r\n                                            trigger={['click']}\r\n                                            style={{\r\n                                                pointer: \"cursor\"\r\n                                            }}\r\n                                        >\r\n                                            <div>\r\n                                                <div>\r\n                                                    <UserOutlined style={{\r\n                                                        fontSize: \"2.5rem\",\r\n                                                    }} />\r\n                                                </div>\r\n                                                <a className=\"nav-bar-anchor\" style={{ color: \"black\" }}>Profile</a>\r\n                                            </div>\r\n\r\n                                        </Dropdown>\r\n\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        )\r\n                        :\r\n                        (\r\n                            <div>\r\n                                <Link to=\"/users/register\" className=\"nav-bar-anchor\" style={{ color: \"black\" }}>\r\n                                    <div>\r\n                                        <i className=\"fa fa-hand-paper-o\" style={{ fontSize: \"2.5rem\" }}></i>\r\n                                    </div>\r\n                                    <div>\r\n                                        Sign Up/Register\r\n                                    </div>\r\n                                </Link>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </NavBarDiv>\r\n    )\r\n}\r\n\r\nexport default Navbar;","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\style.js",["285"],"import styled from 'styled-components';\r\nimport {Menu, Dropdown, Button} from 'antd';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nexport const NavBarDiv=styled.div`\r\n    z-index: 999;\r\n    position: relative;\r\n    width:100vw;\r\n    justify-content:center;\r\n    background-color:rgba(255,255,255,0.2);    \r\n    perspective:1000px;\r\n    margin:0 auto;\r\n \r\n    #searchInput{\r\n        display:none;\r\n    }\r\n`\r\n\r\nexport const NavBarMenu=styled(Menu)`\r\n    display:flex;  \r\n    justify-content:space-between;\r\n    .nav-bar-anchor{\r\n        color:black;\r\n        &:active{\r\n            color:black;\r\n        }\r\n    }\r\n`\r\nexport const MenuItem=styled(Menu.Item)`\r\n\r\n`\r\nexport const SearchOutlinedEl=styled(SearchOutlined)`\r\n    font-size:2.5rem;   \r\n`\r\n\r\nexport const DropDownMenuDiv=styled.div`\r\n    margin-left:-3rem;\r\n    display:grid;\r\n    grid-template-columns:auto auto;    \r\n    grid-column-gap: 20px;    \r\n    padding:10px;\r\n    border:1px solid grey;\r\n`\r\n\r\nexport const UserDropDownMenuDiv=styled.div`\r\n    margin-left:-5rem;    \r\n    padding:10px 12px;\r\n    border-radius:0.01rem;\r\n    background-color:rgb(255, 255, 255);\r\n    /* border:none */\r\n    box-shadow: 1px 2px 40px #888888;\r\n    .userMenuLabel{\r\n        margin-right:6rem;        \r\n    }\r\n    .userMenuEmail{\r\n        color:rgb(172, 172, 172);\r\n        font-size:500;\r\n        font-size:0.75rem;\r\n        margin-top:-0.5rem;\r\n    }\r\n`\r\n\r\nexport const LogoutButton=styled(Button)`\r\n    border:none;\r\n    padding-left:0px;\r\n    font-weight:600;\r\n    color:chocolate;\r\n    \r\n`","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\index.js",["286","287","288","289","290","291","292"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Row, Col, Layout, Image } from 'antd';\r\nimport { Content } from 'antd/lib/layout/layout';\r\nimport { WelcomeDiv, PCBackgroundImg, RightBackGround, LandingRightColumn } from './style';\r\nimport pcBackgroundImg from '../../assests/images/pcBackgroundImg.jpg';\r\nimport logo from '../../assests/images/logo.png';\r\nimport $ from 'jquery';\r\nimport { DownCircleFilled } from '@ant-design/icons';\r\nimport ReactRotatingText from 'react-rotating-text';\r\n\r\nimport HowSamanWorksDiv from './components/how_saman_works_info';\r\nimport BuySellInformation from './components/buy_sell_info';\r\n\r\nconst LandingPage = () => {\r\n\r\n    const [animationColor, setAnimationColor] = useState(\"yellow\");\r\n\r\n    //Animation Div Ref\r\n    const landingRightColumnElement = useRef(null);\r\n    const totalDegreesToRotateLandingRightDiv = 20;\r\n    const totalDegreesToRotateLandingBuySellDiv = 40;\r\n\r\n    const animationColors = [\"#dec852\", \"#587abf\", \"#36a87b\", \"#e0994c\"];\r\n    const textToRender = [\"buy new and old products.\", \"sell your own products.\", \"sell products for free.\"]\r\n\r\n    useEffect(() => {\r\n        const handleScroll = (event) => {\r\n            let innerHeightValue = $(\"#landingRightColumnDiv\").innerHeight() / 2;\r\n\r\n            //Animation\r\n            const landingRightDivDegreesToRotate = calculateRotation(innerHeightValue, totalDegreesToRotateLandingRightDiv);\r\n            const landingBuySellDivDegreesToRotate = calculateRotation(innerHeightValue, totalDegreesToRotateLandingBuySellDiv);\r\n\r\n            if (landingRightDivDegreesToRotate <= totalDegreesToRotateLandingRightDiv && landingRightDivDegreesToRotate >= 0) {\r\n\r\n                $(\"#landingRightColumnDiv\").css({\r\n                    \"transform\": `rotate(${totalDegreesToRotateLandingRightDiv - landingRightDivDegreesToRotate}deg)`\r\n                });\r\n\r\n\r\n            } else {\r\n                $(\"#landingRightColumnDiv\").css({\r\n                    \"transform\": `rotate(0deg)`\r\n                });\r\n\r\n            }\r\n\r\n            if (landingBuySellDivDegreesToRotate < totalDegreesToRotateLandingBuySellDiv) {\r\n                $(\".landingBuySellDiv\").css({\r\n                    \"transform\": `rotate(${totalDegreesToRotateLandingBuySellDiv - landingBuySellDivDegreesToRotate}deg)`\r\n                });\r\n\r\n            } else {\r\n                $(\".landingBuySellDiv\").css({\r\n                    \"transform\": `rotate(0deg)`\r\n                });\r\n            }\r\n        }\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    }, []);\r\n\r\n\r\n    //Color Animation     \r\n    useEffect(() => {\r\n        const animationInterval=setInterval(animateColor, 4000);\r\n        return ()=>clearInterval(animationInterval);\r\n    }, []);\r\n\r\n    let colorIndex = 0;       \r\n    \r\n    const animateColor = () => {                    \r\n        for(var i=0;i<animationColors.length;i++){\r\n            if(i==colorIndex)setAnimationColor(animationColors[colorIndex]);\r\n        }\r\n        \r\n        colorIndex++;\r\n\r\n        if(colorIndex>animationColors.length-1){\r\n            colorIndex=0;\r\n        }\r\n    };\r\n\r\n\r\n    const calculateRotation = (innerHeightValue, totalDegreesToRotate) => {\r\n        let oneDegreePixelValue = innerHeightValue / totalDegreesToRotate;\r\n        let onePixelDegree = 1 / oneDegreePixelValue;\r\n\r\n        let degreesToRotate = totalDegreesToRotate;\r\n        let marginToDecrease = window.scrollY * onePixelDegree;        \r\n        $(\"#landingRightBackgroundDiv\").css({\r\n            \"right\": `-${marginToDecrease * 1.2}%`\r\n        });\r\n\r\n        degreesToRotate = window.scrollY * onePixelDegree;\r\n        return degreesToRotate;\r\n    }\r\n\r\n    const getRotationDegree = (elementObj) => {\r\n        var matrix = elementObj.css(\"-webkit-transform\") ||\r\n            elementObj.css(\"-moz-transform\") ||\r\n            elementObj.css(\"-ms-transform\") ||\r\n            elementObj.css(\"-o-transform\") ||\r\n            elementObj.css(\"transform\");\r\n        if (matrix !== 'none') {\r\n            var values = matrix.split('(')[1].split(')')[0].split(',');\r\n            var a = values[0];\r\n            var b = values[1];\r\n            var angle = Math.round(Math.atan2(b, a) * (180 / Math.PI));\r\n        } else { var angle = 0; }\r\n\r\n        if (angle < 0) angle += 360;\r\n        return angle;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{\r\n                backgroundColor: \"white\"\r\n            }}\r\n            >\r\n                <Content>\r\n                    <Row gutter={24} style={{ textAlign: \"center\" }}>\r\n                        <Col md={{ span: 6, offset: 3 }}>\r\n                            <WelcomeDiv animatedbackgroundColor={animationColor}>\r\n                                <div>\r\n                                    Welcome To\r\n                                </div>\r\n                                <div>\r\n                                    Saman.com\r\n                                </div>\r\n                                <div className=\"welcome-div-text\">\r\n                                    A place where you can\r\n                                    <span className=\"welcome-span\"> <ReactRotatingText items={textToRender} /></span>\r\n\r\n                                </div>\r\n                            </WelcomeDiv>\r\n\r\n                        </Col>\r\n                        <Col md={{ span: 11, offset: 1 }}>\r\n                            <LandingRightColumn ref={landingRightColumnElement} id=\"landingRightColumnDiv\">\r\n                                <RightBackGround id=\"landingRightBackgroundDiv\" animatedbackgroundColor={animationColor}>\r\n                                </RightBackGround>\r\n                                <PCBackgroundImg\r\n                                    src={pcBackgroundImg}\r\n                                >\r\n                                </PCBackgroundImg>\r\n                                {/* <div style={{ zIndex: \"99999\" }}>\r\n                                    <Image src={logo}></Image>\r\n                                </div> */}\r\n\r\n                            </LandingRightColumn>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <BuySellInformation animatedbackgroundColor={animationColor}/>\r\n                    <HowSamanWorksDiv />\r\n                </Content>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\search_bar.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\navbar_items.js",["293"],"import { NAVBAR_TAB_KEYS, PRODUCT_TYPE, SELL_YOUR_PRODUCTS } from '../../enums'\r\nexport const NavbarItems = [\r\n    {\r\n        name: \"Products\",\r\n        label: \"Products\",\r\n        subMenu: [\r\n            {\r\n                name: \"All Products\",\r\n                label: \"All Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.ALL_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Electrical Products\",\r\n                label: \"Electrical Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.ELECTRICAL_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Toy Products\",\r\n                label: \"Toy Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.TOY_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Clothes Products\",\r\n                label: \"Clothes Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.CLOTHES_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Automobile Products\",\r\n                label: \"Automobile Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.AUTOMOBILE_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Groceries Products\",\r\n                label: \"Groceries Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.GROCERIES_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Pets Products\",\r\n                label: \"Pets Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.PETS_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Sports Products\",\r\n                label: \"Sports Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.SPORTS_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Accessories\",\r\n                label: \"Accessories\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.ACCESSORIES_PRODUCTS}`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: \"New\",\r\n        label: \"New\",\r\n        path: `/products/${NAVBAR_TAB_KEYS.NEW_PRODUCTS}`\r\n    },\r\n    {\r\n        name: \"Old\",\r\n        label: \"Old\",\r\n        path: `/products/${NAVBAR_TAB_KEYS.OLD_PRODUCTS}`\r\n    },\r\n    {\r\n        name: \"Sell Your Products\",\r\n        label: \"Sell Your Products\",\r\n        path: SELL_YOUR_PRODUCTS\r\n    },\r\n    {\r\n        name: \"Contact\",\r\n        label: \"Contact\",\r\n        path: \"/contact\"\r\n    }\r\n]\r\n\r\nexport const UserProfileItems = [\r\n    {\r\n        name: \"User\",\r\n        label: \"User\",\r\n    }\r\n]\r\n\r\n","E:\\FYP\\geo-ecommerce\\src\\enums\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\history.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\buy_sell_info.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\store.js",["294","295"],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { reducer as UserReducer } from './user/userReducer';\r\nimport { reducer as AddSellerProductsReducer, sellerAllProductsReducer as SellerAllProductsReducer } from './seller_products/sellerProductsReducer';\r\nimport { reducer as AllProductsReducer } from './products/productsReducer';\r\nimport { reducer as AdminCustomerDetailsReducer } from './admin/adminReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { Select } from 'antd';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: [\r\n    // 'user',\r\n    \"addSellerProducts\",\r\n    \"adminCustomerDetails\"\r\n  ],\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  user: UserReducer,\r\n  addSellerProducts: AddSellerProductsReducer,\r\n  sellerAllProducts: SellerAllProductsReducer,\r\n  allProducts: AllProductsReducer,\r\n  adminCustomerDetails: AdminCustomerDetailsReducer,\r\n});\r\n\r\n//Persist Store to LocalStorage\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\n\r\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default () => {\r\n  let persistor = persistStore(store)\r\n  return { store, persistor }\r\n}\r\n","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userReducer.js",["296","297","298","299"],"import reduceReducers from 'reduce-reducers';\r\n\r\nimport {\r\n    USER_REGISTER,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_ERROR,\r\n    USER_REGISTER_RESET,\r\n    USER_LOGIN,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_ERROR,\r\n    USER_LOGOUT,\r\n    USER_LOGOUT_SUCCESS,\r\n    FETCH_USER,\r\n    FETCH_USER_SUCCESS,\r\n    FETCH_USER_ERROR,\r\n    USER_ERROR_RESET,\r\n    UPDATE_USER_RATING\r\n} from './userTypes';\r\n\r\nconst initialState = {\r\n    //Register User\r\n    registeringUser: false,\r\n    registrationSuccess: null,\r\n    registrationError: null,\r\n\r\n    //Logging State\r\n    loggingIn: false,\r\n    loggingError: null,\r\n\r\n    //Fetching User\r\n    gettingUser: false,\r\n    user: null,\r\n    gettingUserError: null\r\n}\r\n\r\nconst userRegisterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER:\r\n            return {\r\n                ...state,\r\n                registeringUser: true,\r\n                registrationSuccess: null,\r\n                registrationError: null\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            //User Response\r\n            const User = action?.payload;\r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                user: {\r\n                    user_id: User.user_id,\r\n                    first_name: User.first_name,\r\n                    last_name: User.last_name,\r\n                    email: User.email,\r\n                    application_rating: User.application_rating\r\n                },\r\n                registrationError: null\r\n            }\r\n        case USER_REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                registrationSuccess: null,\r\n                registrationError: action?.payload\r\n            }\r\n        case USER_REGISTER_RESET:\r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                registrationSuccess: null,\r\n                registrationError: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userLoginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            return {\r\n                ...state,\r\n                loggingIn: true,\r\n                loggingError: null\r\n            }\r\n        case USER_LOGIN_SUCCESS:\r\n            const User = action?.payload;\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: {\r\n                    user_id: User.user_id,\r\n                    first_name: User.first_name,\r\n                    last_name: User.last_name,\r\n                    email: User.email,\r\n                    application_rating: User.application_rating\r\n                },\r\n                loggingError: null\r\n            }\r\n        case USER_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: null,\r\n                loggingError: action?.payload\r\n            }\r\n        case UPDATE_USER_RATING:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    application_rating: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userLogoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: null,\r\n                loggingError: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst userErrorReset = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_ERROR_RESET:\r\n            return {\r\n                ...state,\r\n                loggingError: null,\r\n                registrationError: null\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const reducer = reduceReducers(userRegisterReducer, userLoginReducer, userLogoutReducer, userErrorReset);","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userActions.js",["300","301","302","303","304"],"import axios from 'axios';\r\nimport { API_URL } from '../../config';\r\nimport { setAuthHeaders, removeAuthHeaders } from '../../services/auth';\r\nimport { removeToken } from '../../utils/storage';\r\n// import history from '../../utils/history';\r\nimport {\r\n    FETCH_USER,\r\n    FETCH_USER_SUCCESS,\r\n    FETCH_USER_ERROR,\r\n    USER_REGISTER,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_ERROR,\r\n    USER_REGISTER_RESET,\r\n    USER_LOGIN,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_ERROR,\r\n    USER_LOGOUT,\r\n    USER_LOGOUT_SUCCESS,\r\n    USER_ERROR_RESET,\r\n    UPDATE_USER_RATING\r\n} from './userTypes';\r\n\r\nconst onFetchUser = () => {\r\n    return {\r\n        type: FETCH_USER\r\n    }\r\n}\r\n\r\nconst onFetchUserSuccess = (user) => {\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        payload: user\r\n    }\r\n}\r\n\r\nconst onFetchUserError = (error) => {\r\n    return {\r\n        type: FETCH_USER_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst onRegisterUser = () => {\r\n    return {\r\n        type: USER_REGISTER,\r\n\r\n    }\r\n}\r\n\r\nconst onRegisterUserSuccess = (data) => {\r\n    return {\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst onRegisterUserError = (error) => {\r\n    return {\r\n        type: USER_REGISTER_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst onRegisterUserReset = () => {\r\n    return {\r\n        type: USER_REGISTER_RESET\r\n    }\r\n}\r\n\r\nconst onUserLogin = () => {\r\n    return {\r\n        type: USER_LOGIN\r\n    }\r\n}\r\n\r\nconst onUserLoginSuccess = (data) => {\r\n    return {\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst onUserLoginError = (error) => {\r\n    return {\r\n        type: USER_LOGIN_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst onUserLogout = () => {\r\n    return {\r\n        type: USER_LOGOUT\r\n    }\r\n}\r\n\r\nconst onUserLogoutSuccess = () => {\r\n    return {\r\n        type: USER_LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\nexport const onUserErrorReset = () => {\r\n    return {\r\n        type: USER_ERROR_RESET\r\n    }\r\n}\r\n\r\nexport const onUserRatingUpdate = (data) => {\r\n    return {\r\n        type: UPDATE_USER_RATING,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const registerUser = (userData, history) => {\r\n    return (dispatch) => {\r\n        dispatch(onRegisterUser());\r\n        axios.post(`${API_URL}/users/register`, userData)\r\n            .then(res => {\r\n                dispatch(onRegisterUserSuccess(res.data.user));\r\n                localStorage.setItem(\"user\", res.data.token);\r\n\r\n                //Tokenization\r\n                setAuthHeaders();\r\n\r\n                history.push(\"/\");\r\n\r\n            }).catch(err => {\r\n                if (err.response.data.error) {\r\n                    dispatch(onRegisterUserError(err.response.data.error.details[0][\"message\"]));\r\n                } else {\r\n                    dispatch(onRegisterUserError(err.response.data));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const loginUser = (userData, history) => {\r\n    return (dispatch) => {\r\n        const rememberMe = userData.rememberMe;\r\n        //Remove Remember Me\r\n        delete userData.rememberMe;\r\n\r\n        dispatch(onUserLogin());\r\n        axios.post(`${API_URL}/users/login`, userData)\r\n            .then(res => {\r\n                dispatch(onUserLoginSuccess(res.data.user));\r\n                if (rememberMe) {\r\n                    localStorage.setItem(\"user\", res.data.token);\r\n                } else {\r\n                    sessionStorage.setItem(\"user\", res.data.token);\r\n                }\r\n\r\n                //Tokenization\r\n                setAuthHeaders();\r\n\r\n                history.push(\"/\");\r\n\r\n\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n                if (err.response.data.error) {\r\n                    dispatch(onUserLoginError(err.response.data.error.details[0][\"message\"]));\r\n                } else {\r\n                    dispatch(onUserLoginError(err.response.data.message));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logoutUser = (history) => {\r\n    return (dispatch) => {\r\n        dispatch(onUserLogoutSuccess());\r\n\r\n        //Remove Authentication and Tokens\r\n        removeAuthHeaders();\r\n        removeToken();\r\n        localStorage.removeItem(\"persist:root\");\r\n        history.push(\"/\");\r\n    }\r\n}","E:\\FYP\\geo-ecommerce\\src\\services\\auth.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\storage.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\how_saman_works_info.js",["305","306"],"import React from 'react';\r\nimport { Row, Col, Image } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Fragment } from 'react';\r\nimport { HowSamanWorksMainDiv } from '../style';\r\nimport WhySamanBuyImage from '../../../assests/images/why_saman_buy.png';\r\nimport WhySamanSellImage from '../../../assests/images/why_saman_sell.png';\r\n\r\nconst HowSamanWorksDiv = () => {\r\n    return (\r\n        <HowSamanWorksMainDiv>\r\n            <Row justify=\"center\">\r\n                <Col>\r\n                    <h2 className=\"how-it-works-title\">Why Saman.com?</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col\r\n                    // md={7}\r\n                    // lg={7}\r\n                    // xs={24}\r\n                    style={{\r\n                        textAlign: \"center\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"how-it-works-info\">Saman.com Provides a New Way<br />To Make Trades Faster Anywhere, Anytime.</h1>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row justify=\"center\" style={{\r\n                textAlign: 'center',\r\n                alignItems: \"baseline\"\r\n            }}\r\n\r\n            >\r\n                <Col\r\n                    md={4}\r\n\r\n                >\r\n                    <div>\r\n                        <Image\r\n                            src={WhySamanBuyImage}\r\n                            preview={false}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-headers\">Buy from your closest seller.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-contents\">Saman recommends you products from the sellers that are nearest to you for your faster delivery .</p>\r\n                    </div>\r\n                </Col>\r\n                <Col\r\n                    md={4}\r\n                    offset={2}\r\n                >\r\n                    <div>\r\n                        <Image\r\n                            src={WhySamanSellImage}\r\n                            width={100}\r\n                            preview={false}\r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-headers\">Buy from your closest seller.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-contents\">Saman recommends you products from the sellers that are nearest to you for your faster delivery .</p>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col\r\n                    md={4}\r\n                    offset={2}\r\n                >\r\n                    <div>\r\n                        <Image\r\n                            src={WhySamanBuyImage}\r\n                            preview={false}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-headers\">Buy from your closest seller.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-contents\">Saman recommends you products from the sellers that are nearest to you for your faster delivery .</p>\r\n                    </div>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n        </HowSamanWorksMainDiv>\r\n    )\r\n}\r\n\r\nexport default HowSamanWorksDiv;","E:\\FYP\\geo-ecommerce\\src\\routes.js",[],"E:\\FYP\\geo-ecommerce\\src\\layout\\blank_layout.js",[],"E:\\FYP\\geo-ecommerce\\src\\layout\\conditional_layout.js",["307"],"import Layout, { Content, Header } from \"antd/lib/layout/layout\";\r\nimport Navbar from \"../components/nav_bar\";\r\n\r\nconst ConditionalLayout=({displaySearchBar,children})=>{        \r\n    return(\r\n        <Layout\r\n            style={{\r\n                backgroundColor:\"#fff\"\r\n            }}\r\n        >\r\n            <Content>\r\n            <Navbar displaySearchBar={displaySearchBar}/>\r\n                {children}\r\n            </Content>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default ConditionalLayout;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\index.js",["308","309"],"import { useState, useEffect } from 'react';\r\nimport { CustomTab, CustomTabPane } from './style';\r\nimport SellProductsTab from './components/sell_products_tab';\r\nimport SellerStoreTab from './components/your_store_tab';\r\nimport { getAllSellerProducts } from '../../redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst SellYourProductsPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector(state => state.user.user?.user_id);\r\n    const addingSellerProductsSuccess = useSelector(state => state.addSellerProducts?.addingSellerProductsSuccess);\r\n\r\n    //Get Seller All Product Details\r\n    useEffect(() => {\r\n        dispatch(getAllSellerProducts(userId));\r\n    }, [addingSellerProductsSuccess]);\r\n\r\n\r\n    return (\r\n        <CustomTab defaultActiveKey=\"1\" >\r\n            <CustomTabPane tab=\"Sell Products\" key=\"1\">\r\n                <SellProductsTab />\r\n            </CustomTabPane>\r\n            <CustomTabPane tab=\"Your Store\" key=\"2\">\r\n                <SellerStoreTab />\r\n            </CustomTabPane>\r\n            <CustomTabPane tab=\"Sold Products\" key=\"3\">\r\n                Contents of Sold Products\r\n            </CustomTabPane>\r\n            <CustomTabPane tab=\"Orders\" key=\"4\">\r\n                Contents of Orders\r\n            </CustomTabPane>\r\n        </CustomTab>\r\n    )\r\n}\r\n\r\nexport default SellYourProductsPage;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\index.js",["310","311"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Row, Col, Select, Input, Button, message, notification } from 'antd';\r\nimport { DollarOutlined } from '@ant-design/icons';\r\nimport ProductDetailTable from './productDetailTable';\r\nimport UploadProductImages from './uploadImageComponent';\r\nimport { SELL_YOUR_PRODUCTS_PRODUCT_TYPES } from '../../../../enums';\r\nimport { addSellerProducts, onAddSellerProductsReset } from '../../../../redux';\r\n\r\n//Import Styles\r\nimport {\r\n    SellProductsMainDiv\r\n} from './style';\r\n\r\nconst SellProductsTab = () => {\r\n\r\n    //States\r\n    const [totalImages, setTotalImages] = useState([]);\r\n    const [productDetails, setProductDetails] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_id = useSelector(state => state.user.user?.user_id);\r\n    const addingProduct = useSelector(state => state.addSellerProducts?.addingSellerProducts);\r\n    const addingSellerProductsSuccess = useSelector(state => state.addSellerProducts?.addingSellerProductsSuccess);\r\n    const addingSellerProductsError = useSelector(state => state.addSellerProducts?.addingSellerProductsError);\r\n\r\n    useEffect(() => {\r\n        dispatch(onAddSellerProductsReset());\r\n    });\r\n\r\n    /* Notifications Use Effect*/\r\n    useEffect(() => {\r\n\r\n        addingSellerProductsSuccess && (\r\n            notification.success({\r\n                message: addingSellerProductsSuccess,\r\n                duration: 3\r\n            })\r\n        )\r\n\r\n\r\n\r\n        addingSellerProductsError && (\r\n            notification.error({\r\n                message: addingSellerProductsError,\r\n                duration: 3\r\n            })\r\n        )\r\n\r\n    }, [addingSellerProductsSuccess, addingSellerProductsError])\r\n\r\n    const [form] = Form.useForm();\r\n    //Form Finish\r\n    const onFinish = (values) => {\r\n        totalImages.length === 0 && message.error(\"Atleast one image is required.\");\r\n        productDetails.length === 0 && message.error(\"Atleast one product detail is required.\");\r\n\r\n        if (totalImages.length != 0 && productDetails.length != 0) {\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"user_id\", user_id);\r\n            formData.append(\"productName\", values.productName);\r\n            formData.append(\"usedProduct\", values.usedProduct);\r\n            formData.append(\"productType\", values.productType);\r\n            formData.append(\"productSubType\", values.productSubType);\r\n            formData.append(\"quantity\", values.quantity);\r\n            formData.append(\"price\", values.price);\r\n            formData.append(\"productDetails\", JSON.stringify(productDetails));\r\n            totalImages.forEach(image => {\r\n                formData.append(\"imagesList\", image);\r\n            });\r\n            dispatch(addSellerProducts(formData));\r\n            //Clearing Fields and Arrays\r\n            form.resetFields()\r\n            setTotalImages([])\r\n            setProductDetails([])\r\n        }\r\n    }\r\n\r\n    const onFinishFailed = ({ errorFields }) => {\r\n        if (errorFields) {\r\n            message.error(\"All required fields must be filled.\");\r\n        }\r\n    }\r\n\r\n    const initialValues = {\r\n        usedProduct: \"no\"\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SellProductsMainDiv>\r\n                <Form\r\n                    form={form}\r\n                    id=\"sellProductsForm\"\r\n                    labelCol={{\r\n                        md: { span: 9 },\r\n                        xs: { span: 9 }\r\n                    }}\r\n                    wrapperCol={{\r\n                        md: { span: 14 },\r\n                        xs: { span: 14 }\r\n                    }}\r\n                    name=\"sellProductsForm\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    initialValues={initialValues}\r\n                >\r\n\r\n                    <h1>Product Informations</h1>\r\n\r\n\r\n                    <Row gutter={24}>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Product Name\"\r\n                                name=\"productName\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Input placeholder=\"Enter Product Name\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Used Product\"\r\n                                name=\"usedProduct\"\r\n                            >\r\n                                <Select>\r\n                                    <Select.Option value=\"yes\">Yes</Select.Option>\r\n                                    <Select.Option value=\"no\">No</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Product Type\"\r\n                                name=\"productType\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Select required>\r\n                                    {SELL_YOUR_PRODUCTS_PRODUCT_TYPES.map((data, i) => (\r\n                                        <Select.Option key={i} value={data.value}>{data.name}</Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Product Sub Type\"\r\n                                name=\"productSubType\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Select\r\n                                    showSearch\r\n                                >\r\n                                    {SELL_YOUR_PRODUCTS_PRODUCT_TYPES.map((type, i) => (\r\n                                        <Select.OptGroup label={type.name} key={i}>\r\n                                            {type.subGroup.map((subType, j) => {\r\n                                                return <Select.Option key={subType.value} value={subType.value}>{subType.name}</Select.Option>\r\n                                            })}\r\n                                        </Select.OptGroup>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Quantity\"\r\n                                name=\"quantity\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"Products Available\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Price\"\r\n                                name=\"price\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Input placeholder=\"Product Price\" type=\"number\" prefix={<DollarOutlined style={{ fontSize: \"1rem\", paddingRight: \"5px\" }} />} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <ProductDetailTable productDetails={productDetails} setProductDetails={setProductDetails} />\r\n                    <h1 style={{ margin: \"30px 0px\" }}>Upload Product Images</h1>\r\n                    {/* <Form.Item> */}\r\n                    <UploadProductImages totalImages={totalImages} setTotalImages={setTotalImages} />\r\n                    {/* </Form.Item> */}\r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            span: 24\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{\r\n                                float: \"right\",\r\n                                marginTop: \"40px\"\r\n                            }}\r\n                            className=\"form-submit\"\r\n                            loading={addingProduct}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n            </SellProductsMainDiv>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SellProductsTab;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\productDetailTable.js",["312","313","314","315"],"import { useRef } from 'react';\r\nimport { Table, Button, Row, Col, Input,Form } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst ProductDetailTable = ({ productDetails, setProductDetails }) => {\r\n\r\n    const detailInputRef = useRef(\"\");\r\n\r\n    const handleAddDetail = () => {\r\n        const inputValue = detailInputRef.current.state.value;\r\n        if (!inputValue || inputValue.trim() == \"\") {\r\n            detailInputRef.current.input.style.border = \"1px solid red\";\r\n        } else {\r\n            setProductDetails((prevState) => [...prevState, {\r\n                productDetail: inputValue,\r\n                uid: uuid()\r\n            }]);\r\n            //Clear Input Field            \r\n            detailInputRef.current.state.value=\"\";\r\n        }\r\n    }\r\n\r\n    //Detail Table Columns\r\n    const productDetailColumns = [\r\n        {\r\n            title: \"Details\",\r\n            dataIndex: \"details\",\r\n            key: \"details\",\r\n\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"action\",\r\n            key: \"action\",\r\n            width: \"20%\",\r\n            align: \"center\",\r\n            render: (text, record, index) => (\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<DeleteOutlined />}\r\n                    onClick={() => {\r\n\r\n                        // Remove Details                        \r\n                        let removedDetailsArr = productDetails.filter(data => data.uid != record.uid);\r\n                        setProductDetails(removedDetailsArr);\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n\r\n    ];\r\n\r\n    const productDetailTableData = productDetails.map((data, i) => ({\r\n        key: i,\r\n        details: data.productDetail,\r\n        uid: data.uid\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{ margin: \"30px 0px\" }}>Add Product Details</h1>\r\n            <Row style={{ margin: \"30px 0px\" }}>\r\n\r\n                <Col\r\n                    md={{ span: 18, offset: 2 }}\r\n                    xs={24}\r\n                >                    \r\n                        <Input\r\n                            ref={detailInputRef}\r\n                            onChange={() => {\r\n                                detailInputRef.current.input.style.border = \"1px solid #d9d9d9\";\r\n                            }}\r\n                        />\r\n                </Col>\r\n                <Col\r\n                    md={4}\r\n                    xs={24}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={handleAddDetail}\r\n                    >Add Detail</Button>\r\n                </Col>\r\n            </Row>\r\n            <Table\r\n                columns={productDetailColumns}\r\n                bordered={true}\r\n                dataSource={productDetailTableData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductDetailTable;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\uploadImageComponent.js",["316","317","318"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Upload, message, Button } from 'antd';\r\nimport { InboxOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst UploadProductImages = ({totalImages, setTotalImages}) => {\r\n    \r\n    const [imageAcceptedBool, setImageAcceptedBool] = useState(false);    \r\n\r\n    //Hide Image Table If No Images\r\n    useEffect(() => {\r\n        //Checking Total Image Array Length \r\n        if (totalImages.length == 0) {\r\n            setImageAcceptedBool(false);\r\n        }\r\n    }, [totalImages]);\r\n\r\n    //Antd uploader        \r\n    const { Dragger } = Upload;\r\n\r\n    //Upload Dragger Props\r\n    const draggerProps = {\r\n        name: \"imageUploader\",\r\n        multiple: true,\r\n        // accept: \".png,.jpg,.jpeg\",\r\n        showUploadList: false,\r\n        customRequest: ({file, onSuccess }) => {\r\n            onSuccess('ok');\r\n        },\r\n        beforeUpload: fileInfo => {\r\n            if (fileInfo.type.split(\"/\")[0] === \"image\") {\r\n                return true;\r\n            } else {\r\n                message.error(\"Uploaded file must be image.\");\r\n                return false;\r\n            }\r\n        },\r\n        onChange(fileInfo) {\r\n            let filteredImage = [];\r\n            if (fileInfo.file.status == \"done\") {                \r\n                fileInfo.fileList.forEach(file => {\r\n                    let fileType = file.type.split(\"/\")[0];\r\n                    if (fileType === \"image\") {                        \r\n                        file.originFileObj.fileName=file.originFileObj.name;\r\n                        filteredImage.push(file.originFileObj);\r\n                    }\r\n                });\r\n                setTotalImages(filteredImage);\r\n                setImageAcceptedBool(true);                \r\n\r\n            }\r\n        },\r\n        style: {\r\n            minHeight: \"200px\",\r\n            alignItems: \"center\",\r\n            display: \"flex\"\r\n        }\r\n    };\r\n\r\n    //Images Table Columns\r\n    const imageTableColumns = [\r\n        {\r\n            title: \"Image Name\",\r\n            dataIndex: \"imageName\",\r\n            key: \"imageName\",\r\n\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"action\",\r\n            key: \"action\",\r\n            width: \"20%\",\r\n            align: \"center\",\r\n            render: (text, record, index) => (\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<DeleteOutlined />}\r\n                    onClick={() => {\r\n                        //Remove Image\r\n                        let removedImageArr = totalImages.filter(data => data.uid != record.uid);\r\n                        setTotalImages([...removedImageArr]);\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ];\r\n\r\n    \r\n    const imageTableData = totalImages.map((imageObj, i) => ({\r\n        key: i,\r\n        imageName: imageObj.name,\r\n        uid: imageObj.uid\r\n    }));\r\n\r\n    return (\r\n        <div>\r\n            <Dragger\r\n                {...draggerProps}\r\n                fileList={totalImages} //Resetting Antd Upload File List \r\n            >\r\n                <InboxOutlined style={{ fontSize: \"2rem\" }} />\r\n                <p className=\"ant-upload-text\">Click or drag images to upload.</p>\r\n            </Dragger>\r\n            {\r\n                imageAcceptedBool ?\r\n                    <div>\r\n                        <Table\r\n                            columns={imageTableColumns}\r\n                            bordered={true}\r\n                            dataSource={imageTableData}\r\n                            style={{ padding: \"10px 0px\" }}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default UploadProductImages;","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsActions.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsReducer.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\your_store_tab\\index.js",["319","320"],"import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Table, Alert, Button, Image, Modal, Input, message, notification } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { deleteSellerProduct, onDeleteSellerProductReset, updateSellerProduct, onUpdateSellerProductReset, getAllSellerProducts } from '../../../../redux';\r\nimport $ from 'jquery';\r\n\r\nconst SellerStoreTab = () => {\r\n\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n    const [deleteModalInput, setDeleteModalInput] = useState(\"\");\r\n    const [productIdToDelete, setProductIdToDelete] = useState(null);\r\n    const [productNameToDelete, setProductNameToDelete] = useState(null);\r\n    const [productNameToUpdate, setProductNameToUpdate] = useState(null);\r\n    const [productIdToUpdate, setProductIdToUpdate] = useState(null);\r\n    const [productQuantityToUpdate, setProductQuantityToUpdate] = useState(null);\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.user?.user);\r\n    const gettingSellerAllProducts = useSelector(state => state.sellerAllProducts?.gettingAllSellerProducts);\r\n    const gettingAllSellerProductsError = useSelector(state => state.sellerAllProducts?.gettingAllSellerProductsError);\r\n    const allSellerProducts = useSelector(state => state.sellerAllProducts?.allSellerProducts);\r\n    const deletingSellerProductSuccess = useSelector(state => state.addSellerProducts?.deletingSellerProductSuccess);\r\n    const deletingSellerProductError = useSelector(state => state.addSellerProducts?.deletingSellerProductError);\r\n    const updatingSellerProductSuccess = useSelector(state => state.addSellerProducts?.updatingSellerProductSuccess);\r\n    const updatingSellerProductError = useSelector(state => state.addSellerProducts?.updatingSellerProductError);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(onDeleteSellerProductReset());\r\n        dispatch(onUpdateSellerProductReset());\r\n    })\r\n\r\n    //Table Data\r\n    useEffect(() => {\r\n        setProducts(allSellerProducts?.seller_products_details);\r\n    }, [allSellerProducts]);\r\n\r\n\r\n    useEffect(() => {\r\n        const userId = user?.user_id;\r\n        dispatch(getAllSellerProducts(userId));\r\n    }, [updatingSellerProductSuccess])\r\n\r\n    //Notifications Use Effects\r\n    useEffect(() => {\r\n        deletingSellerProductSuccess &&\r\n            (\r\n                notification.success({\r\n                    message: deletingSellerProductSuccess,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n        deletingSellerProductError &&\r\n            (\r\n                notification.error({\r\n                    message: deletingSellerProductError,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n\r\n        updatingSellerProductSuccess &&\r\n            (\r\n                notification.success({\r\n                    message: updatingSellerProductSuccess,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n\r\n        updatingSellerProductError &&\r\n            (\r\n                notification.error({\r\n                    message: updatingSellerProductError,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n    }, [\r\n        deletingSellerProductSuccess,\r\n        deletingSellerProductError,\r\n        updatingSellerProductSuccess,\r\n        updatingSellerProductError\r\n    ]);\r\n\r\n\r\n    const openDeleteModal = (data) => {\r\n        setProductIdToDelete(data.productId);\r\n        setProductNameToDelete(data.productName);\r\n        setShowDeleteModal(true);\r\n    }\r\n\r\n    const deleteProduct = () => {\r\n        const user_id = allSellerProducts?.user_id;\r\n\r\n        const value = {\r\n            user_id: user_id,\r\n            product_id: productIdToDelete\r\n        }\r\n\r\n        if (deleteModalInput === \"DELETE\") {\r\n            dispatch(deleteSellerProduct(value));\r\n\r\n            let allSellerProductsFiltered = products?.filter(data => data.product_id !== value.product_id);\r\n\r\n            setProducts([...allSellerProductsFiltered]);\r\n            setProductIdToDelete(null);\r\n            setProductNameToDelete(null);\r\n            setDeleteModalInput(null);\r\n            setShowDeleteModal(false);\r\n        } else {\r\n            $(\"#modal-input\").css({\r\n                \"borderColor\": \"red\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const cancelDelete = () => {\r\n        setProductIdToDelete(null);\r\n        setProductNameToDelete(null);\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    const openUpdateModal = (data) => {\r\n        setProductIdToUpdate(data.productId);\r\n        setProductNameToUpdate(data.productName);\r\n        setProductQuantityToUpdate(data.productQuantity);\r\n        setShowUpdateModal(true);\r\n    }\r\n\r\n    const updateProduct = () => {\r\n        const user_id = allSellerProducts?.user_id;\r\n        const value = {\r\n            user_id: user_id,\r\n            product_id: productIdToUpdate,\r\n            product_quantity: productQuantityToUpdate\r\n        }\r\n        dispatch(updateSellerProduct(value));\r\n    }\r\n\r\n    const cancelUpdate = () => {\r\n        setProductIdToUpdate(null);\r\n        setProductNameToUpdate(null);\r\n        setProductQuantityToUpdate(null);\r\n        setShowUpdateModal(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: \"productName\",\r\n            key: \"productName\",\r\n        },\r\n        {\r\n            title: 'Product Quantity',\r\n            dataIndex: \"productQuantity\",\r\n            key: \"productQuantity\",\r\n            render: (text, record, index) => {\r\n                return (\r\n                    <Input value={record.productQuantity}\r\n                        onClick={() => { openUpdateModal(record) }}\r\n                    ></Input>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Product Type',\r\n            dataIndex: \"productType\",\r\n            key: \"productType\",\r\n\r\n        },\r\n        {\r\n            title: 'Product Sub Type',\r\n            dataIndex: \"productSubType\",\r\n            key: \"productSubType\",\r\n\r\n        },\r\n        {\r\n            title: 'Images',\r\n            dataIndex: 'images',\r\n            key: \"images\",\r\n            responsive: ['md'],\r\n            width: 200,\r\n            ellipsis: {\r\n                showTitle: true,\r\n            },\r\n            render: (text, record, index) => {\r\n                return (\r\n                    <>\r\n                        <Image.PreviewGroup\r\n                            style={{\r\n                                width: \"400\"\r\n                            }}\r\n                        >\r\n                            {record?.productImages?.map((data, i) => (\r\n                                <Image\r\n                                    style={{\r\n                                        padding: \"5px\"\r\n                                    }}\r\n                                    key={i}\r\n                                    width={100}\r\n                                    src={require(`../../../../assests/images/product_images/${data?.image ? data?.image : \"\"}`).default || \"\"}\r\n                                />\r\n                            ))}\r\n                        </Image.PreviewGroup>\r\n                    </>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"action\",\r\n            key: \"action\",\r\n            align: \"center\",\r\n            render: (text, record, index) =>\r\n            (\r\n                <Button\r\n                    type=\"danger\"\r\n                    icon={<DeleteOutlined />}\r\n                    onClick={() => {\r\n                        openDeleteModal(record);\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ]\r\n\r\n    const tableData = products?.map((data, index) => ({\r\n        key: index,\r\n        productName: data?.product_name,\r\n        productQuantity: data?.product_quantity,\r\n        productType: data?.product_type,\r\n        productSubType: data?.product_sub_type,\r\n        productId: data?.product_id,\r\n        productImages: data?.product_images\r\n    }));\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: \"white\"\r\n            }}\r\n        >\r\n            {/* Alerts */}\r\n            {gettingAllSellerProductsError &&\r\n                (\r\n                    window.scrollTo(0, 0),\r\n                    <Alert type=\"error\" message={gettingAllSellerProductsError} banner closable />\r\n                )\r\n            }\r\n\r\n            <Table\r\n                columns={columns}\r\n                loading={gettingSellerAllProducts}\r\n                dataSource={tableData}\r\n                bordered\r\n                style={{\r\n                    overflow: \"auto\"\r\n                }}\r\n            />\r\n\r\n            <Modal\r\n                title={`Delete Product ${productNameToDelete}`}\r\n                visible={showDeleteModal}\r\n                onOk={deleteProduct}\r\n                onCancel={cancelDelete}\r\n                maskClosable={false}\r\n            >\r\n                <p>DELETING THE PRODUCT WILL DELETE ALL ITS IMAGES AND DETAILS.</p>\r\n                <p>TYPE \"DELETE\" AND CLICK OK BELOW TO DELETE.</p>\r\n                <Input\r\n                    id=\"modal-input\"\r\n                    value={deleteModalInput}\r\n                    onChange={(e) => {\r\n                        $(\"#modal-input\").css({\r\n                            \"borderColor\": \"black\"\r\n                        });\r\n                        setDeleteModalInput(e.target.value);\r\n                    }}\r\n                >\r\n                </Input>\r\n            </Modal>\r\n            <Modal\r\n                title={`Upload Product ${productNameToUpdate}`}\r\n                visible={showUpdateModal}\r\n                onOk={updateProduct}\r\n                onCancel={cancelUpdate}\r\n                maskClosable={false}\r\n            >\r\n                <p>Product Quantity</p>\r\n                <Input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    value={productQuantityToUpdate}\r\n                    onChange={(e) => {\r\n                        setProductQuantityToUpdate(e.target.value);\r\n                    }}\r\n                >\r\n                </Input>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SellerStoreTab;","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\index.js",["321","322","323","324","325","326","327"],"import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MainProductsLayout from './components/main_layout';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { getAllProducts } from '../../redux';\r\nimport { message } from 'antd';\r\nimport { getProductType } from \"../../utils/product_type\";\r\nimport { PRODUCT_TYPES, SELL_YOUR_PRODUCTS_PRODUCT_TYPES } from '../../enums';\r\n\r\nconst ProductsPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { product_type } = useParams();\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [productHeader, setProductHeader] = useState();\r\n\r\n    const user_id = useSelector(state => state.user.user?.user_id);\r\n    const gettingAllProductsError = useSelector(state => state.allProducts?.gettingAllProductsError);\r\n    const allProducts = useSelector(state => state.allProducts?.allProducts);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllProducts(user_id));\r\n    }, []);\r\n\r\n\r\n    //Error Message Effects\r\n    useEffect(() => {\r\n        {\r\n            gettingAllProductsError &&\r\n                message.error(gettingAllProductsError)\r\n        }\r\n    }, [gettingAllProductsError]);\r\n\r\n    useEffect(() => {\r\n        let filteredProducts;\r\n        let productHeader;\r\n\r\n        //Get Type From param to match with data from database \r\n        const getProductTypeFromParam = getProductType(product_type);\r\n        if (getProductTypeFromParam == PRODUCT_TYPES.NEW_PRODUCTS) {\r\n            productHeader = \"New Products\";\r\n            filteredProducts = allProducts?.filter(item => item?.is_used_product === true);\r\n        } else if (getProductTypeFromParam == PRODUCT_TYPES.OLD_PRODUCTS) {\r\n            productHeader = \"Old Products\";\r\n            filteredProducts = allProducts?.filter(item => item?.is_used_product === false);\r\n        } else if (getProductTypeFromParam == PRODUCT_TYPES.ALL_PRODUCTS) {\r\n            productHeader = \"All Products\";\r\n            filteredProducts = allProducts ? allProducts : [];\r\n        } else {\r\n            productHeader = SELL_YOUR_PRODUCTS_PRODUCT_TYPES?.filter(type => type.value == getProductTypeFromParam)?.[0]?.[\"name\"];\r\n            filteredProducts = allProducts?.filter(item => item?.product_type == getProductTypeFromParam);\r\n        }\r\n        setProductHeader(productHeader);\r\n        setProducts(filteredProducts);\r\n\r\n    }, [allProducts, product_type]);\r\n\r\n    return (\r\n        <div>\r\n            <MainProductsLayout allProducts={products} productHeader={productHeader} />\r\n        </div>\r\n    )\r\n}\r\nexport default ProductsPage;","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\main_layout.js",["328","329","330"],"import { useSelector } from 'react-redux';\r\nimport { Image } from 'antd';\r\nimport { ExpandAltOutlined, ExpandOutlined } from '@ant-design/icons';\r\nimport { PageLayout, MainDiv, ListDiv, CardDiv, ListItemDiv } from './style';\r\nimport $ from 'jquery';\r\nimport { useEffect, useState } from 'react';\r\nimport ProductModal from './product_modal';\r\n\r\n\r\nconst MainProductsLayout = ({ allProducts, productHeader }) => {\r\n\r\n    const [searchInputText, setSearchInputText] = useState(\"\");\r\n    const [products, setProducts] = useState([]);\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n    //Set Selected Product States\r\n    const [selectedProduct, setSelectedProduct] = useState();\r\n    const [openProductModalBool, setOpenProductModalBool] = useState(false);\r\n\r\n    const gettingAllProducts = useSelector(state => state.allProducts?.allSellerProducts);\r\n\r\n    useEffect(() => {\r\n        setProducts(allProducts);\r\n        setFilteredProducts(allProducts);\r\n    }, [allProducts]);\r\n\r\n    useEffect(() => {\r\n        let filteredSearchProducts;\r\n\r\n        filteredSearchProducts = products?.filter(product => {\r\n            if (product.product_name.toLowerCase().includes(searchInputText) ||\r\n                product.product_type.toLowerCase().includes(searchInputText) ||\r\n                product.product_sub_type.toLowerCase().includes(searchInputText) ||\r\n                product.product_price.toString().toLowerCase().includes(searchInputText)\r\n            ) {\r\n                return product;\r\n            }\r\n        });\r\n\r\n        setFilteredProducts(filteredSearchProducts);\r\n\r\n    }, [searchInputText])\r\n\r\n    const displaySearchInput = () => {\r\n        $(\"#searchIconDiv\").hide();\r\n        $(\"#searchInput\").show();\r\n        $(\"#searchInput\").focus();\r\n    };\r\n\r\n    const hideSearchInput = () => {\r\n        $(\"#searchIconDiv\").show();\r\n        $(\"#searchInput\").hide();\r\n    };\r\n\r\n    const handleSearchInputChange = (event) => {\r\n        let searchValue = $(\"#searchInput\").val().toLowerCase();\r\n        setSearchInputText(searchValue);\r\n    }\r\n\r\n    $(\"#searchInput\").on(\"input\", () => {\r\n        handleSearchInputChange();\r\n    });\r\n\r\n    //JQUERIES\r\n    $(\"#searchIconDiv\").on(\"click\", () => {\r\n        displaySearchInput();\r\n    });\r\n\r\n    $(\"#searchInput\").on(\"focusout\", () => {\r\n        hideSearchInput();\r\n    });\r\n\r\n\r\n    //Set Selected Products\r\n    const productOnClickHandler = (selectedItem) => {\r\n        setOpenProductModalBool(true);\r\n        setSelectedProduct(selectedItem)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <MainDiv>\r\n                <h1>{productHeader}</h1>\r\n                <ListDiv\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 2,\r\n                        lg: 4,\r\n                        xl: 2,\r\n                        xxl: 3,\r\n                    }}\r\n                    loading={gettingAllProducts}\r\n                    dataSource={filteredProducts}\r\n                    pagination={{\r\n                        pageSize: 10,\r\n                    }}\r\n                    renderItem={(item, i) => {\r\n\r\n                        return (\r\n                            <ListItemDiv>\r\n                                <CardDiv\r\n                                    hoverable={true}\r\n                                    extra={<ExpandAltOutlined className=\"expandable-icon\" onClick={() => productOnClickHandler(item)} />}\r\n                                    cover={<Image\r\n                                        key={i}\r\n                                        preview={false}\r\n                                        src={require(`../../../assests/images/product_images/${item?.product_images ? item?.product_images[0][\"image\"] : \"\"}`).default}\r\n                                        alt={item?.product_name}\r\n                                    />}\r\n                                >\r\n                                    <div className=\"card-contents\">\r\n                                        <div>\r\n                                            <h2>{item?.product_name}</h2>\r\n                                        </div>\r\n                                        <div>\r\n                                            <p className=\"product-price\">$ {item?.product_price}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </CardDiv>\r\n                            </ListItemDiv>\r\n                        )\r\n                    }}\r\n                />\r\n                <ProductModal\r\n                    openProductModalBool={openProductModalBool}\r\n                    setOpenProductModalBool={setOpenProductModalBool}\r\n                    selectedProduct={selectedProduct}\r\n                    setSelectedProduct={setSelectedProduct}\r\n                />\r\n\r\n            </MainDiv>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MainProductsLayout;","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsReducer.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsActions.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\product_type.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\product_modal.js",["331","332","333"],"import { Row, Col, Modal, Button } from \"antd\";\r\nimport { select } from \"async\";\r\nimport ImageGallery from 'react-image-gallery';\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport { ProductModalDiv } from './style';\r\n\r\n\r\nconst ProductModal = ({\r\n    openProductModalBool,\r\n    setOpenProductModalBool,\r\n    selectedProduct,\r\n    setSelectedProduct\r\n}) => {\r\n    const handleCloseModal = () => {\r\n        setOpenProductModalBool(false);\r\n        setSelectedProduct(null);\r\n    }\r\n\r\n    const imageGalleryProps = {\r\n        items: selectedProduct ? selectedProduct.product_images?.map((data, i) => (\r\n            {\r\n                original: data ? require(`../../../assests/images/product_images/${data[\"image\"]}`).default : \"\",\r\n                thumbnail: data ? require(`../../../assests/images/product_images/${data[\"image\"]}`).default : \"\",\r\n            }\r\n        )) : [],\r\n        showThumbnails: false,\r\n        showPlayButton: false,\r\n        autoPlay: true,\r\n        showIndex: true\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ProductModalDiv\r\n                centered\r\n                visible={openProductModalBool}\r\n                onCancel={() => handleCloseModal()}\r\n                width={800}\r\n                maskClosable={false}\r\n                footer={[\r\n                    <Button\r\n                        key=\"submit\"\r\n                        type=\"primary\"\r\n                    >\r\n                        Talk\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        md={12}\r\n                    >\r\n                        <ImageGallery {...imageGalleryProps} style={{ padding: \"10px\" }} />\r\n                    </Col>\r\n                    <Col\r\n                        md={{ span: 11, offset: 1 }}\r\n                    >\r\n                        <h1 id=\"product_name\">{selectedProduct?.product_name}</h1>\r\n                        <ul>\r\n                            {selectedProduct?.product_details.map((detail, i) => (\r\n                                console.log(i),\r\n                                <li key={i}>{detail?.product_detail}</li>\r\n                            )\r\n                            )}\r\n                        </ul>\r\n                        <h4>Product Available: {selectedProduct?.product_quantity}</h4>\r\n                        <h4>Price: ${selectedProduct?.product_price}</h4>\r\n                        <h4>Note: If you wish to buy the product, click the \"Talk\" button.</h4>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </ProductModalDiv>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductModal;","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\login\\index.js",["334","335","336"],"import React, { useState, useEffect} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Layout, Row, Col, Form, Input, Checkbox, Button, Divider, Image, Alert } from 'antd';\r\nimport { Content, Footer, Header } from 'antd/lib/layout/layout';\r\nimport { CustomizedButton} from '../../../components/login_sign_up_components';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport logo from '../../../assests/images/logo.png'\r\nimport { getAdminToken } from '../../../utils/storage';\r\n\r\n// import history  from '../../utils/history';\r\n\r\n\r\nconst LoginAdminPage = () => {\r\n\r\n    const history = useHistory();\r\n    const [loggingErrorMsg, setLogginErrorMsg]=useState(null);\r\n\r\n    \r\n    \r\n    const onFinish = (values) => {\r\n        let {username,password}=values;\r\n        if(username===\"admin\" && password===\"admin\"){\r\n            sessionStorage.setItem(\"admin\",username);\r\n            history.push(\"/admin/customers\");\r\n        }else{\r\n            setLogginErrorMsg(\"Incorrect Password!\");\r\n        }\r\n    }\r\n\r\n    // Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getAdminToken()) {\r\n            history.push(\"/admin/customers\");\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout >\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>                        \r\n                    </Row>\r\n                </Header>\r\n                <Content >\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Log into Admin Panel</h2>\r\n                        </Row>\r\n                        {loggingErrorMsg && (\r\n                            <Alert\r\n                                type=\"error\"\r\n                                message={loggingErrorMsg}\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row justify=\"center\" style={{ width: \"100vw\", paddingTop: \"1rem\" }}>\r\n                            <Col md={{span:8}}>\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 10 }}\r\n                                    name=\"loginForm\"\r\n                                    onFinish={onFinish}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[{ required: true, message: \"Please Enter Username!\" }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\", justifyContent:\"center\" }}\r\n                                        // wrapperCol={{\r\n                                        //     xs: { offset: 0, span: 16 },\r\n                                        //     md: { offset: 2, span: 16 },\r\n                                        // }}\r\n                                        name=\"logIn\"\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}                                            \r\n                                        >Log In</Button>\r\n                                    </Form.Item>                                    \r\n                                </Form>\r\n                            </Col>                            \r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default LoginAdminPage;","E:\\FYP\\geo-ecommerce\\src\\layout\\admin_layout.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\index.js",["337","338","339","340"],"import { Layout, Menu } from 'antd';\r\nimport { BrowserRouter as Router, Link, useHistory } from 'react-router-dom';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\nimport { NavBarDiv, NavBarMenu, NavBarMenuItem, LogoutButton } from './style';\r\nimport { NavbarItems } from './navbar_items';\r\nimport { removeAdminToken } from '../../utils/storage';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AdminNavBar = () => {\r\n    const history = useHistory();\r\n\r\n\r\n    const activeKey = history.location.pathname.split(\"/\")[2];\r\n\r\n\r\n    const logoutAdmin = () => {\r\n        removeAdminToken();\r\n        history.push(\"/admin/login\");\r\n    }\r\n\r\n    return (\r\n        <NavBarDiv>\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[activeKey]}>\r\n                {NavbarItems?.map(({ name, key, label, path, icon }, i) => (\r\n                    <NavBarMenuItem key={key} icon={icon}>\r\n                        <Link to={path}>\r\n                            {label}\r\n                        </Link>\r\n                    </ NavBarMenuItem>\r\n                ))}\r\n                <Menu.Item key=\"Logout\" icon={<LogoutOutlined />}>\r\n                    <LogoutButton\r\n                        onClick={() => { logoutAdmin() }}\r\n                    >\r\n                        Log Out\r\n                    </LogoutButton>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </NavBarDiv>\r\n    )\r\n}\r\n\r\nexport default AdminNavBar;","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\navbar_items.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\index.js",["341","342","343"],"import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table, notification, Button, Input, Modal } from \"antd\";\r\nimport { Table as ExtendedTable } from \"ant-table-extensions\";\r\nimport { DeleteOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { getAllCustomerDetails, deleteCustomer, onDeletingCustomerReset } from '../../../redux';\r\nimport { CustomerDetails, CustomerProductButton, ActionDiv } from './style';\r\nimport { Link } from 'react-router-dom';\r\nimport { ADMIN_NAV_BAR_KEYS } from '../../../enums';\r\nimport $ from 'jquery';\r\n\r\nconst AdminCustomerPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const gettingAllCustomerDetailsBool = useSelector(state => state.adminCustomerDetails?.gettingAllCustomerDetails);\r\n    const gettingAllCustomerDetailsError = useSelector(state => state.adminCustomerDetails?.gettingAllCustomerDetailsError);\r\n    const allCustomerDetails = useSelector(state => state.adminCustomerDetails?.customerDetails);\r\n\r\n    const deletingCustomerBool = useSelector(state => state.adminCustomerDetails?.deletingCustomer);\r\n    const deletingCustomerSuccess = useSelector(state => state.adminCustomerDetails?.deletingCustomerSuccess);\r\n    const deletingCustomerError = useSelector(state => state.adminCustomerDetails?.deletingCustomerError);\r\n\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [deleteModalInput, setDeleteModalInput] = useState(\"\");\r\n    const [userIdToDelete, setUserIdToDelete] = useState(null);\r\n    const [userNameToDelete, setUserNameToDelete] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        dispatch(onDeletingCustomerReset());\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCustomerDetails());\r\n    }, [deletingCustomerSuccess]);\r\n\r\n    useEffect(() => {\r\n        gettingAllCustomerDetailsError &&\r\n            (\r\n                notification.error({\r\n                    message: gettingAllCustomerDetailsError,\r\n                    duration: 3\r\n                })\r\n            )\r\n    }, [gettingAllCustomerDetailsError]);\r\n\r\n    useEffect(() => {\r\n        deletingCustomerSuccess &&\r\n            (\r\n                notification.success({\r\n                    message: deletingCustomerSuccess,\r\n                    duration: 3\r\n                })\r\n            );\r\n\r\n        deletingCustomerError &&\r\n            (\r\n                notification.error({\r\n                    message: deletingCustomerError,\r\n                    duration: 3\r\n                })\r\n            );\r\n\r\n    }, [deletingCustomerSuccess, deletingCustomerError])\r\n\r\n\r\n    const openDeleteModal = (data) => {\r\n        setUserIdToDelete(data.user_id);\r\n        setUserNameToDelete(data.name);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const deleteUser = () => {\r\n        const value = {\r\n            user_id: userIdToDelete,\r\n        }\r\n\r\n        if (deleteModalInput === \"DELETE\") {\r\n            dispatch(deleteCustomer(value));\r\n            setUserIdToDelete(null);\r\n            setUserNameToDelete(null);\r\n            setDeleteModalInput(null);\r\n            setShowDeleteModal(false);\r\n        } else {\r\n            $(\"#modal-input\").css({\r\n                \"borderColor\": \"red\"\r\n            });\r\n        }\r\n    };\r\n\r\n    const cancelDelete = () => {\r\n        setUserNameToDelete(null);\r\n        setUserIdToDelete(null);\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Customer Details\",\r\n            children: [\r\n                {\r\n                    title: \"Name\",\r\n                    dataIndex: \"name\",\r\n                    key: \"name\",\r\n                },\r\n                {\r\n                    title: \"Email\",\r\n                    dataIndex: \"email\",\r\n                    key: \"email\"\r\n                },\r\n                {\r\n                    title: \"Joined In\",\r\n                    dataIndex: \"date\",\r\n                    key: \"date\"\r\n                },\r\n                {\r\n                    title: \"Action\",\r\n                    dataIndex: \"action\",\r\n                    key: \"action\",\r\n                    align: \"center\",\r\n                    render: (text, record, index) => {\r\n                        return (\r\n                            <ActionDiv>\r\n                                <CustomerProductButton>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/admin/${ADMIN_NAV_BAR_KEYS.CUSTOMER_DETAILS}/product-details`,\r\n                                            state: { user_details: record }\r\n                                        }}\r\n                                    >\r\n                                        Products ({record?.products?.length})\r\n                                    </Link>\r\n                                </CustomerProductButton>\r\n                                <Button\r\n                                    type=\"danger\"\r\n                                    icon={<DeleteOutlined />}\r\n                                    onClick={() => {\r\n                                        openDeleteModal(record);\r\n                                    }}\r\n                                />\r\n                            </ActionDiv>\r\n                        )\r\n                    }\r\n                },\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const tableData = allCustomerDetails?.map((data, i) => ({\r\n        key: i,\r\n        user_id: data?.user_id,\r\n        name: `${data?.first_name} ${data?.last_name ? data.last_name : \"\"}`,\r\n        email: data?.email,\r\n        date: data?.createdAt ? new Date(data.createdAt).toLocaleString() : \"\",\r\n        products: data?.products\r\n    }));\r\n\r\n    return (\r\n        <CustomerDetails>\r\n            <ExtendedTable\r\n                dataSource={tableData}\r\n                columns={columns}\r\n                loading={gettingAllCustomerDetailsBool}\r\n                searchableProps={{\r\n                    inputProps: {\r\n                        prefix: <SearchOutlined />,\r\n                        style: {\r\n                            width: \"200px\"\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n            <Modal\r\n                title={`Delete User ${userNameToDelete}`}\r\n                visible={showDeleteModal}\r\n                onOk={deleteUser}\r\n                onCancel={cancelDelete}\r\n                maskClosable={false}\r\n            >\r\n                <p>DELETING THE USER WILL DELETE ALL THE USER'S DETAILS AND PRODUCTS.</p>\r\n                <p>TYPE \"DELETE\" AND CLICK OK BELOW TO DELETE.</p>\r\n                <Input\r\n                    id=\"modal-input\"\r\n                    value={deleteModalInput}\r\n                    onChange={(e) => {\r\n                        $(\"#modal-input\").css({\r\n                            \"borderColor\": \"black\"\r\n                        });\r\n                        setDeleteModalInput(e.target.value);\r\n                    }}\r\n                >\r\n                </Input>\r\n            </Modal>\r\n        </CustomerDetails>\r\n    )\r\n}\r\n\r\nexport default AdminCustomerPage;","E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminReducer.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminActions.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\index.js",["344","345"],"import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Button, Image, Modal, Input, message, notification } from 'antd';\r\nimport { DeleteOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { CustomerProductsDiv } from './style';\r\nimport { deleteSellerProduct, onDeleteSellerProductReset } from '../../../../redux';\r\nimport $ from 'jquery';\r\nimport { Table as ExtendedTable } from \"ant-table-extensions\";\r\n\r\nconst AdminCustomerProductDetails = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const deletingSellerProductSuccess = useSelector(state => state.addSellerProducts?.deletingSellerProductSuccess);\r\n    const deletingSellerProductError = useSelector(state => state.addSellerProducts?.deletingSellerProductError);\r\n    const user_name = history.location.state?.user_details?.name || null;\r\n    const user_id = history.location.state?.user_details?.user_id || null;\r\n    const user_products = history.location.state?.user_details?.products;\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [deleteModalInput, setDeleteModalInput] = useState(\"\");\r\n    const [productIdToDelete, setProductIdToDelete] = useState(null);\r\n    const [productNameToDelete, setProductNameToDelete] = useState(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(onDeleteSellerProductReset());\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!history.location.state) {\r\n            history.push(\"/admin/customers\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setProducts(user_products);\r\n    }, [user_products]);\r\n\r\n    //Notifications Use Effects\r\n    useEffect(() => {\r\n        deletingSellerProductSuccess &&\r\n            (\r\n                notification.success({\r\n                    message: deletingSellerProductSuccess,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n        deletingSellerProductError &&\r\n            (\r\n                notification.error({\r\n                    message: deletingSellerProductError,\r\n                    duration: 3\r\n                })\r\n            )\r\n    }, [\r\n        deletingSellerProductSuccess,\r\n        deletingSellerProductError,\r\n    ]);\r\n\r\n    const openDeleteModal = (data) => {\r\n        setProductIdToDelete(data.product_id);\r\n        setProductNameToDelete(data.productName);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const deleteProduct = () => {\r\n        const value = {\r\n            user_id: user_id,\r\n            product_id: productIdToDelete\r\n        }\r\n\r\n        if (deleteModalInput === \"DELETE\") {\r\n            dispatch(deleteSellerProduct(value));\r\n            let filteredProducts = products?.filter(data => data.product_id !== value.product_id);\r\n            setProducts([...filteredProducts]);\r\n            setProductIdToDelete(null);\r\n            setProductNameToDelete(null);\r\n            setDeleteModalInput(null);\r\n            setShowDeleteModal(false);\r\n        } else {\r\n            $(\"#modal-input\").css({\r\n                \"borderColor\": \"red\"\r\n            });\r\n        }\r\n    };\r\n\r\n    const cancelDelete = () => {\r\n        setProductIdToDelete(null);\r\n        setProductNameToDelete(null);\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: `${user_name}'s Products`,\r\n            children: [\r\n                {\r\n                    title: 'Product Name',\r\n                    dataIndex: \"productName\",\r\n                    key: \"productName\",\r\n                },\r\n                {\r\n                    title: 'Product Quantity',\r\n                    dataIndex: \"productQuantity\",\r\n                    key: \"productQuantity\",\r\n                },\r\n                {\r\n                    title: 'Product Type',\r\n                    dataIndex: \"productType\",\r\n                    key: \"productType\",\r\n\r\n                },\r\n                {\r\n                    title: 'Product Sub Type',\r\n                    dataIndex: \"productSubType\",\r\n                    key: \"productSubType\",\r\n\r\n                },\r\n                {\r\n                    title: 'Images',\r\n                    dataIndex: 'images',\r\n                    key: \"images\",\r\n                    responsive: ['md'],\r\n                    width: 200,\r\n                    ellipsis: {\r\n                        showTitle: true,\r\n                    },\r\n                    render: (text, record, index) => {\r\n                        return (\r\n                            <>\r\n                                <Image.PreviewGroup\r\n                                    style={{\r\n                                        width: \"400\"\r\n                                    }}\r\n                                >\r\n                                    {record?.productImages?.map((data, i) => (\r\n                                        <Image\r\n                                            style={{\r\n                                                padding: \"5px\"\r\n                                            }}\r\n                                            key={i}\r\n                                            width={100}\r\n                                            src={require(`../../../../assests/images/product_images/${data?.image ? data?.image : \"\"}`).default || \"\"}\r\n                                        />\r\n                                    ))}\r\n                                </Image.PreviewGroup>\r\n                            </>\r\n                        );\r\n                    }\r\n                },\r\n                {\r\n                    title: \"Action\",\r\n                    dataIndex: \"action\",\r\n                    key: \"action\",\r\n                    align: \"center\",\r\n                    render: (text, record, index) =>\r\n\r\n                    (\r\n                        <Button\r\n                            type=\"danger\"\r\n                            icon={<DeleteOutlined />}\r\n                            onClick={() => {\r\n                                openDeleteModal(record);\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const expandedRow = (data) => {\r\n        const columns = [\r\n            {\r\n                title: \"S.N\",\r\n                dataIndex: \"key\",\r\n                key: \"key\",\r\n                width: 280,\r\n            },\r\n            {\r\n                title: \"Product Details\",\r\n                dataIndex: \"productDetail\",\r\n                key: \"productDetail\",\r\n            }\r\n        ];\r\n\r\n        const tableData = data?.productDetails?.map((detail, index) => ({\r\n            key: index + 1,\r\n            productDetail: detail?.product_detail\r\n        }));\r\n\r\n        return <Table columns={columns} dataSource={tableData} pagination={false} />;\r\n    }\r\n\r\n\r\n    const tableData = products?.map((data, index) => ({\r\n        key: index,\r\n        user_id: user_id,\r\n        product_id: data?.product_id,\r\n        productName: data?.product_name,\r\n        productQuantity: data?.product_quantity,\r\n        productType: data?.product_type,\r\n        productSubType: data?.product_sub_type,\r\n        productImages: data?.product_images,\r\n        productDetails: data?.product_details\r\n    }));\r\n\r\n\r\n    return (\r\n        <CustomerProductsDiv>\r\n            <ExtendedTable\r\n                columns={columns}\r\n                dataSource={tableData}\r\n                expandable={{\r\n                    expandedRowRender: record => (\r\n                        expandedRow(record)\r\n                    )\r\n                }}\r\n                searchableProps={{\r\n                    inputProps: {\r\n                        prefix: <SearchOutlined />,\r\n                        style: {\r\n                            width: \"200px\"\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n            <Modal\r\n                title={`Delete Product ${productNameToDelete}`}\r\n                visible={showDeleteModal}\r\n                onOk={deleteProduct}\r\n                onCancel={cancelDelete}\r\n                maskClosable={false}\r\n            >\r\n                <p>DELETING THE PRODUCT WILL DELETE ALL ITS IMAGES AND DETAILS.</p>\r\n                <p>TYPE \"DELETE\" AND CLICK OK BELOW TO DELETE.</p>\r\n                <Input\r\n                    id=\"modal-input\"\r\n                    value={deleteModalInput}\r\n                    onChange={(e) => {\r\n                        $(\"#modal-input\").css({\r\n                            \"borderColor\": \"black\"\r\n                        });\r\n                        setDeleteModalInput(e.target.value);\r\n                    }}\r\n                >\r\n                </Input>\r\n            </Modal>\r\n        </CustomerProductsDiv>\r\n    )\r\n}\r\n\r\nexport default AdminCustomerProductDetails;","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\rating_component.js",["346"],"import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { message, Modal, notification, Rate } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\nimport { getToken } from '../../utils/storage';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../config';\r\nimport { onUserRatingUpdate } from '../../redux';\r\n\r\nconst RatingComponent = () => {\r\n    const dispatch = useDispatch();\r\n    //States\r\n    const [displayRatingModalBool, setDisplayRatingModalBool] = useState(false);\r\n    const [userRating, setUserRating] = useState(null);\r\n\r\n    const User = useSelector(state => state.user?.user);\r\n\r\n    useEffect(() => {\r\n        setUserRating(User?.application_rating ? parseInt(User.application_rating) : null);\r\n        console.log(User?.application_rating);\r\n        console.log(userRating);\r\n    }, [User]);\r\n\r\n    const handleOnClick = () => {\r\n        if (!getToken()) {\r\n            message.info(\"You must login to rate!\");\r\n        } else {\r\n            setDisplayRatingModalBool(true);\r\n        }\r\n    }\r\n\r\n    const updateRating = () => {\r\n        axios.post(`${API_URL}/users/update-application-rating`, {\r\n            user_id: User?.user_id,\r\n            application_rating: userRating\r\n        }).then(res => {\r\n            notification.success({\r\n                message: res.data,\r\n                duration: 3\r\n            });\r\n            dispatch(onUserRatingUpdate(userRating));\r\n            setDisplayRatingModalBool(false);\r\n        }).catch(err => {\r\n            notification.error({\r\n                message: err.response.data.message,\r\n                duration: 3\r\n            });\r\n        })\r\n    }\r\n\r\n    const handleModalCancel = () => {\r\n        setUserRating(User?.application_rating ? parseInt(User.application_rating) : null);\r\n        setDisplayRatingModalBool(false);\r\n    }\r\n\r\n    const handleRateChange = (number) => {\r\n        setUserRating(number);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={handleOnClick}>\r\n                <div>\r\n                    <SmileOutlined style={{ cursor: \"pointer\", fontSize: \"2.5rem\" }} />\r\n                </div>\r\n                <div>\r\n                    Rating\r\n            </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Rate Application\"\r\n                visible={displayRatingModalBool}\r\n                onOk={updateRating}\r\n                onCancel={handleModalCancel}\r\n                maskClosable={false}\r\n                style={{\r\n                    textAlign: \"center\"\r\n                }}\r\n            >\r\n                <p>Rate the Application.</p>\r\n                <Rate value={userRating} onChange={handleRateChange} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RatingComponent;","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\index.js",["347","348"],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\style.js",[],{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":1,"column":8,"nodeType":"355","messageId":"356","endLine":1,"endColumn":12},{"ruleId":"353","severity":1,"message":"357","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":21},{"ruleId":"353","severity":1,"message":"358","line":4,"column":23,"nodeType":"355","messageId":"356","endLine":4,"endColumn":34},{"ruleId":"353","severity":1,"message":"359","line":5,"column":27,"nodeType":"355","messageId":"356","endLine":5,"endColumn":33},{"ruleId":"353","severity":1,"message":"360","line":9,"column":10,"nodeType":"355","messageId":"356","endLine":9,"endColumn":30},{"ruleId":"353","severity":1,"message":"361","line":3,"column":16,"nodeType":"355","messageId":"356","endLine":3,"endColumn":24},{"ruleId":"353","severity":1,"message":"362","line":3,"column":26,"nodeType":"355","messageId":"356","endLine":3,"endColumn":36},{"ruleId":"363","severity":1,"message":"364","line":28,"column":7,"nodeType":"365","endLine":28,"endColumn":9,"suggestions":"366"},{"ruleId":"363","severity":1,"message":"367","line":55,"column":8,"nodeType":"365","endLine":55,"endColumn":20,"suggestions":"368"},{"ruleId":"353","severity":1,"message":"369","line":1,"column":17,"nodeType":"355","messageId":"356","endLine":1,"endColumn":25},{"ruleId":"353","severity":1,"message":"361","line":3,"column":28,"nodeType":"355","messageId":"356","endLine":3,"endColumn":36},{"ruleId":"363","severity":1,"message":"364","line":24,"column":8,"nodeType":"365","endLine":24,"endColumn":10,"suggestions":"370"},{"ruleId":"353","severity":1,"message":"371","line":8,"column":24,"nodeType":"355","messageId":"356","endLine":8,"endColumn":37},{"ruleId":"372","severity":1,"message":"373","line":146,"column":49,"nodeType":"374","endLine":146,"endColumn":79},{"ruleId":"372","severity":1,"message":"373","line":195,"column":49,"nodeType":"374","endLine":195,"endColumn":106},{"ruleId":"353","severity":1,"message":"375","line":2,"column":15,"nodeType":"355","messageId":"356","endLine":2,"endColumn":23},{"ruleId":"353","severity":1,"message":"376","line":2,"column":28,"nodeType":"355","messageId":"356","endLine":2,"endColumn":33},{"ruleId":"353","severity":1,"message":"354","line":6,"column":8,"nodeType":"355","messageId":"356","endLine":6,"endColumn":12},{"ruleId":"353","severity":1,"message":"377","line":8,"column":10,"nodeType":"355","messageId":"356","endLine":8,"endColumn":26},{"ruleId":"363","severity":1,"message":"378","line":69,"column":8,"nodeType":"365","endLine":69,"endColumn":10,"suggestions":"379"},{"ruleId":"380","severity":1,"message":"381","line":75,"column":17,"nodeType":"382","messageId":"383","endLine":75,"endColumn":19},{"ruleId":"353","severity":1,"message":"384","line":100,"column":11,"nodeType":"355","messageId":"356","endLine":100,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":111,"column":22,"nodeType":"355","messageId":"387","endLine":111,"endColumn":27},{"ruleId":"353","severity":1,"message":"388","line":1,"column":27,"nodeType":"355","messageId":"356","endLine":1,"endColumn":39},{"ruleId":"353","severity":1,"message":"389","line":9,"column":10,"nodeType":"355","messageId":"356","endLine":9,"endColumn":16},{"ruleId":"390","severity":1,"message":"391","line":43,"column":1,"nodeType":"392","endLine":46,"endColumn":2},{"ruleId":"353","severity":1,"message":"393","line":11,"column":5,"nodeType":"355","messageId":"356","endLine":11,"endColumn":16},{"ruleId":"353","severity":1,"message":"394","line":13,"column":5,"nodeType":"355","messageId":"356","endLine":13,"endColumn":15},{"ruleId":"353","severity":1,"message":"395","line":14,"column":5,"nodeType":"355","messageId":"356","endLine":14,"endColumn":23},{"ruleId":"353","severity":1,"message":"396","line":15,"column":5,"nodeType":"355","messageId":"356","endLine":15,"endColumn":21},{"ruleId":"353","severity":1,"message":"397","line":23,"column":7,"nodeType":"355","messageId":"356","endLine":23,"endColumn":18},{"ruleId":"353","severity":1,"message":"398","line":29,"column":7,"nodeType":"355","messageId":"356","endLine":29,"endColumn":25},{"ruleId":"353","severity":1,"message":"399","line":36,"column":7,"nodeType":"355","messageId":"356","endLine":36,"endColumn":23},{"ruleId":"353","severity":1,"message":"400","line":64,"column":7,"nodeType":"355","messageId":"356","endLine":64,"endColumn":26},{"ruleId":"353","severity":1,"message":"401","line":90,"column":7,"nodeType":"355","messageId":"356","endLine":90,"endColumn":19},{"ruleId":"353","severity":1,"message":"402","line":3,"column":8,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"353","severity":1,"message":"403","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":18},{"ruleId":"353","severity":1,"message":"404","line":1,"column":27,"nodeType":"355","messageId":"356","endLine":1,"endColumn":33},{"ruleId":"353","severity":1,"message":"369","line":1,"column":10,"nodeType":"355","messageId":"356","endLine":1,"endColumn":18},{"ruleId":"363","severity":1,"message":"405","line":19,"column":8,"nodeType":"365","endLine":19,"endColumn":37,"suggestions":"406"},{"ruleId":"380","severity":1,"message":"407","line":59,"column":32,"nodeType":"382","messageId":"383","endLine":59,"endColumn":34},{"ruleId":"380","severity":1,"message":"407","line":59,"column":62,"nodeType":"382","messageId":"383","endLine":59,"endColumn":64},{"ruleId":"353","severity":1,"message":"408","line":2,"column":41,"nodeType":"355","messageId":"356","endLine":2,"endColumn":45},{"ruleId":"353","severity":1,"message":"369","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":18},{"ruleId":"380","severity":1,"message":"381","line":13,"column":46,"nodeType":"382","messageId":"383","endLine":13,"endColumn":48},{"ruleId":"380","severity":1,"message":"407","line":46,"column":88,"nodeType":"382","messageId":"383","endLine":46,"endColumn":90},{"ruleId":"380","severity":1,"message":"381","line":12,"column":32,"nodeType":"382","messageId":"383","endLine":12,"endColumn":34},{"ruleId":"380","severity":1,"message":"381","line":39,"column":38,"nodeType":"382","messageId":"383","endLine":39,"endColumn":40},{"ruleId":"380","severity":1,"message":"407","line":79,"column":83,"nodeType":"382","messageId":"383","endLine":79,"endColumn":85},{"ruleId":"353","severity":1,"message":"409","line":3,"column":53,"nodeType":"355","messageId":"356","endLine":3,"endColumn":60},{"ruleId":"363","severity":1,"message":"410","line":47,"column":8,"nodeType":"365","endLine":47,"endColumn":38,"suggestions":"411"},{"ruleId":"363","severity":1,"message":"412","line":24,"column":8,"nodeType":"365","endLine":24,"endColumn":10,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":29,"column":9,"nodeType":"416","messageId":"417","endLine":32,"endColumn":10},{"ruleId":"380","severity":1,"message":"381","line":41,"column":37,"nodeType":"382","messageId":"383","endLine":41,"endColumn":39},{"ruleId":"380","severity":1,"message":"381","line":44,"column":44,"nodeType":"382","messageId":"383","endLine":44,"endColumn":46},{"ruleId":"380","severity":1,"message":"381","line":47,"column":44,"nodeType":"382","messageId":"383","endLine":47,"endColumn":46},{"ruleId":"380","severity":1,"message":"381","line":51,"column":89,"nodeType":"382","messageId":"383","endLine":51,"endColumn":91},{"ruleId":"380","severity":1,"message":"381","line":52,"column":79,"nodeType":"382","messageId":"383","endLine":52,"endColumn":81},{"ruleId":"353","severity":1,"message":"418","line":3,"column":29,"nodeType":"355","messageId":"356","endLine":3,"endColumn":43},{"ruleId":"419","severity":1,"message":"420","line":30,"column":59,"nodeType":"421","messageId":"422","endLine":30,"endColumn":61},{"ruleId":"363","severity":1,"message":"423","line":42,"column":8,"nodeType":"365","endLine":42,"endColumn":25,"suggestions":"424"},{"ruleId":"353","severity":1,"message":"425","line":1,"column":20,"nodeType":"355","messageId":"356","endLine":1,"endColumn":25},{"ruleId":"353","severity":1,"message":"426","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":16},{"ruleId":"427","severity":1,"message":"428","line":61,"column":47,"nodeType":"429","messageId":"430","endLine":61,"endColumn":48},{"ruleId":"353","severity":1,"message":"431","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"432","line":3,"column":41,"nodeType":"355","messageId":"356","endLine":3,"endColumn":49},{"ruleId":"353","severity":1,"message":"433","line":3,"column":59,"nodeType":"355","messageId":"356","endLine":3,"endColumn":66},{"ruleId":"353","severity":1,"message":"434","line":1,"column":10,"nodeType":"355","messageId":"356","endLine":1,"endColumn":16},{"ruleId":"353","severity":1,"message":"359","line":2,"column":27,"nodeType":"355","messageId":"356","endLine":2,"endColumn":33},{"ruleId":"353","severity":1,"message":"435","line":4,"column":21,"nodeType":"355","messageId":"356","endLine":4,"endColumn":31},{"ruleId":"353","severity":1,"message":"436","line":7,"column":10,"nodeType":"355","messageId":"356","endLine":7,"endColumn":19},{"ruleId":"353","severity":1,"message":"437","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":15},{"ruleId":"353","severity":1,"message":"438","line":19,"column":11,"nodeType":"355","messageId":"356","endLine":19,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":34,"column":8,"nodeType":"365","endLine":34,"endColumn":33,"suggestions":"439"},{"ruleId":"353","severity":1,"message":"409","line":4,"column":46,"nodeType":"355","messageId":"356","endLine":4,"endColumn":53},{"ruleId":"363","severity":1,"message":"367","line":34,"column":8,"nodeType":"365","endLine":34,"endColumn":10,"suggestions":"440"},{"ruleId":"363","severity":1,"message":"441","line":22,"column":8,"nodeType":"365","endLine":22,"endColumn":14,"suggestions":"442"},{"ruleId":"363","severity":1,"message":"364","line":25,"column":8,"nodeType":"365","endLine":25,"endColumn":10,"suggestions":"443"},{"ruleId":"363","severity":1,"message":"444","line":50,"column":8,"nodeType":"365","endLine":50,"endColumn":28,"suggestions":"445"},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Router' is defined but never used.","'getAllSellerProducts' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["448"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["449"],"'useState' is defined but never used.",["450"],"'SmileOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","'Image' is defined but never used.","'DownCircleFilled' is defined but never used.","React Hook useEffect has a missing dependency: 'animateColor'. Either include it or remove the dependency array.",["451"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getRotationDegree' is assigned a value but never used.","no-redeclare","'angle' is already defined.","redeclared","'PRODUCT_TYPE' is defined but never used.","'Select' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'USER_LOGOUT' is defined but never used.","'FETCH_USER' is defined but never used.","'FETCH_USER_SUCCESS' is defined but never used.","'FETCH_USER_ERROR' is defined but never used.","'onFetchUser' is assigned a value but never used.","'onFetchUserSuccess' is assigned a value but never used.","'onFetchUserError' is assigned a value but never used.","'onRegisterUserReset' is assigned a value but never used.","'onUserLogout' is assigned a value but never used.","'styled' is defined but never used.","'Fragment' is defined but never used.","'Header' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["452"],"Expected '!==' and instead saw '!='.","'Form' is defined but never used.","'message' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user?.user_id'. Either include them or remove the dependency array.",["453"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user_id'. Either include them or remove the dependency array.",["454"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ExpandOutlined' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["455"],"'Modal' is defined but never used.","'select' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Link' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'Layout' is defined but never used.","'NavBarMenu' is defined but never used.","'useParams' is defined but never used.","'Table' is defined but never used.","'deletingCustomerBool' is assigned a value but never used.",["456"],["457"],"React Hook useEffect has a missing dependency: 'userRating'. Either include it or remove the dependency array.",["458"],["459"],"React Hook useEffect has a missing dependency: 'ratingsObject'. Either include it or remove the dependency array. You can also do a functional update 'setRatingsObject(r => ...)' if you only need 'ratingsObject' in the 'setRatingsObject' call.",["460"],"no-global-assign","no-unsafe-negation",{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"461","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"461","fix":"482"},{"desc":"483","fix":"484"},"Update the dependencies array to be: [dispatch]",{"range":"485","text":"486"},"Update the dependencies array to be: [history, userDetail]",{"range":"487","text":"488"},{"range":"489","text":"486"},"Update the dependencies array to be: [animateColor]",{"range":"490","text":"491"},"Update the dependencies array to be: [addingSellerProductsSuccess, dispatch, userId]",{"range":"492","text":"493"},"Update the dependencies array to be: [dispatch, updatingSellerProductSuccess, user?.user_id]",{"range":"494","text":"495"},"Update the dependencies array to be: [dispatch, user_id]",{"range":"496","text":"497"},"Update the dependencies array to be: [products, searchInputText]",{"range":"498","text":"499"},"Update the dependencies array to be: [deletingCustomerSuccess, dispatch]",{"range":"500","text":"501"},"Update the dependencies array to be: [history]",{"range":"502","text":"503"},"Update the dependencies array to be: [User, userRating]",{"range":"504","text":"505"},{"range":"506","text":"486"},"Update the dependencies array to be: [allCustomerDetails, ratingsObject]",{"range":"507","text":"508"},[1224,1226],"[dispatch]",[1988,2000],"[history, userDetail]",[1117,1119],[2752,2754],"[animateColor]",[718,747],"[addingSellerProductsSuccess, dispatch, userId]",[2385,2415],"[dispatch, updatingSellerProductSuccess, user?.user_id]",[985,987],"[dispatch, user_id]",[1604,1621],"[products, searchInputText]",[1770,1795],"[deletingCustomerSuccess, dispatch]",[1652,1654],"[history]",[876,882],"[User, userRating]",[802,804],[1558,1578],"[allCustomerDetails, ratingsObject]"]