[{"E:\\FYP\\geo-ecommerce\\src\\index.js":"1","E:\\FYP\\geo-ecommerce\\src\\reportWebVitals.js":"2","E:\\FYP\\geo-ecommerce\\src\\App.js":"3","E:\\FYP\\geo-ecommerce\\src\\pages\\login\\index.jsx":"4","E:\\FYP\\geo-ecommerce\\src\\components\\login_sign_up_components\\index.js":"5","E:\\FYP\\geo-ecommerce\\src\\pages\\register\\index.jsx":"6","E:\\FYP\\geo-ecommerce\\src\\config.js":"7","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\index.js":"8","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\style.js":"9","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\index.js":"10","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\search_bar.js":"11","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\navbar_items.js":"12","E:\\FYP\\geo-ecommerce\\src\\enums\\index.js":"13","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\style.js":"14","E:\\FYP\\geo-ecommerce\\src\\utils\\history.js":"15","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\buy_sell_info.js":"16","E:\\FYP\\geo-ecommerce\\src\\redux\\store.js":"17","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userReducer.js":"18","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userTypes.js":"19","E:\\FYP\\geo-ecommerce\\src\\redux\\index.js":"20","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userActions.js":"21","E:\\FYP\\geo-ecommerce\\src\\services\\auth.js":"22","E:\\FYP\\geo-ecommerce\\src\\utils\\storage.js":"23","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\how_saman_works_info.js":"24","E:\\FYP\\geo-ecommerce\\src\\routes.js":"25","E:\\FYP\\geo-ecommerce\\src\\layout\\blank_layout.js":"26","E:\\FYP\\geo-ecommerce\\src\\layout\\conditional_layout.js":"27"},{"size":915,"mtime":1613049043781,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":2077,"mtime":1613396677553,"results":"31","hashOfConfig":"29"},{"size":7900,"mtime":1613392552012,"results":"32","hashOfConfig":"29"},{"size":489,"mtime":1609170101502,"results":"33","hashOfConfig":"29"},{"size":8957,"mtime":1613392601419,"results":"34","hashOfConfig":"29"},{"size":230,"mtime":1612949932862,"results":"35","hashOfConfig":"29"},{"size":8843,"mtime":1613396581616,"results":"36","hashOfConfig":"29"},{"size":1497,"mtime":1613050890450,"results":"37","hashOfConfig":"29"},{"size":5801,"mtime":1613278285560,"results":"38","hashOfConfig":"29"},{"size":214,"mtime":1609678318417,"results":"39","hashOfConfig":"29"},{"size":2419,"mtime":1612970605034,"results":"40","hashOfConfig":"29"},{"size":502,"mtime":1609670075347,"results":"41","hashOfConfig":"29"},{"size":2284,"mtime":1613289233610,"results":"42","hashOfConfig":"29"},{"size":117,"mtime":1613046848940,"results":"43","hashOfConfig":"29"},{"size":681,"mtime":1613237633241,"results":"44","hashOfConfig":"29"},{"size":1030,"mtime":1613397229519,"results":"45","hashOfConfig":"29"},{"size":3382,"mtime":1612981994369,"results":"46","hashOfConfig":"29"},{"size":680,"mtime":1612981561006,"results":"47","hashOfConfig":"29"},{"size":36,"mtime":1612945023988,"results":"48","hashOfConfig":"29"},{"size":3941,"mtime":1613360694666,"results":"49","hashOfConfig":"29"},{"size":352,"mtime":1612982271600,"results":"50","hashOfConfig":"29"},{"size":246,"mtime":1612982285492,"results":"51","hashOfConfig":"29"},{"size":2380,"mtime":1613289054634,"results":"52","hashOfConfig":"29"},{"size":1245,"mtime":1613394701597,"results":"53","hashOfConfig":"29"},{"size":143,"mtime":1613393474778,"results":"54","hashOfConfig":"29"},{"size":498,"mtime":1613395638186,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1l58w15",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\FYP\\geo-ecommerce\\src\\index.js",[],["118","119"],"E:\\FYP\\geo-ecommerce\\src\\reportWebVitals.js",[],"E:\\FYP\\geo-ecommerce\\src\\App.js",["120","121"],"E:\\FYP\\geo-ecommerce\\src\\pages\\login\\index.jsx",["122","123","124"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, withRouter, useHistory } from 'react-router-dom';\r\nimport { Layout, Row, Col, Form, Input, Checkbox, Button, Divider, Image, Alert } from 'antd';\r\nimport { Content, Footer, Header } from 'antd/lib/layout/layout';\r\nimport { CustomizedButton, CustomGoogleLoginBtn } from '../../components/login_sign_up_components';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport logo from '../../assests/images/logo.png'\r\nimport { google_client_id } from '../../config';\r\nimport { getToken } from '../../utils/storage';\r\n// import history  from '../../utils/history';\r\n\r\n//User Actions\r\nimport { loginUser } from '../../redux';\r\n\r\nconst LoginUserPage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const loggingUser = useSelector(state => state.user?.loggingIn);\r\n    const userDetail = useSelector(state => state.user?.user);\r\n    const loggingErrorMsg = useSelector(state => state.user?.loggingError);\r\n\r\n    //Google Sign Up Response\r\n    const responseGoogle = (response) => {\r\n        const googleResponse = response.profileObj;\r\n        const googleFormValues = {\r\n            firstName: googleResponse.name,\r\n            email: googleResponse.email,\r\n            googleId: googleResponse.googleId,\r\n            type: \"googleAuth\"\r\n        }\r\n        dispatch(loginUser(googleFormValues, history));\r\n    }\r\n\r\n    const responseGoogleFailure = (response) => {\r\n        console.log('Failed: ', response);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        dispatch(loginUser(values, history));\r\n    }\r\n\r\n    //Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getToken()) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [userDetail]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout >\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>\r\n                        <Col span={8} offset={8} style={{ textAlign: \"end\" }}>\r\n                            <CustomizedButton><Link to=\"/users/register\">CREATE ACCOUNT</Link></CustomizedButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content >\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Log into Saman.com</h2>\r\n                        </Row>\r\n                        {loggingErrorMsg && (\r\n                            <Alert\r\n                                type=\"error\"\r\n                                message={loggingErrorMsg}\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row style={{ width: \"100vw\", paddingTop: \"1rem\" }}>\r\n                            <Col md={{ span: 8 }} offset={3}>\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 16 }}\r\n                                    name=\"loginForm\"\r\n                                    onFinish={onFinish}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: \"Please Enter Email!\" }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\" }}\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 },\r\n                                        }}\r\n                                        name=\"logIn\"\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}\r\n                                            loading={loggingUser}\r\n                                        >Log In</Button>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\" }}\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 },\r\n                                        }}\r\n                                        valuePropName=\"checked\"\r\n                                        name=\"rememberMe\"\r\n                                    >\r\n                                        <Checkbox>Remember Me</Checkbox>\r\n                                    </Form.Item>\r\n\r\n                                </Form>\r\n                            </Col>\r\n                            <Col xs={{ span: 24 }} md={{ span: 2 }} style={{ textAlign: \"center\", padding: \"2.3rem 0\" }}>\r\n                                <Divider type=\"vertical\" style={{ height: \"50%\", 'backgroundColor': \"#616362\" }}></Divider>\r\n                                <span>OR</span>\r\n                            </Col>\r\n                            <Col xs={{\r\n                                span: 24\r\n                            }}\r\n                                md={{\r\n                                    span: 8\r\n                                }}\r\n                                style={{ padding: \"1.4rem 0\", }}\r\n                            >\r\n                                <CustomGoogleLoginBtn\r\n                                    clientId={google_client_id}\r\n                                    buttonText=\"Continue With Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogleFailure}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default LoginUserPage;","E:\\FYP\\geo-ecommerce\\src\\components\\login_sign_up_components\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\register\\index.jsx",["125","126"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport Layout, { Header, Content, Footer } from 'antd/lib/layout/layout';\r\nimport { Row, Col, Form, Input, Divider, Image, Button, Alert } from 'antd';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport { CustomizedButton, CustomGoogleLoginBtn } from '../../components/login_sign_up_components';\r\nimport { google_client_id } from '../../config';\r\nimport logo from '../../assests/images/logo.png';\r\nimport { getToken } from '../../utils/storage';\r\n\r\n//Actions\r\nimport { registerUser } from '../../redux';\r\n\r\nconst RegisterUserPage = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const registeringUser = useSelector(state => state.user?.registeringUser);\r\n    const registerErrorMsg = useSelector(state => state.user?.registrationError);\r\n\r\n    //Google Sign Up Response\r\n    const responseGoogle = (response) => {        \r\n        const googleResponse=response.profileObj;\r\n        const googleFormValues={\r\n            firstName:googleResponse.name,\r\n            email:googleResponse.email,\r\n            googleId:googleResponse.googleId,\r\n            type:\"googleAuth\"      \r\n        }\r\n        dispatch(registerUser(googleFormValues, history));\r\n    }\r\n\r\n    const responseGoogleFailure=(response)=>{\r\n        console.log('Failed: ',response);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        const formValues = {\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            email: values.registerEmail,\r\n            password: values.registerPassword,\r\n            confirm_password: values.registerConfirmPassword,            \r\n        }\r\n        dispatch(registerUser(formValues, history));\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ', errorInfo);\r\n    };\r\n\r\n    //Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getToken()) {\r\n            history.push(\"/\");\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col xs={{ span: 2 }} md={{ span: 8 }}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>\r\n                        <Col xs={{ span: 4, offset: 6 }} md={{ span: 8, offset: 8 }} style={{ textAlign: \"end\" }}>\r\n                            <CustomizedButton><Link to=\"/users/login\">Already have an account? Log In</Link></CustomizedButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content>\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Sign Up</h2>\r\n                        </Row>\r\n                        {registerErrorMsg && (\r\n                            <Alert\r\n                                message={registerErrorMsg}\r\n                                type=\"error\"\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row gutter={24} style={{ width: \"100%\", paddingTop: \"1rem\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\r\n                            <Col md={{ span: 8 }} >\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 16 }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"First Name\"\r\n                                        name=\"firstName\"\r\n                                        rules={[{ required: true, message: \"Please Enter Your First Name!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        rules={[{ required: true, message: \"Please Enter Your Last Name!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"registerEmail\"\r\n                                        rules={[{ required: true, message: \"Please Enter Email!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"registerPassword\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Confirm Password\"\r\n                                        name=\"registerConfirmPassword\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"signUp\"\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 }\r\n                                        }}\r\n                                        style={{ textAlign: \"center\" }}\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}\r\n                                            loading={registeringUser}\r\n                                        >Sign Up\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col xs={{ span: 24 }} md={{ span: 2 }} style={{textAlign: \"center\",}} align=\"middle\">\r\n                                <Divider type=\"vertical\" style={{ height: \"50%\", 'backgroundColor': \"#616362\" }}></Divider>\r\n                                <span>OR</span>\r\n                            </Col>\r\n                            <Col md={{ span: 8 }}>\r\n                                <CustomGoogleLoginBtn\r\n                                    clientId={google_client_id}\r\n                                    buttonText=\"Sign Up With Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogleFailure}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterUserPage;","E:\\FYP\\geo-ecommerce\\src\\config.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\index.js",["127","128"],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\style.js",["129"],"import styled from 'styled-components';\r\nimport {Menu, Dropdown, Button} from 'antd';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nexport const NavBarDiv=styled.div`\r\n    z-index: 999;\r\n    position: relative;\r\n    width:100vw;\r\n    justify-content:center;\r\n    background-color:rgba(255,255,255,0.2);    \r\n    perspective:1000px;\r\n    margin:0 auto;\r\n \r\n`\r\n\r\nexport const NavBarMenu=styled(Menu)`\r\n    display:flex;  \r\n    justify-content:space-between;\r\n    .nav-bar-anchor{\r\n        color:black;\r\n        &:active{\r\n            color:black;\r\n        }\r\n    }\r\n`\r\nexport const MenuItem=styled(Menu.Item)`\r\n\r\n`\r\nexport const SearchOutlinedEl=styled(SearchOutlined)`\r\n    font-size:2.5rem;   \r\n`\r\n\r\nexport const DropDownMenuDiv=styled.div`\r\n    margin-left:-3rem;\r\n    display:grid;\r\n    grid-template-columns:auto auto;    \r\n    grid-column-gap: 20px;    \r\n    padding:10px;\r\n    border:1px solid grey;\r\n`\r\n\r\nexport const UserDropDownMenuDiv=styled.div`\r\n    margin-left:-5rem;    \r\n    padding:10px 12px;\r\n    border-radius:0.01rem;\r\n    background-color:rgb(255, 255, 255);\r\n    /* border:none */\r\n    box-shadow: 1px 2px 40px #888888;\r\n    .userMenuLabel{\r\n        margin-right:6rem;        \r\n    }\r\n    .userMenuEmail{\r\n        color:rgb(172, 172, 172);\r\n        font-size:500;\r\n        font-size:0.75rem;\r\n        margin-top:-0.5rem;\r\n    }\r\n`\r\n\r\nexport const LogoutButton=styled(Button)`\r\n    border:none;\r\n    padding-left:0px;\r\n    font-weight:600;\r\n    color:chocolate;\r\n    \r\n`","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\index.js",["130","131","132"],"import React, { useEffect, useRef } from 'react';\r\nimport { Row, Col, Layout } from 'antd';\r\nimport { Content } from 'antd/lib/layout/layout';\r\nimport { WelcomeDiv, PCBackgroundImg, RightBackGround, LandingRightColumn } from './style';\r\nimport pcBackgroundImg from '../../assests/images/pcBackgroundImg.jpg';\r\nimport $ from 'jquery';\r\nimport { DownCircleFilled } from '@ant-design/icons';\r\n\r\nimport HowSamanWorksDiv from './components/how_saman_works_info';\r\nimport BuySellInformation from './components/buy_sell_info';\r\n\r\nconst LandingPage = () => {\r\n\r\n    //Animation Div Ref\r\n    const landingRightColumnElement = useRef(null);\r\n    const totalDegreesToRotateLandingRightDiv = 20;\r\n    const totalDegreesToRotateLandingBuySellDiv = 40;\r\n\r\n    useEffect(() => {\r\n        const handleScroll = (event) => {\r\n            let innerHeightValue = $(\"#landingRightColumnDiv\").innerHeight() / 2;\r\n            const landingRightDivDegreesToRotate = calculateRotation(innerHeightValue, totalDegreesToRotateLandingRightDiv);\r\n            const landingBuySellDivDegreesToRotate = calculateRotation(innerHeightValue, totalDegreesToRotateLandingBuySellDiv);\r\n\r\n            if (landingRightDivDegreesToRotate <= totalDegreesToRotateLandingRightDiv && landingRightDivDegreesToRotate >= 0) {\r\n\r\n                $(\"#landingRightColumnDiv\").css({\r\n                    \"transform\": `rotate(${totalDegreesToRotateLandingRightDiv - landingRightDivDegreesToRotate}deg)`\r\n                });\r\n\r\n\r\n            } else {\r\n                $(\"#landingRightColumnDiv\").css({\r\n                    \"transform\": `rotate(0deg)`\r\n                });\r\n\r\n            }\r\n\r\n            if (landingBuySellDivDegreesToRotate < totalDegreesToRotateLandingBuySellDiv ) {\r\n                $(\".landingBuySellDiv\").css({\r\n                    \"transform\": `rotate(${totalDegreesToRotateLandingBuySellDiv - landingBuySellDivDegreesToRotate}deg)`\r\n                });\r\n\r\n            } else {\r\n                $(\".landingBuySellDiv\").css({\r\n                    \"transform\": `rotate(0deg)`\r\n                });\r\n            }\r\n\r\n            //Animation\r\n            // console.log(getRotationDegree($(\"#landingRightColumnDiv\")));\r\n\r\n        }\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        // window.addEventListener(\"DOMContentLoaded\", handleScroll);\r\n    }, []);\r\n\r\n    const calculateRotation = (innerHeightValue, totalDegreesToRotate) => {\r\n        // let innerHightValue = document.documentElement.offsetHeight/2;\r\n        // let innerHightValue = $(\"#landingRightColumnDiv\")[0].scrollHeight/2;\r\n        let oneDegreePixelValue = innerHeightValue / totalDegreesToRotate;\r\n        let onePixelDegree = 1 / oneDegreePixelValue;\r\n        // console.log(onePixelDegree);\r\n        let degreesToRotate = totalDegreesToRotate;\r\n        let marginToDecrease = window.scrollY * onePixelDegree;\r\n        // console.log(\"scrollY\", window.scrollY);\r\n        // console.log(\"scroll Height\", $(\"#landingRightColumnDiv\")[0].scrollHeight);\r\n        // console.log(\"scrollY\", window.scrollY);\r\n        // console.log(document.documentElement.offsetHeight);\r\n\r\n        $(\"#landingRightBackgroundDiv\").css({\r\n            \"right\": `-${marginToDecrease * 1.2}%`\r\n        })\r\n        // console.log(\"inner Height\", $(\"#landingRightColumnDiv\").innerHeight());\r\n\r\n        degreesToRotate = window.scrollY * onePixelDegree;\r\n\r\n\r\n\r\n        return degreesToRotate;\r\n\r\n    }\r\n\r\n    const getRotationDegree = (elementObj) => {\r\n        var matrix = elementObj.css(\"-webkit-transform\") ||\r\n            elementObj.css(\"-moz-transform\") ||\r\n            elementObj.css(\"-ms-transform\") ||\r\n            elementObj.css(\"-o-transform\") ||\r\n            elementObj.css(\"transform\");\r\n        if (matrix !== 'none') {\r\n            var values = matrix.split('(')[1].split(')')[0].split(',');\r\n            var a = values[0];\r\n            var b = values[1];\r\n            var angle = Math.round(Math.atan2(b, a) * (180 / Math.PI));\r\n        } else { var angle = 0; }\r\n\r\n        if (angle < 0) angle += 360;\r\n        return angle;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{\r\n                backgroundColor: \"white\"\r\n            }}\r\n            >\r\n                <Content>\r\n                    <Row gutter={24} style={{ textAlign: \"center\" }}>\r\n                        <Col md={{ span: 6, offset: 3 }}>\r\n                            <WelcomeDiv>\r\n                                <div>\r\n                                    Welcome To\r\n                                </div>\r\n                                <div>\r\n                                    Saman.com\r\n                                </div>\r\n                                <div className=\"welcome-div-text\">\r\n                                    A place where you can buy new and old products and we also give you free online selling platform.\r\n                                </div>\r\n                            </WelcomeDiv>\r\n\r\n                        </Col>\r\n                        <Col md={{ span: 11, offset: 1 }}>\r\n                            <LandingRightColumn ref={landingRightColumnElement} id=\"landingRightColumnDiv\">\r\n                                <RightBackGround id=\"landingRightBackgroundDiv\">\r\n                                </RightBackGround>\r\n                                <PCBackgroundImg\r\n                                    src={pcBackgroundImg}\r\n                                >\r\n                                </PCBackgroundImg>\r\n\r\n                            </LandingRightColumn>\r\n\r\n                        </Col>\r\n                    </Row>                    \r\n                    <BuySellInformation />\r\n                    <HowSamanWorksDiv />\r\n                </Content>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\search_bar.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\navbar_items.js",[],"E:\\FYP\\geo-ecommerce\\src\\enums\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\history.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\buy_sell_info.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\store.js",["133"],"E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userReducer.js",["134","135","136","137"],"import reduceReducers from 'reduce-reducers';\r\n\r\nimport {\r\n    USER_REGISTER,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_ERROR,\r\n    USER_REGISTER_RESET,\r\n    USER_LOGIN,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_ERROR,\r\n    USER_LOGOUT,\r\n    USER_LOGOUT_SUCCESS,\r\n    FETCH_USER,\r\n    FETCH_USER_SUCCESS,\r\n    FETCH_USER_ERROR\r\n} from './userTypes';\r\n\r\nconst initialState = {\r\n    //Register User\r\n    registeringUser: false,\r\n    registrationSuccess: null,\r\n    registrationError: null,\r\n\r\n    //Logging State\r\n    loggingIn: false,\r\n    loggingError: null,\r\n\r\n    //Fetching User\r\n    gettingUser: false,\r\n    user: null,\r\n    gettingUserError: null\r\n}\r\n\r\nconst userRegisterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER:\r\n            return {\r\n                ...state,\r\n                registeringUser: true,\r\n                registrationSuccess: null,\r\n                registrationError: null\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            //User Response\r\n            const User=action?.payload;            \r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                user: {\r\n                    user_id:User.user_id,\r\n                    first_name:User.first_name,\r\n                    last_name:User.last_name,\r\n                    email:User.email\r\n                },\r\n                registrationError: null\r\n            }\r\n        case USER_REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                registrationSuccess: null,\r\n                registrationError: action?.payload\r\n            }\r\n        case USER_REGISTER_RESET:\r\n            return{\r\n                ...state,\r\n                registeringUser: false,\r\n                registrationSuccess: null,\r\n                registrationError: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userLoginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            return {\r\n                ...state,\r\n                loggingIn: true,\r\n                loggingError: null\r\n            }\r\n        case USER_LOGIN_SUCCESS:\r\n            const User=action?.payload;\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: {\r\n                    user_id:User.user_id,\r\n                    first_name:User.first_name,\r\n                    last_name:User.last_name,\r\n                    email:User.email\r\n                },\r\n                loggingError: null\r\n            }\r\n        case USER_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: null,\r\n                loggingError: action?.payload\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nconst userLogoutReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case USER_LOGOUT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loggingIn: false,\r\n                user: null,\r\n                loggingError: null\r\n            }            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const reducer = reduceReducers(userRegisterReducer, userLoginReducer, userLogoutReducer);","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userActions.js",["138","139","140","141","142","143"],"import axios from 'axios';\r\nimport { API_URL } from '../../config';\r\nimport { push } from 'react-router-redux'\r\n\r\nimport { setAuthHeaders, removeAuthHeaders } from '../../services/auth';\r\nimport { removeToken } from '../../utils/storage';\r\n// import history from '../../utils/history';\r\nimport {\r\n    FETCH_USER,\r\n    FETCH_USER_SUCCESS,\r\n    FETCH_USER_ERROR,\r\n    USER_REGISTER,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_ERROR,\r\n    USER_REGISTER_RESET,\r\n    USER_LOGIN,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_ERROR,\r\n    USER_LOGOUT,\r\n    USER_LOGOUT_SUCCESS\r\n} from './userTypes';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst onFetchUser = () => {\r\n    return {\r\n        type: FETCH_USER\r\n    }\r\n}\r\n\r\nconst onFetchUserSuccess = (user) => {\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        payload: user\r\n    }\r\n}\r\n\r\nconst onFetchUserError = (error) => {\r\n    return {\r\n        type: FETCH_USER_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst onRegisterUser = () => {\r\n    return {\r\n        type: USER_REGISTER,\r\n\r\n    }\r\n}\r\n\r\nconst onRegisterUserSuccess = (data) => {\r\n    return {\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst onRegisterUserError = (error) => {\r\n    return {\r\n        type: USER_REGISTER_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst onRegisterUserReset = () => {\r\n    return {\r\n        type: USER_REGISTER_RESET\r\n    }\r\n}\r\n\r\nconst onUserLogin=()=>{\r\n    return{\r\n        type:USER_LOGIN\r\n    }\r\n}\r\n\r\nconst onUserLoginSuccess=(data)=>{\r\n    return{\r\n        type:USER_LOGIN_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst onUserLoginError=(error)=>{\r\n    return{\r\n        type:USER_LOGIN_ERROR,\r\n        payload:error\r\n    }\r\n}\r\n\r\nconst onUserLogout=()=>{\r\n    return{\r\n        type:USER_LOGOUT\r\n    }\r\n}\r\n\r\nconst onUserLogoutSuccess=()=>{\r\n    return{\r\n        type:USER_LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\nexport const registerUser = (userData,history) => {\r\n    return (dispatch) => {\r\n        dispatch(onRegisterUser());\r\n        axios.post(`${API_URL}/users/register`, userData)\r\n            .then(res => {                \r\n                dispatch(onRegisterUserSuccess(res.data.user));\r\n                localStorage.setItem(\"user\", res.data.token);\r\n\r\n                //Tokenization\r\n                setAuthHeaders();        \r\n\r\n                history.push(\"/\");\r\n\r\n            }).catch(err => {\r\n                if (err.response.data.error) {\r\n                    dispatch(onRegisterUserError(err.response.data.error.details[0][\"message\"]));\r\n                } else {\r\n                    dispatch(onRegisterUserError(err.response.data));\r\n                }                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loginUser=(userData,history)=>{\r\n    return (dispatch)=>{\r\n        const rememberMe=userData.rememberMe;\r\n        //Remove Remember Me\r\n        delete userData.rememberMe;\r\n        \r\n        dispatch(onUserLogin());\r\n        axios.post(`${API_URL}/users/login`,userData)\r\n        .then(res=>{                     \r\n            dispatch(onUserLoginSuccess(res.data.user));\r\n            console.log(history);\r\n            if(rememberMe){\r\n                localStorage.setItem(\"user\", res.data.token);\r\n            }else{\r\n                sessionStorage.setItem(\"user\", res.data.token);\r\n            }\r\n\r\n            //Tokenization\r\n            setAuthHeaders();            \r\n\r\n            history.push(\"/\");\r\n            \r\n            \r\n        }).catch(err=>{ \r\n            console.log(err);           \r\n            if(err.response.data.error){\r\n                dispatch(onUserLoginError(err.response.data.error.details[0][\"message\"]));\r\n            }else{\r\n                dispatch(onUserLoginError(err.response.data));\r\n            }\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const logoutUser=(history)=>{\r\n    return (dispatch)=>{\r\n        dispatch(onUserLogoutSuccess());\r\n        removeAuthHeaders();\r\n        removeToken();\r\n        history.push(\"/\");\r\n    }\r\n}","E:\\FYP\\geo-ecommerce\\src\\services\\auth.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\storage.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\how_saman_works_info.js",["144","145"],"import React from 'react';\r\nimport { Row, Col, Image } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Fragment } from 'react';\r\nimport { HowSamanWorksMainDiv } from '../style';\r\nimport  WhySamanBuyImage from '../../../assests/images/why_saman_buy.png';\r\n\r\nconst HowSamanWorksDiv = () => {\r\n    return (\r\n        <HowSamanWorksMainDiv>\r\n            <Row justify=\"center\">\r\n                <Col>\r\n                    <h2 className=\"how-it-works-title\">Why Saman.com?</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col\r\n                    // md={7}\r\n                    // lg={7}\r\n                    // xs={24}\r\n                    style={{\r\n                        textAlign: \"center\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"how-it-works-info\">Saman.com Provides a New Way<br />To Make Trades Faster Anywhere, Anytime.</h1>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row justify=\"center\" style={{\r\n                textAlign:'center'\r\n            }}>\r\n                <Col\r\n                    md={4}\r\n                    offset={2}\r\n                >\r\n                    <div>\r\n                    <Image\r\n                        src={WhySamanBuyImage}\r\n                    />                    \r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-headers\">Buy from your closest seller.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-contents\">Saman recommends you products from the sellers that are nearest to you for your faster delivery .</p>\r\n                    </div>\r\n                </Col>\r\n                <Col\r\n                 md={4}\r\n                 offset={2}\r\n                >\r\n                    <Image\r\n                        src={WhySamanBuyImage}\r\n                    >\r\n\r\n                    </Image>\r\n                </Col>\r\n                <Col\r\n                    md={4}\r\n                    offset={2}\r\n                >\r\n                    <Image\r\n                        src={WhySamanBuyImage}\r\n                    >\r\n\r\n                    </Image>\r\n                </Col>\r\n                \r\n            </Row>\r\n        </HowSamanWorksMainDiv>\r\n    )\r\n}\r\n\r\nexport default HowSamanWorksDiv;","E:\\FYP\\geo-ecommerce\\src\\routes.js",[],"E:\\FYP\\geo-ecommerce\\src\\layout\\blank_layout.js",[],"E:\\FYP\\geo-ecommerce\\src\\layout\\conditional_layout.js",["146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":12},{"ruleId":"151","severity":1,"message":"155","line":3,"column":27,"nodeType":"153","messageId":"154","endLine":3,"endColumn":33},{"ruleId":"151","severity":1,"message":"156","line":3,"column":16,"nodeType":"153","messageId":"154","endLine":3,"endColumn":24},{"ruleId":"151","severity":1,"message":"157","line":3,"column":26,"nodeType":"153","messageId":"154","endLine":3,"endColumn":36},{"ruleId":"158","severity":1,"message":"159","line":50,"column":8,"nodeType":"160","endLine":50,"endColumn":20,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"162","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"156","line":3,"column":28,"nodeType":"153","messageId":"154","endLine":3,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":141,"column":49,"nodeType":"165","endLine":141,"endColumn":79},{"ruleId":"163","severity":1,"message":"164","line":195,"column":49,"nodeType":"165","endLine":195,"endColumn":106},{"ruleId":"151","severity":1,"message":"166","line":2,"column":15,"nodeType":"153","messageId":"154","endLine":2,"endColumn":23},{"ruleId":"151","severity":1,"message":"167","line":7,"column":10,"nodeType":"153","messageId":"154","endLine":7,"endColumn":26},{"ruleId":"151","severity":1,"message":"168","line":85,"column":11,"nodeType":"153","messageId":"154","endLine":85,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":96,"column":22,"nodeType":"153","messageId":"171","endLine":96,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":30,"column":1,"nodeType":"174","endLine":33,"endColumn":2},{"ruleId":"151","severity":1,"message":"175","line":11,"column":5,"nodeType":"153","messageId":"154","endLine":11,"endColumn":16},{"ruleId":"151","severity":1,"message":"176","line":13,"column":5,"nodeType":"153","messageId":"154","endLine":13,"endColumn":15},{"ruleId":"151","severity":1,"message":"177","line":14,"column":5,"nodeType":"153","messageId":"154","endLine":14,"endColumn":23},{"ruleId":"151","severity":1,"message":"178","line":15,"column":5,"nodeType":"153","messageId":"154","endLine":15,"endColumn":21},{"ruleId":"151","severity":1,"message":"179","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"180","line":28,"column":7,"nodeType":"153","messageId":"154","endLine":28,"endColumn":18},{"ruleId":"151","severity":1,"message":"181","line":34,"column":7,"nodeType":"153","messageId":"154","endLine":34,"endColumn":25},{"ruleId":"151","severity":1,"message":"182","line":41,"column":7,"nodeType":"153","messageId":"154","endLine":41,"endColumn":23},{"ruleId":"151","severity":1,"message":"183","line":69,"column":7,"nodeType":"153","messageId":"154","endLine":69,"endColumn":26},{"ruleId":"151","severity":1,"message":"184","line":95,"column":7,"nodeType":"153","messageId":"154","endLine":95,"endColumn":19},{"ruleId":"151","severity":1,"message":"185","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"186","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":18},{"ruleId":"151","severity":1,"message":"187","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":33},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["190"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","'DownCircleFilled' is defined but never used.","'getRotationDegree' is assigned a value but never used.","no-redeclare","'angle' is already defined.","redeclared","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'USER_LOGOUT' is defined but never used.","'FETCH_USER' is defined but never used.","'FETCH_USER_SUCCESS' is defined but never used.","'FETCH_USER_ERROR' is defined but never used.","'push' is defined but never used.","'onFetchUser' is assigned a value but never used.","'onFetchUserSuccess' is assigned a value but never used.","'onFetchUserError' is assigned a value but never used.","'onRegisterUserReset' is assigned a value but never used.","'onUserLogout' is assigned a value but never used.","'styled' is defined but never used.","'Fragment' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [history, userDetail]",{"range":"193","text":"194"},[1857,1869],"[history, userDetail]"]