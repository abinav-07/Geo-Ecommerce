[{"E:\\FYP\\geo-ecommerce\\src\\index.js":"1","E:\\FYP\\geo-ecommerce\\src\\reportWebVitals.js":"2","E:\\FYP\\geo-ecommerce\\src\\App.js":"3","E:\\FYP\\geo-ecommerce\\src\\pages\\login\\index.jsx":"4","E:\\FYP\\geo-ecommerce\\src\\components\\login_sign_up_components\\index.js":"5","E:\\FYP\\geo-ecommerce\\src\\pages\\register\\index.jsx":"6","E:\\FYP\\geo-ecommerce\\src\\config.js":"7","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\index.js":"8","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\style.js":"9","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\index.js":"10","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\search_bar.js":"11","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\navbar_items.js":"12","E:\\FYP\\geo-ecommerce\\src\\enums\\index.js":"13","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\style.js":"14","E:\\FYP\\geo-ecommerce\\src\\utils\\history.js":"15","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\buy_sell_info.js":"16","E:\\FYP\\geo-ecommerce\\src\\redux\\store.js":"17","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userReducer.js":"18","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userTypes.js":"19","E:\\FYP\\geo-ecommerce\\src\\redux\\index.js":"20","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userActions.js":"21","E:\\FYP\\geo-ecommerce\\src\\services\\auth.js":"22","E:\\FYP\\geo-ecommerce\\src\\utils\\storage.js":"23","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\how_saman_works_info.js":"24","E:\\FYP\\geo-ecommerce\\src\\routes.js":"25","E:\\FYP\\geo-ecommerce\\src\\layout\\blank_layout.js":"26","E:\\FYP\\geo-ecommerce\\src\\layout\\conditional_layout.js":"27","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\index.js":"28","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\style.js":"29","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\index.js":"30","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\style.js":"31","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\productDetailTable.js":"32","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\uploadImageComponent.js":"33","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsActions.js":"34","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsTypes.js":"35","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsReducer.js":"36","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\your_store_tab\\index.js":"37","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\index.js":"38","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\main_layout.js":"39","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\style.js":"40","E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsReducer.js":"41","E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsTypes.js":"42","E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsActions.js":"43","E:\\FYP\\geo-ecommerce\\src\\utils\\product_type.js":"44","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\product_modal.js":"45","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\login\\index.js":"46","E:\\FYP\\geo-ecommerce\\src\\layout\\admin_layout.js":"47","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\index.js":"48","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\navbar_items.js":"49","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\style.js":"50","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\index.js":"51","E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminReducer.js":"52","E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminTypes.js":"53","E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminActions.js":"54","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\style.js":"55","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\index.js":"56","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\style.js":"57","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\rating_component.js":"58","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\index.js":"59","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\style.js":"60","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\index.js":"61","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\active_info_bar.js":"62","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\messages.js":"63","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\style.js":"64","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\order_product\\index.js":"65","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\order_product\\style.js":"66","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\order_product\\payment_modal.js":"67","E:\\FYP\\geo-ecommerce\\src\\utils\\harvesine_calculator.js":"68","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\orders_tab\\index.js":"69","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sold_products_tab\\index.js":"70","E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\index.js":"71","E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\style.js":"72","E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\personal_information\\index.js":"73","E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\orders\\index.js":"74","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\orders\\index.js":"75","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\message_dropdown.js":"76","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\chat_bot\\chat-bot.js":"77"},{"size":984,"mtime":1613876971182,"results":"78","hashOfConfig":"79"},{"size":362,"mtime":499162500000,"results":"80","hashOfConfig":"79"},{"size":3101,"mtime":1618219960884,"results":"81","hashOfConfig":"79"},{"size":8010,"mtime":1615189121613,"results":"82","hashOfConfig":"79"},{"size":677,"mtime":1615189029914,"results":"83","hashOfConfig":"79"},{"size":10273,"mtime":1616600707132,"results":"84","hashOfConfig":"79"},{"size":430,"mtime":1617170915246,"results":"85","hashOfConfig":"79"},{"size":10555,"mtime":1618398903549,"results":"86","hashOfConfig":"79"},{"size":2539,"mtime":1618457563768,"results":"87","hashOfConfig":"79"},{"size":7669,"mtime":1619107278626,"results":"88","hashOfConfig":"79"},{"size":214,"mtime":1609678318417,"results":"89","hashOfConfig":"79"},{"size":2470,"mtime":1617522777494,"results":"90","hashOfConfig":"79"},{"size":6145,"mtime":1615284694075,"results":"91","hashOfConfig":"79"},{"size":4633,"mtime":1619099182980,"results":"92","hashOfConfig":"79"},{"size":117,"mtime":1613046848940,"results":"93","hashOfConfig":"79"},{"size":806,"mtime":1614920973528,"results":"94","hashOfConfig":"79"},{"size":1647,"mtime":1615264290776,"results":"95","hashOfConfig":"79"},{"size":4591,"mtime":1617428173950,"results":"96","hashOfConfig":"79"},{"size":816,"mtime":1615539545385,"results":"97","hashOfConfig":"79"},{"size":180,"mtime":1615263948126,"results":"98","hashOfConfig":"79"},{"size":4550,"mtime":1619098327046,"results":"99","hashOfConfig":"79"},{"size":356,"mtime":1615189764207,"results":"100","hashOfConfig":"79"},{"size":437,"mtime":1615191388477,"results":"101","hashOfConfig":"79"},{"size":3466,"mtime":1618566861856,"results":"102","hashOfConfig":"79"},{"size":4284,"mtime":1617850984115,"results":"103","hashOfConfig":"79"},{"size":143,"mtime":1613393474778,"results":"104","hashOfConfig":"79"},{"size":498,"mtime":1613395638186,"results":"105","hashOfConfig":"79"},{"size":1958,"mtime":1617421581840,"results":"106","hashOfConfig":"79"},{"size":567,"mtime":1618397415863,"results":"107","hashOfConfig":"79"},{"size":9550,"mtime":1618457187486,"results":"108","hashOfConfig":"79"},{"size":646,"mtime":1613809541941,"results":"109","hashOfConfig":"79"},{"size":3009,"mtime":1613805462798,"results":"110","hashOfConfig":"79"},{"size":3797,"mtime":1613839397989,"results":"111","hashOfConfig":"79"},{"size":5998,"mtime":1618037034329,"results":"112","hashOfConfig":"79"},{"size":1364,"mtime":1617249782597,"results":"113","hashOfConfig":"79"},{"size":7224,"mtime":1617258017645,"results":"114","hashOfConfig":"79"},{"size":10512,"mtime":1618040564967,"results":"115","hashOfConfig":"79"},{"size":3972,"mtime":1619107316396,"results":"116","hashOfConfig":"79"},{"size":5634,"mtime":1619102836835,"results":"117","hashOfConfig":"79"},{"size":2542,"mtime":1619068827883,"results":"118","hashOfConfig":"79"},{"size":1261,"mtime":1616661651719,"results":"119","hashOfConfig":"79"},{"size":209,"mtime":1614519674243,"results":"120","hashOfConfig":"79"},{"size":1045,"mtime":1615370873066,"results":"121","hashOfConfig":"79"},{"size":1205,"mtime":1614832057795,"results":"122","hashOfConfig":"79"},{"size":5697,"mtime":1619068847837,"results":"123","hashOfConfig":"79"},{"size":5368,"mtime":1615521716433,"results":"124","hashOfConfig":"79"},{"size":1563,"mtime":1615259566253,"results":"125","hashOfConfig":"79"},{"size":1443,"mtime":1615285244118,"results":"126","hashOfConfig":"79"},{"size":837,"mtime":1615284718555,"results":"127","hashOfConfig":"79"},{"size":426,"mtime":1615258345667,"results":"128","hashOfConfig":"79"},{"size":7268,"mtime":1619069763122,"results":"129","hashOfConfig":"79"},{"size":2784,"mtime":1615521043793,"results":"130","hashOfConfig":"79"},{"size":519,"mtime":1615521053329,"results":"131","hashOfConfig":"79"},{"size":2071,"mtime":1615521136749,"results":"132","hashOfConfig":"79"},{"size":382,"mtime":1615284292178,"results":"133","hashOfConfig":"79"},{"size":9632,"mtime":1619071115681,"results":"134","hashOfConfig":"79"},{"size":162,"mtime":1615379879797,"results":"135","hashOfConfig":"79"},{"size":2803,"mtime":1615541966619,"results":"136","hashOfConfig":"79"},{"size":6253,"mtime":1617507718772,"results":"137","hashOfConfig":"79"},{"size":929,"mtime":1615608667529,"results":"138","hashOfConfig":"79"},{"size":7730,"mtime":1619072899966,"results":"139","hashOfConfig":"79"},{"size":1371,"mtime":1616479806729,"results":"140","hashOfConfig":"79"},{"size":1438,"mtime":1616513623708,"results":"141","hashOfConfig":"79"},{"size":846,"mtime":1619072712032,"results":"142","hashOfConfig":"79"},{"size":9445,"mtime":1619108831265,"results":"143","hashOfConfig":"79"},{"size":705,"mtime":1619064196275,"results":"144","hashOfConfig":"79"},{"size":10940,"mtime":1619093032657,"results":"145","hashOfConfig":"79"},{"size":928,"mtime":1616664106275,"results":"146","hashOfConfig":"79"},{"size":9674,"mtime":1617503472672,"results":"147","hashOfConfig":"79"},{"size":3032,"mtime":1618040173017,"results":"148","hashOfConfig":"79"},{"size":810,"mtime":1617604673814,"results":"149","hashOfConfig":"79"},{"size":1351,"mtime":1618397424080,"results":"150","hashOfConfig":"79"},{"size":5959,"mtime":1617602226492,"results":"151","hashOfConfig":"79"},{"size":2699,"mtime":1617605726374,"results":"152","hashOfConfig":"79"},{"size":5132,"mtime":1618544524033,"results":"153","hashOfConfig":"79"},{"size":3815,"mtime":1619090530186,"results":"154","hashOfConfig":"79"},{"size":3924,"mtime":1618543529554,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1l58w15",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"158"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"158"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"158"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"158"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"158"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"158"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"158"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"158"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"158"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"158"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"158"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"158"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"158"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"158"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"158"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"158"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"158"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"158"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"158"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"158"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"158"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"158"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"E:\\FYP\\geo-ecommerce\\src\\index.js",[],["341","342"],"E:\\FYP\\geo-ecommerce\\src\\reportWebVitals.js",[],"E:\\FYP\\geo-ecommerce\\src\\App.js",["343","344","345","346"],"import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { message } from 'antd';\nimport Routes from './routes';\nimport { getAdminToken, getToken } from './utils/storage';\nimport { getAllSellerProducts, getUserData } from './redux';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const loggingIn = useSelector(state => state?.user?.loggingIn);\n\n  useEffect(() => {\n    dispatch(getUserData());\n  }, [loggingIn]);\n\n  const PrivateRouter = () => {\n    useEffect(() => {\n      message.info({\n        content: \"You must login to view this page!\",\n      });\n    });\n\n    return <Redirect to=\"/\"></Redirect>\n  }\n\n  const AdminPrivateRouter = () => {\n    useEffect(() => {\n      message.info({\n        content: \"You must be admin to view this page!\"\n      })\n    });\n    return <Redirect to=\"/admin/login\" />\n  }\n\n  return (\n    <Switch>\n      {Routes.map((\n        {\n          name,\n          path,\n          privateRoute,\n          adminRoute,\n          exact,\n          displaySearchBar,\n          layout: Layout,\n          component: Component\n        },\n        i\n      ) => {\n        if (privateRoute && !adminRoute) {\n          return (\n            <Route\n              key={`${path}_${i}`}\n              path={path}\n              exact={exact}\n              render={(props) => {\n                if (!getToken()) {\n                  return <PrivateRouter />\n                } else {\n                  return (\n                    <Layout displaySearchBar={displaySearchBar} {...props}>\n                      <Component {...props}></Component>\n                    </Layout>\n                  )\n                }\n              }}\n            >\n            </Route>\n          )\n        } else if (privateRoute && adminRoute) {\n          return (\n            <Route\n              key={`${path}_${i}`}\n              path={path}\n              exact={exact}\n              render={(props) => {\n                if (!getAdminToken()) {\n                  return <AdminPrivateRouter />;\n                } else {\n                  return (\n                    <Layout {...props}>\n                      <Component {...props}></Component>\n                    </Layout>\n                  )\n                }\n              }}\n            />\n          )\n        } else {\n          return (\n            <Route\n              key={`${path}_${i}`}\n              path={path}\n              exact={exact}\n              render={(props) => {\n                return (\n                  <Layout displaySearchBar={displaySearchBar} {...props}>\n                    <Component {...props}></Component>\n                  </Layout>\n                )\n              }\n              }\n            ></Route>\n          )\n        }\n      })}\n      <Route path=\"*\" exact>\n        <div style={{ display: \"flex\", height: \"100vh\", alignItems: \"center\", justifyContent: \"center\" }}>Page Not Found!</div>\n      </Route>\n    </Switch >\n  );\n}\n\nexport default App;\n","E:\\FYP\\geo-ecommerce\\src\\pages\\login\\index.jsx",["347","348","349","350"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, withRouter, useHistory } from 'react-router-dom';\r\nimport { Layout, Row, Col, Form, Input, Checkbox, Button, Divider, Image, Alert } from 'antd';\r\nimport { Content, Footer, Header } from 'antd/lib/layout/layout';\r\nimport { CustomizedButton, CustomGoogleLoginBtn, DividerColumn } from '../../components/login_sign_up_components';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport logo from '../../assests/images/logo.png'\r\nimport { google_client_id } from '../../config';\r\nimport { getToken } from '../../utils/storage';\r\n// import history  from '../../utils/history';\r\n\r\n//User Actions\r\nimport { loginUser, onUserErrorReset } from '../../redux';\r\n\r\nconst LoginUserPage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const loggingUser = useSelector(state => state.user?.loggingIn);\r\n    const userDetail = useSelector(state => state.user?.user);\r\n    const loggingErrorMsg = useSelector(state => state.user?.loggingError);\r\n\r\n    //Reset Errors\r\n    useEffect(()=>{\r\n        dispatch(onUserErrorReset());\r\n    },[]);\r\n\r\n    //Google Sign Up Response\r\n    const responseGoogle = (response) => {\r\n        const googleResponse = response.profileObj;\r\n        const googleFormValues = {\r\n            firstName: googleResponse.name,\r\n            email: googleResponse.email,\r\n            googleId: googleResponse.googleId,\r\n            type: \"googleAuth\"\r\n        }\r\n        dispatch(loginUser(googleFormValues, history));\r\n    }\r\n\r\n    const responseGoogleFailure = (response) => {\r\n        console.log('Failed: ', response);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        dispatch(loginUser(values, history));\r\n    }\r\n\r\n    //Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getToken()) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [userDetail]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout >\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>\r\n                        <Col span={8} offset={8} style={{ textAlign: \"end\" }}>\r\n                            <CustomizedButton><Link to=\"/users/register\">CREATE ACCOUNT</Link></CustomizedButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content >\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Log into Saman.com</h2>\r\n                        </Row>\r\n                        {loggingErrorMsg && (\r\n                            <Alert\r\n                                type=\"error\"\r\n                                message={loggingErrorMsg}\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row style={{ width: \"100vw\", paddingTop: \"1rem\" }}>\r\n                            <Col md={{ span: 8 }} offset={3}>\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 16 }}\r\n                                    name=\"loginForm\"\r\n                                    onFinish={onFinish}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: \"Please Enter Email!\" }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\" }}\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 },\r\n                                        }}\r\n                                        name=\"logIn\"\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}\r\n                                            loading={loggingUser}\r\n                                        >Log In</Button>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\" }}\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 },\r\n                                        }}\r\n                                        valuePropName=\"checked\"\r\n                                        name=\"rememberMe\"\r\n                                    >\r\n                                        <Checkbox>Remember Me</Checkbox>\r\n                                    </Form.Item>\r\n\r\n                                </Form>\r\n                            </Col>\r\n                            <DividerColumn xs={{ span: 24 }} md={{ span: 2 }}>\r\n                                <Divider type=\"vertical\" style={{  'backgroundColor': \"#616362\" }}></Divider>\r\n                                <span>OR</span>\r\n                            </DividerColumn>\r\n                            <Col \r\n                            xs={{\r\n                                span: 24\r\n                            }}\r\n                                md={{\r\n                                    span: 8\r\n                                }}\r\n                                style={{ padding: \"1.4rem 0\", }}\r\n                            >\r\n                                <CustomGoogleLoginBtn\r\n                                    clientId={google_client_id}\r\n                                    buttonText=\"Continue With Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogleFailure}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default LoginUserPage;","E:\\FYP\\geo-ecommerce\\src\\components\\login_sign_up_components\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\register\\index.jsx",["351","352"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport Layout, { Header, Content, Footer } from 'antd/lib/layout/layout';\r\nimport { Row, Col, Form, Input, Divider, Image, Button, Alert } from 'antd';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport { CustomizedButton, CustomGoogleLoginBtn, DividerColumn } from '../../components/login_sign_up_components';\r\nimport { google_client_id } from '../../config';\r\nimport logo from '../../assests/images/logo.png';\r\nimport { getToken } from '../../utils/storage';\r\n\r\n//Actions\r\nimport { registerUser, onUserErrorReset } from '../../redux';\r\n\r\nconst RegisterUserPage = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [latitude, setLatitude] = useState();\r\n    const [longitude, setLongitude] = useState();\r\n    const registeringUser = useSelector(state => state.user?.registeringUser);\r\n    const registerErrorMsg = useSelector(state => state.user?.registrationError);\r\n\r\n    //Reset Errors\r\n    useEffect(() => {\r\n        dispatch(onUserErrorReset());\r\n    }, []);\r\n\r\n    //Google Sign Up Response\r\n    const responseGoogle = (response) => {\r\n        const googleResponse = response.profileObj;\r\n        const googleFormValues = {\r\n            firstName: googleResponse.name,\r\n            email: googleResponse.email,\r\n            googleId: googleResponse.googleId,\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n            type: \"googleAuth\"\r\n        }\r\n        dispatch(registerUser(googleFormValues, history));\r\n    }\r\n\r\n    const responseGoogleFailure = (response) => {\r\n        console.log('Failed: ', response);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        const formValues = {\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            email: values.registerEmail,\r\n            password: values.registerPassword,\r\n            confirm_password: values.registerConfirmPassword,\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n        }\r\n        dispatch(registerUser(formValues, history));\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed: ', errorInfo);\r\n    };\r\n\r\n    //Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getToken()) {\r\n            history.push(\"/\");\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const positionSuccess = (position) => {\r\n            let latitude = position.coords.latitude;\r\n            let longitude = position.coords.longitude;\r\n            setLatitude(latitude);\r\n            setLongitude(longitude);\r\n        }\r\n\r\n        const positionError = (error) => {\r\n            var errors = {\r\n                1: \"Authorization failed\", // permission was denied\r\n                2: \"Can't detect location\", //position was unavailable\r\n                3: \"Connection timeout\" // timedout\r\n            };\r\n            console.log(\"Error:\" + errors[error.code]);\r\n        }\r\n\r\n        //Checking wheather geo location is enabled in browser or not \r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(positionSuccess, positionError, { enableHighAccuracy: true });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col xs={{ span: 2 }} md={{ span: 8 }}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>\r\n                        <Col xs={{ span: 4, offset: 6 }} md={{ span: 8, offset: 8 }} style={{ textAlign: \"end\" }}>\r\n                            <CustomizedButton><Link to=\"/users/login\">Already have an account? Log In</Link></CustomizedButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content>\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Sign Up</h2>\r\n                        </Row>\r\n                        {registerErrorMsg && (\r\n                            <Alert\r\n                                message={registerErrorMsg}\r\n                                type=\"error\"\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row gutter={24} style={{ width: \"100%\", paddingTop: \"1rem\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\r\n                            <Col md={{ span: 8 }} >\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 16 }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"First Name\"\r\n                                        name=\"firstName\"\r\n                                        rules={[{ required: true, message: \"Please Enter Your First Name!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        rules={[{ required: true, message: \"Please Enter Your Last Name!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"registerEmail\"\r\n                                        rules={[{ required: true, message: \"Please Enter Email!\" }]}\r\n                                    >\r\n                                        <Input></Input>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"registerPassword\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Confirm Password\"\r\n                                        name=\"registerConfirmPassword\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"signUp\"\r\n                                        wrapperCol={{\r\n                                            xs: { offset: 0, span: 16 },\r\n                                            md: { offset: 8, span: 16 }\r\n                                        }}\r\n                                        style={{ textAlign: \"center\" }}\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}\r\n                                            loading={registeringUser}\r\n                                        >Sign Up\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                            <DividerColumn xs={{ span: 24 }} md={{ span: 2 }} style={{ textAlign: \"center\", }} align=\"middle\">\r\n                                <Divider type=\"vertical\" style={{ 'backgroundColor': \"#616362\" }}></Divider>\r\n                                <span>OR</span>\r\n                            </DividerColumn>\r\n                            <Col xs={{\r\n                                span: 24\r\n                            }} md={{ span: 8 }}>\r\n                                <CustomGoogleLoginBtn\r\n                                    clientId={google_client_id}\r\n                                    buttonText=\"Sign Up With Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogleFailure}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterUserPage;","E:\\FYP\\geo-ecommerce\\src\\config.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\index.js",["353","354","355"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport SearchBar from './search_bar';\r\nimport RatingComponent from './rating_component';\r\nimport MessageDropDown from './message_dropdown';\r\nimport { NavBarDiv, NavBarMenu, MenuItem, DropDownMenuDiv, UserDropDownMenuDiv, LogoutButton } from './style';\r\nimport { Row, Col, Dropdown, Divider, Image, Input } from 'antd';\r\nimport { DownOutlined, SmileOutlined, UserOutlined } from '@ant-design/icons'\r\nimport { NavbarItems, UserProfileItems } from './navbar_items';\r\nimport { getToken } from '../../utils/storage';\r\nimport { Fragment } from 'react';\r\nimport { logoutUser } from '../../redux';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport logo from '../../assests/images/logo.png';\r\nimport $ from 'jquery';\r\n\r\nconst Navbar = ({ displaySearchBar }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const User = useSelector(state => state.user?.user);\r\n    const fullName = `${User?.first_name} ${User?.last_name ? User?.last_name : \"\"}`;\r\n\r\n    const onLogout = () => {\r\n        dispatch(logoutUser(history));\r\n    }\r\n\r\n    //Display Nav Bar on Scroll\r\n    useEffect(() => {\r\n        var previousScrollPos = window.pageYOffset;\r\n        window.onscroll = function () {\r\n            var currentScrollPos = window.pageYOffset;\r\n            if (previousScrollPos > currentScrollPos) {\r\n                $(\"#navBarDiv\").css({ top: \"0\" })\r\n            } else {\r\n                $(\"#navBarDiv\").css({ top: \"-100px\" })\r\n            }\r\n            previousScrollPos = currentScrollPos;\r\n        };\r\n    });\r\n\r\n\r\n    const DropDownMenu = (props) => {\r\n        return (\r\n            <DropDownMenuDiv>\r\n                {\r\n                    (props.subMenu && props.subMenu.length > 0)\r\n                        ? props.subMenu.map(({ name, label, path }, i) => {\r\n                            return (\r\n                                <NavBarMenu>\r\n                                    <MenuItem\r\n                                        key={i}\r\n                                    >\r\n                                        <Link to={path}>\r\n                                            {label}\r\n                                        </Link>\r\n\r\n                                    </MenuItem>\r\n                                </NavBarMenu>\r\n                            )\r\n                        }) :\r\n                        \"\"\r\n                }\r\n            </DropDownMenuDiv>\r\n        )\r\n    }\r\n\r\n    const UserDropDownMenu = () => {\r\n        return (\r\n            <UserDropDownMenuDiv>\r\n                <Row className=\"userMenuLabel\">\r\n                    <h4><b>{fullName}</b></h4>\r\n                </Row>\r\n                <Row className=\"userMenuLabel userMenuEmail\">\r\n                    <p>{User?.email}</p>\r\n                </Row>\r\n                <Row className=\"userMenuLabel\">\r\n                    <Link to=\"/profile\">\r\n                        <h4><UserOutlined style={{\r\n                            fontSize: \"1rem\",\r\n                            marginRight: \"0.5rem\"\r\n                        }} /><b>Your Profile</b></h4>\r\n                    </Link>\r\n\r\n                </Row>\r\n                <Divider style={{ margin: \"2px 0px\" }} />\r\n                <Row>\r\n                    <LogoutButton\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            onLogout()\r\n                        }}\r\n                    >\r\n                        Log out\r\n                    </LogoutButton>\r\n                </Row>\r\n            </UserDropDownMenuDiv>\r\n        )\r\n    };\r\n\r\n\r\n    //Return Main Component\r\n    return (\r\n        <NavBarDiv id=\"navBarDiv\">\r\n            <Row gutter={24}>\r\n                <Col\r\n                    md={{ span: 5, offset: 0 }}\r\n                    xl={{ span: 5, offset: 0 }}\r\n                    style={{ display: \"flex\", alignItems: \"baseline\", flexDirection: \"row\", justifyContent: \"space-between\", zIndex: \"999\", textAlign: \"center\" }}\r\n                >\r\n                    <div style={{ padding: \"1rem\" }}>\r\n                        <Link to=\"/\">\r\n                            <Image src={logo}\r\n                                width=\"50%\"\r\n                                alt=\"Logo.png\"\r\n                                onClick={() => {\r\n                                    <Redirect to=\"/\"></Redirect>\r\n                                }}\r\n                                preview={false}\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    {/* Conditional Search Bar Rendering */}\r\n\r\n                    {displaySearchBar ?\r\n                        (\r\n                            <div style={{ padding: \"1rem\" }}>\r\n                                <div id=\"searchIconDiv\">\r\n                                    <div>\r\n                                        <SearchBar></SearchBar>\r\n                                    </div>\r\n                                    <div>\r\n                                        Search\r\n                                </div>\r\n                                </div>\r\n                                <div>\r\n                                    <Input id=\"searchInput\" placeholder=\"Search\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                        :\r\n                        (\r\n                            \"\"\r\n                        )\r\n                    }\r\n                </Col>\r\n\r\n                <Col\r\n                    md={{ span: 8 }}\r\n                    xl={{ span: 14 }}\r\n                >\r\n                    <Row style={{ display: \"flex\", flexDirection: \"column\", textAlign: \"center\" }}>\r\n                        <Col>\r\n                            <h2><b>Saman.com</b></h2>\r\n                            {/* <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image> */}\r\n                        </Col>\r\n                        <Col>\r\n                            <NavBarMenu\r\n                                mode=\"horizontal\"\r\n                            >\r\n                                {NavbarItems.map(({ name, label, subMenu, path }, i) =>\r\n                                    subMenu ?\r\n                                        (\r\n                                            <Dropdown\r\n                                                overlay={<DropDownMenu subMenu={subMenu}></DropDownMenu>}\r\n                                            >\r\n\r\n                                                <a className=\"nav-bar-anchor\">\r\n                                                    <div>{label}<DownOutlined /></div>\r\n                                                </a>\r\n\r\n\r\n                                            </Dropdown>\r\n                                        )\r\n                                        :\r\n                                        (\r\n                                            <MenuItem\r\n                                                key={i}\r\n                                            >\r\n                                                <Link to={path}>\r\n                                                    <h3>{label}</h3>\r\n                                                </Link>\r\n\r\n                                            </MenuItem>\r\n                                        )\r\n\r\n                                )}\r\n                            </NavBarMenu>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n                <Col\r\n                    md={{ span: 8 }}\r\n                    xl={{ span: 4, offset: 0 }}\r\n                    style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", zIndex: \"999\", padding: \"1rem\", textAlign: \"center\" }}\r\n                >\r\n                    <RatingComponent />\r\n\r\n                    {/* To display messages or not */}\r\n                    {getToken() ?\r\n                        (\r\n                            <MessageDropDown />\r\n                        ) :\r\n                        \"\"\r\n                    }\r\n\r\n\r\n                    {/* To display Profile Icon or signup/register icon */}\r\n                    {getToken() ?\r\n                        (\r\n                            UserProfileItems.map(({ name, label }) => {\r\n                                return (\r\n                                    <Fragment>\r\n                                        <Dropdown\r\n                                            overlay={<UserDropDownMenu />}\r\n                                            trigger={['click']}\r\n                                            style={{\r\n                                                pointer: \"cursor\"\r\n                                            }}\r\n                                        >\r\n                                            <div>\r\n                                                <div>\r\n                                                    <UserOutlined style={{\r\n                                                        fontSize: \"2.5rem\",\r\n                                                    }} />\r\n                                                </div>\r\n                                                <a className=\"nav-bar-anchor\" style={{ color: \"black\" }}>Profile</a>\r\n                                            </div>\r\n\r\n                                        </Dropdown>\r\n\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        )\r\n                        :\r\n                        (\r\n                            <div>\r\n                                <Link to=\"/users/register\" className=\"nav-bar-anchor\" style={{ color: \"black\" }}>\r\n                                    <div>\r\n                                        <i className=\"fa fa-hand-paper-o\" style={{ fontSize: \"2.5rem\" }}></i>\r\n                                    </div>\r\n                                    <div>\r\n                                        Sign Up/Register\r\n                                    </div>\r\n                                </Link>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </NavBarDiv>\r\n    )\r\n}\r\n\r\nexport default Navbar;","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\style.js",["356"],"import styled from 'styled-components';\r\nimport { Menu, Dropdown, Button } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nexport const NavBarDiv = styled.div`\r\n    z-index: 999;\r\n    position: fixed;\r\n    width:100vw;\r\n    justify-content:center;\r\n    background-color:rgba(255,255,255,0.2);    \r\n    perspective:1000px;\r\n    margin:0 auto;\r\n    font-weight:bold;\r\n    top:0;\r\n    transition: top 0.3s;\r\n    #searchInput{\r\n        display:none;\r\n    }\r\n    \r\n    @media only screen and (max-width: 900px) {\r\n        position:relative;\r\n    }\r\n\r\n`\r\n\r\nexport const NavBarMenu = styled(Menu)`\r\n    display:flex;  \r\n    justify-content:space-between;\r\n    background-color:rgba(255,255,255,0.2);    \r\n    .nav-bar-anchor{\r\n        color:black;\r\n        &:active{\r\n            color:black;\r\n        }\r\n    }\r\n`\r\nexport const MenuItem = styled(Menu.Item)`\r\n    h3{\r\n        font-weight:bold;\r\n    }\r\n`\r\nexport const SearchOutlinedEl = styled(SearchOutlined)`\r\n    font-size:2.5rem;   \r\n`\r\n\r\nexport const DropDownMenuDiv = styled.div`\r\n    margin-left:-3rem;\r\n    background-color:white;\r\n    display:grid;\r\n    grid-template-columns:auto auto;    \r\n    grid-column-gap: 20px;    \r\n    padding:10px;\r\n    border:1px solid grey;\r\n`;\r\n\r\nexport const MessageDropDownMenuDiv = styled.div`\r\n    margin-left:-10rem;    \r\n    padding:10px 12px;\r\n    border-radius:0.01rem;\r\n    background-color:rgb(255, 255, 255);\r\n    /* border:none */\r\n    box-shadow: 1px 2px 40px #888888;\r\n    width:200px;\r\n\r\n    .message-div{\r\n        :hover{\r\n            background-color:#e8e6e6;\r\n        }\r\n    }\r\n\r\n    .product-name{\r\n        font-size:1rem;\r\n        font-weight:600;\r\n        color:black;     \r\n    }\r\n    .message-sender{\r\n        margin-right:5px;\r\n        color:grey;\r\n        font-size:0.8rem;\r\n        \r\n    }\r\n    .message{\r\n        white-space:nowrap;\r\n        text-overflow:ellipsis;\r\n        overflow:hidden;\r\n        color:black;\r\n    }\r\n`\r\n\r\nexport const UserDropDownMenuDiv = styled.div`\r\n    margin-left:-5rem;    \r\n    padding:10px 12px;\r\n    border-radius:0.01rem;\r\n    background-color:rgb(255, 255, 255);\r\n    /* border:none */\r\n    box-shadow: 1px 2px 40px #888888;\r\n    .userMenuLabel{\r\n        margin-right:6rem;        \r\n    }\r\n    .userMenuEmail{\r\n        color:rgb(172, 172, 172);\r\n        font-size:500;\r\n        font-size:0.75rem;\r\n        margin-top:-0.5rem;\r\n    }\r\n`\r\n\r\nexport const LogoutButton = styled(Button)`\r\n    border:none;\r\n    padding-left:0px;\r\n    font-weight:600;\r\n    color:chocolate;\r\n    \r\n`","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\index.js",["357","358","359","360","361","362","363","364","365"],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\search_bar.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\navbar_items.js",["366"],"import { NAVBAR_TAB_KEYS, PRODUCT_TYPE, SELL_YOUR_PRODUCTS } from '../../enums'\r\nexport const NavbarItems = [\r\n    {\r\n        name: \"Products\",\r\n        label: \"Products\",\r\n        subMenu: [\r\n            {\r\n                name: \"All Products\",\r\n                label: \"All Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.ALL_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Electrical Products\",\r\n                label: \"Electrical Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.ELECTRICAL_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Toy Products\",\r\n                label: \"Toy Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.TOY_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Clothes Products\",\r\n                label: \"Clothes Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.CLOTHES_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Automobile Products\",\r\n                label: \"Automobile Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.AUTOMOBILE_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Groceries Products\",\r\n                label: \"Groceries Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.GROCERIES_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Pets Products\",\r\n                label: \"Pets Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.PETS_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Sports Products\",\r\n                label: \"Sports Products\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.SPORTS_PRODUCTS}`\r\n            },\r\n            {\r\n                name: \"Accessories\",\r\n                label: \"Accessories\",\r\n                path: `/products/${NAVBAR_TAB_KEYS.ACCESSORIES_PRODUCTS}`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: \"New\",\r\n        label: \"New\",\r\n        path: `/products/${NAVBAR_TAB_KEYS.NEW_PRODUCTS}`\r\n    },\r\n    {\r\n        name: \"Old\",\r\n        label: \"Old\",\r\n        path: `/products/${NAVBAR_TAB_KEYS.OLD_PRODUCTS}`\r\n    },\r\n    {\r\n        name: \"Sell Your Products\",\r\n        label: \"Sell Your Products\",\r\n        path: SELL_YOUR_PRODUCTS\r\n    },\r\n    // {\r\n    //     name: \"Contact\",\r\n    //     label: \"Contact\",\r\n    //     path: \"/contact\"\r\n    // }\r\n]\r\n\r\nexport const UserProfileItems = [\r\n    {\r\n        name: \"User\",\r\n        label: \"User\",\r\n    }\r\n]\r\n\r\n","E:\\FYP\\geo-ecommerce\\src\\enums\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\history.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\buy_sell_info.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\store.js",["367","368"],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { reducer as UserReducer } from './user/userReducer';\r\nimport { reducer as AddSellerProductsReducer, sellerAllProductsReducer as SellerAllProductsReducer } from './seller_products/sellerProductsReducer';\r\nimport { reducer as AllProductsReducer } from './products/productsReducer';\r\nimport { reducer as AdminCustomerDetailsReducer } from './admin/adminReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { Select } from 'antd';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: [\r\n    // 'user',\r\n    \"addSellerProducts\",\r\n    \"adminCustomerDetails\"\r\n  ],\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  user: UserReducer,\r\n  addSellerProducts: AddSellerProductsReducer,\r\n  sellerAllProducts: SellerAllProductsReducer,\r\n  allProducts: AllProductsReducer,\r\n  adminCustomerDetails: AdminCustomerDetailsReducer,\r\n});\r\n\r\n//Persist Store to LocalStorage\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\n\r\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default () => {\r\n  let persistor = persistStore(store)\r\n  return { store, persistor }\r\n}\r\n","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userReducer.js",["369","370","371","372"],"import reduceReducers from 'reduce-reducers';\r\n\r\nimport {\r\n    USER_REGISTER,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_ERROR,\r\n    USER_REGISTER_RESET,\r\n    USER_LOGIN,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_ERROR,\r\n    USER_LOGOUT,\r\n    USER_LOGOUT_SUCCESS,\r\n    FETCH_USER,\r\n    FETCH_USER_SUCCESS,\r\n    FETCH_USER_ERROR,\r\n    USER_ERROR_RESET,\r\n    UPDATE_USER_RATING\r\n} from './userTypes';\r\n\r\nconst initialState = {\r\n    //Register User\r\n    registeringUser: false,\r\n    registrationSuccess: null,\r\n    registrationError: null,\r\n\r\n    //Logging State\r\n    loggingIn: false,\r\n    loggingError: null,\r\n\r\n    //Fetching User\r\n    gettingUser: false,\r\n    user: null,\r\n    gettingUserError: null\r\n}\r\n\r\nconst userRegisterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER:\r\n            return {\r\n                ...state,\r\n                registeringUser: true,\r\n                registrationSuccess: null,\r\n                registrationError: null\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            //User Response\r\n            const User = action?.payload;\r\n\r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                user: {\r\n                    user_id: User?.user_id,\r\n                    first_name: User?.first_name,\r\n                    last_name: User?.last_name,\r\n                    email: User?.email,\r\n                    application_rating: User?.application_rating,\r\n                    latitude: User?.address?.latitude,\r\n                    longitude: User?.address?.longitude,\r\n                },\r\n                registrationError: null\r\n            }\r\n        case USER_REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                registrationSuccess: null,\r\n                registrationError: action?.payload\r\n            }\r\n        case USER_REGISTER_RESET:\r\n            return {\r\n                ...state,\r\n                registeringUser: false,\r\n                registrationSuccess: null,\r\n                registrationError: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userLoginReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            return {\r\n                ...state,\r\n                loggingIn: true,\r\n                loggingError: null\r\n            }\r\n        case USER_LOGIN_SUCCESS:\r\n            const User = action?.payload;\r\n\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: {\r\n                    user_id: User.user_id,\r\n                    first_name: User.first_name,\r\n                    last_name: User.last_name,\r\n                    email: User.email,\r\n                    application_rating: User.application_rating,\r\n                    total_expenditure: User.total_expenditure,\r\n                    latitude: User.address?.latitude,\r\n                    longitude: User.address?.longitude,\r\n                    order_details: User.order_details ? User.order_details : null,\r\n                    message_rooms: User.message_rooms ? User.message_rooms : null,\r\n                },\r\n                loggingError: null\r\n            }\r\n        case USER_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: null,\r\n                loggingError: action?.payload\r\n            }\r\n        case UPDATE_USER_RATING:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    application_rating: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userLogoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                user: null,\r\n                loggingError: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst userErrorReset = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_ERROR_RESET:\r\n            return {\r\n                ...state,\r\n                loggingError: null,\r\n                registrationError: null\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const reducer = reduceReducers(userRegisterReducer, userLoginReducer, userLogoutReducer, userErrorReset);","E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\user\\userActions.js",["373","374","375","376","377"],"E:\\FYP\\geo-ecommerce\\src\\services\\auth.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\storage.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\how_saman_works_info.js",["378","379"],"import React from 'react';\r\nimport { Row, Col, Image } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Fragment } from 'react';\r\nimport { HowSamanWorksMainDiv } from '../style';\r\nimport WhySamanBuyImage from '../../../assests/images/why_saman_buy.png';\r\nimport WhySamanSellImage from '../../../assests/images/why_saman_sell.png';\r\n\r\nconst HowSamanWorksDiv = () => {\r\n    return (\r\n        <HowSamanWorksMainDiv>\r\n            <Row justify=\"center\">\r\n                <Col>\r\n                    <h2 className=\"how-it-works-title\">Why Saman.com?</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col\r\n                    // md={7}\r\n                    // lg={7}\r\n                    // xs={24}\r\n                    style={{\r\n                        textAlign: \"center\"\r\n                    }}\r\n                >\r\n                    <h1 className=\"how-it-works-info\">Saman.com Provides a New Way<br />To Make Trades Faster Anywhere, Anytime.</h1>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row justify=\"center\" style={{\r\n                textAlign: 'center',\r\n                alignItems: \"baseline\"\r\n            }}\r\n\r\n            >\r\n                <Col\r\n                    md={4}\r\n\r\n                >\r\n                    <div>\r\n                        <Image\r\n                            src={WhySamanBuyImage}\r\n                            preview={false}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-headers\">Buy from your closest seller.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-contents\">Saman recommends you products from the sellers that are nearest to you for your faster delivery .</p>\r\n                    </div>\r\n                </Col>\r\n                <Col\r\n                    md={4}\r\n                    offset={2}\r\n                >\r\n                    <div>\r\n                        <Image\r\n                            src={WhySamanSellImage}\r\n                            width={100}\r\n                            preview={false}\r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-headers\">Sell any product for free.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-contents\">Saman allows its users to sell any type of products from anywhere for free in just few clicks.</p>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col\r\n                    md={4}\r\n                    offset={2}\r\n                >\r\n                    <div>\r\n                        <Image\r\n                            src={WhySamanBuyImage}\r\n                            preview={false}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n\r\n                        <p className=\"how-it-works-info-headers\">Talk with your seller.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"how-it-works-info-contents\">Saman provides features that allows the users to talk to the sellers about the product details.</p>\r\n                    </div>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n        </HowSamanWorksMainDiv>\r\n    )\r\n}\r\n\r\nexport default HowSamanWorksDiv;","E:\\FYP\\geo-ecommerce\\src\\routes.js",[],"E:\\FYP\\geo-ecommerce\\src\\layout\\blank_layout.js",[],"E:\\FYP\\geo-ecommerce\\src\\layout\\conditional_layout.js",["380"],"import Layout, { Content, Header } from \"antd/lib/layout/layout\";\r\nimport Navbar from \"../components/nav_bar\";\r\n\r\nconst ConditionalLayout=({displaySearchBar,children})=>{        \r\n    return(\r\n        <Layout\r\n            style={{\r\n                backgroundColor:\"#fff\"\r\n            }}\r\n        >\r\n            <Content>\r\n            <Navbar displaySearchBar={displaySearchBar}/>\r\n                {children}\r\n            </Content>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default ConditionalLayout;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\index.js",["381","382"],"import { useState, useEffect } from 'react';\r\nimport { CustomTab, CustomTabPane } from './style';\r\nimport SellProductsTab from './components/sell_products_tab';\r\nimport SellerStoreTab from './components/your_store_tab';\r\nimport SellerOrderTab from './components/orders_tab';\r\nimport SoldProductsTab from './components/sold_products_tab';\r\nimport { getAllSellerProducts, getAllOrderDetails } from '../../redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { notification } from 'antd';\r\n\r\n\r\nconst SellYourProductsPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector(state => state.user.user?.user_id);\r\n    const addingSellerProductsSuccess = useSelector(state => state.addSellerProducts?.addingSellerProductsSuccess);\r\n    const gettingAllOrderDetailsError = useSelector(state => state?.sellerAllProducts?.gettingAllOrderDetailsError);\r\n\r\n    //Get Seller All Product Details\r\n    useEffect(() => {\r\n        dispatch(getAllSellerProducts(userId));\r\n        dispatch(getAllOrderDetails(userId));\r\n    }, [addingSellerProductsSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (gettingAllOrderDetailsError) {\r\n            notification.error({\r\n                message: gettingAllOrderDetailsError,\r\n                duration: 3\r\n            })\r\n        }\r\n\r\n    }, [gettingAllOrderDetailsError])\r\n\r\n    return (\r\n        <CustomTab defaultActiveKey=\"1\" >\r\n            <CustomTabPane tab=\"Sell Products\" key=\"1\">\r\n                <SellProductsTab />\r\n            </CustomTabPane>\r\n            <CustomTabPane tab=\"Your Store\" key=\"2\">\r\n                <SellerStoreTab />\r\n            </CustomTabPane>\r\n            <CustomTabPane tab=\"Sold Products\" key=\"3\">\r\n                <SoldProductsTab />\r\n            </CustomTabPane>\r\n            <CustomTabPane tab=\"Orders\" key=\"4\">\r\n                <SellerOrderTab />\r\n            </CustomTabPane>\r\n        </CustomTab>\r\n    )\r\n}\r\n\r\nexport default SellYourProductsPage;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\index.js",["383","384"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Row, Col, Select, Input, Button, message, notification } from 'antd';\r\nimport { DollarOutlined } from '@ant-design/icons';\r\nimport ProductDetailTable from './productDetailTable';\r\nimport UploadProductImages from './uploadImageComponent';\r\nimport { SELL_YOUR_PRODUCTS_PRODUCT_TYPES } from '../../../../enums';\r\nimport { addSellerProducts, onAddSellerProductsReset } from '../../../../redux';\r\n\r\n//Import Styles\r\nimport {\r\n    SellProductsMainDiv\r\n} from './style';\r\n\r\nconst SellProductsTab = () => {\r\n\r\n    //States\r\n    const [totalImages, setTotalImages] = useState([]);\r\n    const [productDetails, setProductDetails] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_id = useSelector(state => state.user.user?.user_id);\r\n    const addingProduct = useSelector(state => state.addSellerProducts?.addingSellerProducts);\r\n    const addingSellerProductsSuccess = useSelector(state => state.addSellerProducts?.addingSellerProductsSuccess);\r\n    const addingSellerProductsError = useSelector(state => state.addSellerProducts?.addingSellerProductsError);\r\n\r\n    useEffect(() => {\r\n        dispatch(onAddSellerProductsReset());\r\n    });\r\n\r\n    /* Notifications Use Effect*/\r\n    useEffect(() => {\r\n\r\n        addingSellerProductsSuccess && (\r\n            notification.success({\r\n                message: addingSellerProductsSuccess,\r\n                duration: 3\r\n            })\r\n        )\r\n\r\n\r\n\r\n        addingSellerProductsError && (\r\n            notification.error({\r\n                message: addingSellerProductsError,\r\n                duration: 3\r\n            })\r\n        )\r\n\r\n    }, [addingSellerProductsSuccess, addingSellerProductsError])\r\n\r\n    const [form] = Form.useForm();\r\n    //Form Finish\r\n    const onFinish = (values) => {\r\n        totalImages.length === 0 && message.error(\"Atleast one image is required.\");\r\n        productDetails.length === 0 && message.error(\"Atleast one product detail is required.\");\r\n\r\n        if (totalImages.length != 0 && productDetails.length != 0) {\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"user_id\", user_id);\r\n            formData.append(\"productName\", values.productName);\r\n            formData.append(\"usedProduct\", values.usedProduct);\r\n            formData.append(\"productType\", values.productType);\r\n            formData.append(\"productSubType\", values.productSubType);\r\n            formData.append(\"quantity\", values.quantity);\r\n            formData.append(\"price\", values.price);\r\n            formData.append(\"productDetails\", JSON.stringify(productDetails));\r\n            totalImages.forEach(image => {\r\n                formData.append(\"imagesList\", image);\r\n            });\r\n            dispatch(addSellerProducts(formData));\r\n            //Clearing Fields and Arrays\r\n            form.resetFields()\r\n            setTotalImages([])\r\n            setProductDetails([])\r\n        }\r\n    }\r\n\r\n    const onFinishFailed = ({ errorFields }) => {\r\n        if (errorFields) {\r\n            message.error(\"All required fields must be filled.\");\r\n        }\r\n    }\r\n\r\n    const initialValues = {\r\n        usedProduct: \"no\"\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SellProductsMainDiv>\r\n                <Form\r\n                    form={form}\r\n                    id=\"sellProductsForm\"\r\n                    labelCol={{\r\n                        md: { span: 12 },\r\n                        xs: { span: 12}\r\n                    }}\r\n                    wrapperCol={{\r\n                        md: { span: 14 },\r\n                        xs: { span: 14 }\r\n                    }}\r\n                    name=\"sellProductsForm\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    initialValues={initialValues}\r\n                >\r\n\r\n                    <h1>Product Informations</h1>\r\n\r\n\r\n                    <Row>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Product Name\"\r\n                                name=\"productName\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Input placeholder=\"Enter Product Name\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Used Product\"\r\n                                name=\"usedProduct\"\r\n                            >\r\n                                <Select>\r\n                                    <Select.Option value=\"yes\">Yes</Select.Option>\r\n                                    <Select.Option value=\"no\">No</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Product Type\"\r\n                                name=\"productType\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Select required>\r\n                                    {SELL_YOUR_PRODUCTS_PRODUCT_TYPES.map((data, i) => (\r\n                                        <Select.Option key={i} value={data.value}>{data.name}</Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Product Sub Type\"\r\n                                name=\"productSubType\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Select\r\n                                    showSearch\r\n                                >\r\n                                    {SELL_YOUR_PRODUCTS_PRODUCT_TYPES.map((type, i) => (\r\n                                        <Select.OptGroup label={type.name} key={i}>\r\n                                            {type.subGroup.map((subType, j) => {\r\n                                                return <Select.Option key={subType.value} value={subType.value}>{subType.name}</Select.Option>\r\n                                            })}\r\n                                        </Select.OptGroup>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Quantity\"\r\n                                name=\"quantity\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"Products Available\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col\r\n                            md={12}\r\n                            xs={24}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Price\"\r\n                                name=\"price\"\r\n                                rules={[{ required: true }]}\r\n                            >\r\n                                <Input placeholder=\"Product Price\" type=\"number\" prefix={<DollarOutlined style={{ fontSize: \"1rem\", paddingRight: \"5px\" }} />} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <ProductDetailTable productDetails={productDetails} setProductDetails={setProductDetails} />\r\n                    <h1 style={{ margin: \"30px 0px\" }}>Upload Product Images</h1>\r\n                    {/* <Form.Item> */}\r\n                    <UploadProductImages totalImages={totalImages} setTotalImages={setTotalImages} />\r\n                    {/* </Form.Item> */}\r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            span: 24\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{\r\n                                float: \"right\",\r\n                                marginTop: \"40px\"\r\n                            }}\r\n                            className=\"form-submit\"\r\n                            loading={addingProduct}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n            </SellProductsMainDiv>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SellProductsTab;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\productDetailTable.js",["385","386","387","388"],"import { useRef } from 'react';\r\nimport { Table, Button, Row, Col, Input,Form } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst ProductDetailTable = ({ productDetails, setProductDetails }) => {\r\n\r\n    const detailInputRef = useRef(\"\");\r\n\r\n    const handleAddDetail = () => {\r\n        const inputValue = detailInputRef.current.state.value;\r\n        if (!inputValue || inputValue.trim() == \"\") {\r\n            detailInputRef.current.input.style.border = \"1px solid red\";\r\n        } else {\r\n            setProductDetails((prevState) => [...prevState, {\r\n                productDetail: inputValue,\r\n                uid: uuid()\r\n            }]);\r\n            //Clear Input Field            \r\n            detailInputRef.current.state.value=\"\";\r\n        }\r\n    }\r\n\r\n    //Detail Table Columns\r\n    const productDetailColumns = [\r\n        {\r\n            title: \"Details\",\r\n            dataIndex: \"details\",\r\n            key: \"details\",\r\n\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"action\",\r\n            key: \"action\",\r\n            width: \"20%\",\r\n            align: \"center\",\r\n            render: (text, record, index) => (\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<DeleteOutlined />}\r\n                    onClick={() => {\r\n\r\n                        // Remove Details                        \r\n                        let removedDetailsArr = productDetails.filter(data => data.uid != record.uid);\r\n                        setProductDetails(removedDetailsArr);\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n\r\n    ];\r\n\r\n    const productDetailTableData = productDetails.map((data, i) => ({\r\n        key: i,\r\n        details: data.productDetail,\r\n        uid: data.uid\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{ margin: \"30px 0px\" }}>Add Product Details</h1>\r\n            <Row style={{ margin: \"30px 0px\" }}>\r\n\r\n                <Col\r\n                    md={{ span: 18, offset: 2 }}\r\n                    xs={24}\r\n                >                    \r\n                        <Input\r\n                            ref={detailInputRef}\r\n                            onChange={() => {\r\n                                detailInputRef.current.input.style.border = \"1px solid #d9d9d9\";\r\n                            }}\r\n                        />\r\n                </Col>\r\n                <Col\r\n                    md={4}\r\n                    xs={24}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={handleAddDetail}\r\n                    >Add Detail</Button>\r\n                </Col>\r\n            </Row>\r\n            <Table\r\n                columns={productDetailColumns}\r\n                bordered={true}\r\n                dataSource={productDetailTableData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductDetailTable;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sell_products_tab\\uploadImageComponent.js",["389","390","391"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Upload, message, Button } from 'antd';\r\nimport { InboxOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst UploadProductImages = ({totalImages, setTotalImages}) => {\r\n    \r\n    const [imageAcceptedBool, setImageAcceptedBool] = useState(false);    \r\n\r\n    //Hide Image Table If No Images\r\n    useEffect(() => {\r\n        //Checking Total Image Array Length \r\n        if (totalImages.length == 0) {\r\n            setImageAcceptedBool(false);\r\n        }\r\n    }, [totalImages]);\r\n\r\n    //Antd uploader        \r\n    const { Dragger } = Upload;\r\n\r\n    //Upload Dragger Props\r\n    const draggerProps = {\r\n        name: \"imageUploader\",\r\n        multiple: true,\r\n        // accept: \".png,.jpg,.jpeg\",\r\n        showUploadList: false,\r\n        customRequest: ({file, onSuccess }) => {\r\n            onSuccess('ok');\r\n        },\r\n        beforeUpload: fileInfo => {\r\n            if (fileInfo.type.split(\"/\")[0] === \"image\") {\r\n                return true;\r\n            } else {\r\n                message.error(\"Uploaded file must be image.\");\r\n                return false;\r\n            }\r\n        },\r\n        onChange(fileInfo) {\r\n            let filteredImage = [];\r\n            if (fileInfo.file.status == \"done\") {                \r\n                fileInfo.fileList.forEach(file => {\r\n                    let fileType = file.type.split(\"/\")[0];\r\n                    if (fileType === \"image\") {                        \r\n                        file.originFileObj.fileName=file.originFileObj.name;\r\n                        filteredImage.push(file.originFileObj);\r\n                    }\r\n                });\r\n                setTotalImages(filteredImage);\r\n                setImageAcceptedBool(true);                \r\n\r\n            }\r\n        },\r\n        style: {\r\n            minHeight: \"200px\",\r\n            alignItems: \"center\",\r\n            display: \"flex\"\r\n        }\r\n    };\r\n\r\n    //Images Table Columns\r\n    const imageTableColumns = [\r\n        {\r\n            title: \"Image Name\",\r\n            dataIndex: \"imageName\",\r\n            key: \"imageName\",\r\n\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"action\",\r\n            key: \"action\",\r\n            width: \"20%\",\r\n            align: \"center\",\r\n            render: (text, record, index) => (\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<DeleteOutlined />}\r\n                    onClick={() => {\r\n                        //Remove Image\r\n                        let removedImageArr = totalImages.filter(data => data.uid != record.uid);\r\n                        setTotalImages([...removedImageArr]);\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ];\r\n\r\n    \r\n    const imageTableData = totalImages.map((imageObj, i) => ({\r\n        key: i,\r\n        imageName: imageObj.name,\r\n        uid: imageObj.uid\r\n    }));\r\n\r\n    return (\r\n        <div>\r\n            <Dragger\r\n                {...draggerProps}\r\n                fileList={totalImages} //Resetting Antd Upload File List \r\n            >\r\n                <InboxOutlined style={{ fontSize: \"2rem\" }} />\r\n                <p className=\"ant-upload-text\">Click or drag images to upload.</p>\r\n            </Dragger>\r\n            {\r\n                imageAcceptedBool ?\r\n                    <div>\r\n                        <Table\r\n                            columns={imageTableColumns}\r\n                            bordered={true}\r\n                            dataSource={imageTableData}\r\n                            style={{ padding: \"10px 0px\" }}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default UploadProductImages;","E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsActions.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\seller_products\\sellerProductsReducer.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\your_store_tab\\index.js",["392","393"],"import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Table, Alert, Button, Image, Modal, Input, message, notification } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { deleteSellerProduct, onDeleteSellerProductReset, updateSellerProduct, onUpdateSellerProductReset, getAllSellerProducts } from '../../../../redux';\r\nimport $ from 'jquery';\r\n\r\nconst SellerStoreTab = () => {\r\n\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n    const [deleteModalInput, setDeleteModalInput] = useState(\"\");\r\n    const [productIdToDelete, setProductIdToDelete] = useState(null);\r\n    const [productNameToDelete, setProductNameToDelete] = useState(null);\r\n    const [productNameToUpdate, setProductNameToUpdate] = useState(null);\r\n    const [productIdToUpdate, setProductIdToUpdate] = useState(null);\r\n    const [productQuantityToUpdate, setProductQuantityToUpdate] = useState(null);\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.user?.user);\r\n    const gettingSellerAllProducts = useSelector(state => state.sellerAllProducts?.gettingAllSellerProducts);\r\n    const gettingAllSellerProductsError = useSelector(state => state.sellerAllProducts?.gettingAllSellerProductsError);\r\n    const allSellerProducts = useSelector(state => state.sellerAllProducts?.allSellerProducts);\r\n    const deletingSellerProductSuccess = useSelector(state => state.addSellerProducts?.deletingSellerProductSuccess);\r\n    const deletingSellerProductError = useSelector(state => state.addSellerProducts?.deletingSellerProductError);\r\n    const updatingSellerProductSuccess = useSelector(state => state.addSellerProducts?.updatingSellerProductSuccess);\r\n    const updatingSellerProductError = useSelector(state => state.addSellerProducts?.updatingSellerProductError);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(onDeleteSellerProductReset());\r\n        dispatch(onUpdateSellerProductReset());\r\n    })\r\n\r\n    //Table Data\r\n    useEffect(() => {\r\n        setProducts(allSellerProducts?.seller_products_details);\r\n    }, [allSellerProducts]);\r\n\r\n\r\n    useEffect(() => {\r\n        const userId = user?.user_id;\r\n        dispatch(getAllSellerProducts(userId));\r\n    }, [updatingSellerProductSuccess])\r\n\r\n    //Notifications Use Effects\r\n    useEffect(() => {\r\n        deletingSellerProductSuccess &&\r\n            (\r\n                notification.success({\r\n                    message: deletingSellerProductSuccess,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n        deletingSellerProductError &&\r\n            (\r\n                notification.error({\r\n                    message: deletingSellerProductError,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n\r\n        updatingSellerProductSuccess &&\r\n            (\r\n                notification.success({\r\n                    message: updatingSellerProductSuccess,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n\r\n        updatingSellerProductError &&\r\n            (\r\n                notification.error({\r\n                    message: updatingSellerProductError,\r\n                    duration: 3\r\n                })\r\n            )\r\n\r\n    }, [\r\n        deletingSellerProductSuccess,\r\n        deletingSellerProductError,\r\n        updatingSellerProductSuccess,\r\n        updatingSellerProductError\r\n    ]);\r\n\r\n\r\n    const openDeleteModal = (data) => {\r\n        setProductIdToDelete(data.productId);\r\n        setProductNameToDelete(data.productName);\r\n        setShowDeleteModal(true);\r\n    }\r\n\r\n    const deleteProduct = () => {\r\n        const user_id = allSellerProducts?.user_id;\r\n\r\n        const value = {\r\n            user_id: user_id,\r\n            product_id: productIdToDelete\r\n        }\r\n\r\n        if (deleteModalInput === \"DELETE\") {\r\n            dispatch(deleteSellerProduct(value));\r\n\r\n            let allSellerProductsFiltered = products?.filter(data => data.product_id !== value.product_id);\r\n\r\n            setProducts([...allSellerProductsFiltered]);\r\n            setProductIdToDelete(null);\r\n            setProductNameToDelete(null);\r\n            setDeleteModalInput(null);\r\n            setShowDeleteModal(false);\r\n        } else {\r\n            $(\"#modal-input\").css({\r\n                \"borderColor\": \"red\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const cancelDelete = () => {\r\n        setProductIdToDelete(null);\r\n        setProductNameToDelete(null);\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    const openUpdateModal = (data) => {\r\n        setProductIdToUpdate(data.productId);\r\n        setProductNameToUpdate(data.productName);\r\n        setProductQuantityToUpdate(data.productQuantity);\r\n        setShowUpdateModal(true);\r\n    }\r\n\r\n    const updateProduct = () => {\r\n        const user_id = allSellerProducts?.user_id;\r\n        const value = {\r\n            user_id: user_id,\r\n            product_id: productIdToUpdate,\r\n            product_quantity: productQuantityToUpdate\r\n        }\r\n        dispatch(updateSellerProduct(value));\r\n        setShowUpdateModal(false);\r\n    }\r\n\r\n    const cancelUpdate = () => {\r\n        setProductIdToUpdate(null);\r\n        setProductNameToUpdate(null);\r\n        setProductQuantityToUpdate(null);\r\n        setShowUpdateModal(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: \"productName\",\r\n            key: \"productName\",\r\n        },\r\n        {\r\n            title: 'Product Quantity',\r\n            dataIndex: \"productQuantity\",\r\n            key: \"productQuantity\",\r\n            render: (text, record, index) => {\r\n                return (\r\n                    <Input value={record.productQuantity}\r\n                        onClick={() => { openUpdateModal(record) }}\r\n                    ></Input>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Product Type',\r\n            dataIndex: \"productType\",\r\n            key: \"productType\",\r\n\r\n        },\r\n        {\r\n            title: 'Product Sub Type',\r\n            dataIndex: \"productSubType\",\r\n            key: \"productSubType\",\r\n\r\n        },\r\n        {\r\n            title: 'Images',\r\n            dataIndex: 'images',\r\n            key: \"images\",\r\n            responsive: ['md'],\r\n            width: 200,\r\n            ellipsis: {\r\n                showTitle: true,\r\n            },\r\n            render: (text, record, index) => {\r\n                return (\r\n                    <>\r\n                        <Image.PreviewGroup\r\n                            style={{\r\n                                width: \"400\"\r\n                            }}\r\n                        >\r\n                            {record?.productImages?.map((data, i) => (\r\n                                <Image\r\n                                    style={{\r\n                                        padding: \"5px\"\r\n                                    }}\r\n                                    key={i}\r\n                                    width={100}\r\n                                    src={require(`../../../../assests/images/product_images/${data?.image ? data?.image : \"\"}`).default || \"\"}\r\n                                />\r\n                            ))}\r\n                        </Image.PreviewGroup>\r\n                    </>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"action\",\r\n            key: \"action\",\r\n            align: \"center\",\r\n            render: (text, record, index) =>\r\n            (\r\n                <Button\r\n                    type=\"danger\"\r\n                    icon={<DeleteOutlined />}\r\n                    onClick={() => {\r\n                        openDeleteModal(record);\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ];\r\n\r\n    const tableData = products?.map((data, index) => ({\r\n        key: index,\r\n        productName: data?.product_name,\r\n        productQuantity: data?.product_quantity,\r\n        productType: data?.product_type,\r\n        productSubType: data?.product_sub_type,\r\n        productId: data?.product_id,\r\n        productImages: data?.product_images\r\n    }));\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: \"white\"\r\n            }}\r\n        >\r\n            {/* Alerts */}\r\n            {gettingAllSellerProductsError &&\r\n                (\r\n                    window.scrollTo(0, 0),\r\n                    <Alert type=\"error\" message={gettingAllSellerProductsError} banner closable />\r\n                )\r\n            }\r\n\r\n            <Table\r\n                columns={columns}\r\n                loading={gettingSellerAllProducts}\r\n                dataSource={tableData}\r\n                bordered\r\n                style={{\r\n                    overflow: \"auto\"\r\n                }}\r\n            />\r\n\r\n            <Modal\r\n                title={`Delete Product ${productNameToDelete}`}\r\n                visible={showDeleteModal}\r\n                onOk={deleteProduct}\r\n                onCancel={cancelDelete}\r\n                maskClosable={false}\r\n            >\r\n                <p>DELETING THE PRODUCT WILL DELETE ALL ITS IMAGES AND DETAILS.</p>\r\n                <p>TYPE \"DELETE\" AND CLICK OK BELOW TO DELETE.</p>\r\n                <Input\r\n                    id=\"modal-input\"\r\n                    value={deleteModalInput}\r\n                    onChange={(e) => {\r\n                        $(\"#modal-input\").css({\r\n                            \"borderColor\": \"black\"\r\n                        });\r\n                        setDeleteModalInput(e.target.value);\r\n                    }}\r\n                >\r\n                </Input>\r\n            </Modal>\r\n            <Modal\r\n                title={`Upload Product ${productNameToUpdate}`}\r\n                visible={showUpdateModal}\r\n                onOk={updateProduct}\r\n                onCancel={cancelUpdate}\r\n                maskClosable={false}\r\n            >\r\n                <p>Product Quantity</p>\r\n                <Input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    value={productQuantityToUpdate}\r\n                    onChange={(e) => {\r\n                        setProductQuantityToUpdate(e.target.value);\r\n                    }}\r\n                >\r\n                </Input>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SellerStoreTab;","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\index.js",["394","395","396","397","398","399","400","401"],"E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\main_layout.js",["402","403","404"],"import { useSelector } from 'react-redux';\r\nimport { Image } from 'antd';\r\nimport { ExpandAltOutlined, ExpandOutlined } from '@ant-design/icons';\r\nimport { PageLayout, MainDiv, ListDiv, CardDiv, ListItemDiv } from './style';\r\nimport $ from 'jquery';\r\nimport { useEffect, useState } from 'react';\r\nimport ProductModal from './product_modal';\r\n\r\n\r\nconst MainProductsLayout = ({ allProducts, productHeader }) => {\r\n\r\n    const [searchInputText, setSearchInputText] = useState(\"\");\r\n    const [products, setProducts] = useState([]);\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n    //Set Selected Product States\r\n    const [selectedProduct, setSelectedProduct] = useState();\r\n    const [openProductModalBool, setOpenProductModalBool] = useState(false);\r\n\r\n    const gettingAllProducts = useSelector(state => state.allProducts?.allSellerProducts);\r\n\r\n    useEffect(() => {\r\n        setProducts(allProducts);\r\n        setFilteredProducts(allProducts);\r\n    }, [allProducts]);\r\n\r\n    useEffect(() => {\r\n        let filteredSearchProducts;\r\n        //Filter based on all types\r\n        filteredSearchProducts = products?.filter(product => {\r\n            if (product.product_name.toLowerCase().includes(searchInputText) ||\r\n                product.product_type.toLowerCase().includes(searchInputText) ||\r\n                product.product_sub_type.toLowerCase().includes(searchInputText) ||\r\n                product.product_price.toString().toLowerCase().includes(searchInputText)\r\n            ) {\r\n                return product;\r\n            }\r\n        });\r\n\r\n        //Filter in Order of Product Distance\r\n        filteredSearchProducts.sort((a, b) => {\r\n            return parseFloat(a?.product_distance) - parseFloat(b?.product_distance);\r\n        });\r\n\r\n        setFilteredProducts(filteredSearchProducts);\r\n\r\n    }, [searchInputText])\r\n\r\n    const displaySearchInput = () => {\r\n        $(\"#searchIconDiv\").hide();\r\n        $(\"#searchInput\").show();\r\n        $(\"#searchInput\").focus();\r\n    };\r\n\r\n    const hideSearchInput = () => {\r\n        $(\"#searchIconDiv\").show();\r\n        $(\"#searchInput\").hide();\r\n    };\r\n\r\n    const handleSearchInputChange = (event) => {\r\n        let searchValue = $(\"#searchInput\").val().toLowerCase();\r\n        setSearchInputText(searchValue);\r\n    }\r\n\r\n    $(\"#searchInput\").on(\"input\", () => {\r\n        handleSearchInputChange();\r\n    });\r\n\r\n    //JQUERIES\r\n    $(\"#searchIconDiv\").on(\"click\", () => {\r\n        displaySearchInput();\r\n    });\r\n\r\n    $(\"#searchInput\").on(\"focusout\", () => {\r\n        hideSearchInput();\r\n    });\r\n\r\n\r\n    //Set Selected Products\r\n    const productOnClickHandler = (selectedItem) => {\r\n        setOpenProductModalBool(true);\r\n        setSelectedProduct(selectedItem)\r\n    }\r\n\r\n    return (\r\n        <PageLayout>\r\n            <MainDiv>\r\n                <h1>{productHeader}</h1>\r\n                <ListDiv\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 2,\r\n                        lg: 4,\r\n                        xl: 2,\r\n                        xxl: 3,\r\n                    }}\r\n                    loading={gettingAllProducts}\r\n                    dataSource={filteredProducts}\r\n                    pagination={{\r\n                        pageSize: 10,\r\n                    }}\r\n                    renderItem={(item, i) => {\r\n                        console.log(item);\r\n                        return (\r\n                            <ListItemDiv>\r\n                                <CardDiv\r\n                                    hoverable={true}\r\n                                    extra={<ExpandAltOutlined className=\"expandable-icon\" onClick={() => productOnClickHandler(item)} />}\r\n                                    cover={<Image\r\n                                        key={i}\r\n                                        preview={false}\r\n                                        src={require(`../../../assests/images/product_images/${item?.product_images ? item?.product_images[0][\"image\"] : \"\"}`).default}\r\n                                        alt={item?.product_name}\r\n                                    />}\r\n                                >\r\n                                    <div className=\"card-contents\">\r\n                                        <div>\r\n                                            <h2>{item?.product_name} <span style={{color:\"black\",fontWeight:\"200\",fontSize:\"0.8rem\"}}>({item?.is_used_product ? \"Used\" : \"New\"})</span></h2>\r\n                                        </div>\r\n                                        <div>\r\n                                            <p className=\"product-delivery-time\">Estimated Delivery Time: {item?.time_for_delivery_in_hours}</p>\r\n\r\n                                        </div>\r\n                                        <div>\r\n                                            <p className=\"product-price\">$ {item?.product_price}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </CardDiv>\r\n                            </ListItemDiv>\r\n                        )\r\n                    }}\r\n                />\r\n                <ProductModal\r\n                    openProductModalBool={openProductModalBool}\r\n                    setOpenProductModalBool={setOpenProductModalBool}\r\n                    selectedProduct={selectedProduct}\r\n                    setSelectedProduct={setSelectedProduct}\r\n                />\r\n\r\n            </MainDiv>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nexport default MainProductsLayout;","E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsReducer.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\products\\productsActions.js",[],"E:\\FYP\\geo-ecommerce\\src\\utils\\product_type.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\products_views\\components\\product_modal.js",["405","406","407"],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\login\\index.js",["408","409","410"],"import React, { useState, useEffect} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Layout, Row, Col, Form, Input, Checkbox, Button, Divider, Image, Alert } from 'antd';\r\nimport { Content, Footer, Header } from 'antd/lib/layout/layout';\r\nimport { CustomizedButton} from '../../../components/login_sign_up_components';\r\nimport { LeftOutlined, EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\nimport logo from '../../../assests/images/logo.png'\r\nimport { getAdminToken } from '../../../utils/storage';\r\n\r\n// import history  from '../../utils/history';\r\n\r\n\r\nconst LoginAdminPage = () => {\r\n\r\n    const history = useHistory();\r\n    const [loggingErrorMsg, setLogginErrorMsg]=useState(null);\r\n\r\n    \r\n    \r\n    const onFinish = (values) => {\r\n        let {username,password}=values;\r\n        if(username===\"admin\" && password===\"admin\"){\r\n            sessionStorage.setItem(\"admin\",username);\r\n            history.push(\"/admin/customers\");\r\n        }else{\r\n            setLogginErrorMsg(\"Incorrect Password!\");\r\n        }\r\n    }\r\n\r\n    // Redirect to Landing if already Logged In    \r\n    useEffect(() => {\r\n        if (getAdminToken()) {\r\n            history.push(\"/admin/customers\");\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout >\r\n                <Header style={{ background: \"#fff\" }}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <CustomizedButton onClick={() => history.push(\"/\")}><LeftOutlined />Back</CustomizedButton>\r\n                        </Col>                        \r\n                    </Row>\r\n                </Header>\r\n                <Content >\r\n                    <Row justify=\"center\" align=\"middle\" className=\"main-content\" style={{ flexDirection: \"column\", minHeight: \"90vh\" }}>\r\n                        <Row>\r\n                            <Image\r\n                                width={100}\r\n                                src={logo}\r\n                            >\r\n                            </Image>\r\n                        </Row>\r\n                        <Row>\r\n                            <h2>Log into Admin Panel</h2>\r\n                        </Row>\r\n                        {loggingErrorMsg && (\r\n                            <Alert\r\n                                type=\"error\"\r\n                                message={loggingErrorMsg}\r\n                                closable\r\n                            />\r\n                        )}\r\n                        <Row justify=\"center\" style={{ width: \"100vw\", paddingTop: \"1rem\" }}>\r\n                            <Col md={{span:8}}>\r\n                                <Form\r\n                                    labelCol={{ span: 8 }}\r\n                                    wrapperCol={{ span: 10 }}\r\n                                    name=\"loginForm\"\r\n                                    onFinish={onFinish}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[{ required: true, message: \"Please Enter Username!\" }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: \"Please Enter Password!\" }]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            iconRender={visible => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)}\r\n                                        >\r\n                                        </Input.Password>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        style={{ textAlign: \"center\", justifyContent:\"center\" }}\r\n                                        // wrapperCol={{\r\n                                        //     xs: { offset: 0, span: 16 },\r\n                                        //     md: { offset: 2, span: 16 },\r\n                                        // }}\r\n                                        name=\"logIn\"\r\n                                    >\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{ width: \"50%\" }}                                            \r\n                                        >Log In</Button>\r\n                                    </Form.Item>                                    \r\n                                </Form>\r\n                            </Col>                            \r\n                        </Row>\r\n\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copySaman.com\" }}></span>\r\n                </Footer>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default LoginAdminPage;","E:\\FYP\\geo-ecommerce\\src\\layout\\admin_layout.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\index.js",["411","412","413","414"],"import { Layout, Menu } from 'antd';\r\nimport { BrowserRouter as Router, Link, useHistory } from 'react-router-dom';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\nimport { NavBarDiv, NavBarMenu, NavBarMenuItem, LogoutButton } from './style';\r\nimport { NavbarItems } from './navbar_items';\r\nimport { removeAdminToken } from '../../utils/storage';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AdminNavBar = () => {\r\n    const history = useHistory();\r\n\r\n\r\n    const activeKey = history.location.pathname.split(\"/\")[2];\r\n\r\n\r\n    const logoutAdmin = () => {\r\n        removeAdminToken();\r\n        history.push(\"/admin/login\");\r\n    }\r\n\r\n    return (\r\n        <NavBarDiv>\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[activeKey]}>\r\n                {NavbarItems?.map(({ name, key, label, path, icon }, i) => (\r\n                    <NavBarMenuItem key={key} icon={icon}>\r\n                        <Link to={path}>\r\n                            {label}\r\n                        </Link>\r\n                    </ NavBarMenuItem>\r\n                ))}\r\n                <Menu.Item key=\"Logout\" icon={<LogoutOutlined />}>\r\n                    <LogoutButton\r\n                        onClick={() => { logoutAdmin() }}\r\n                    >\r\n                        Log Out\r\n                    </LogoutButton>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </NavBarDiv>\r\n    )\r\n}\r\n\r\nexport default AdminNavBar;","E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\navbar_items.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\admin_nav_bar\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\index.js",["415","416","417"],"E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminReducer.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminTypes.js",[],"E:\\FYP\\geo-ecommerce\\src\\redux\\admin\\adminActions.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\index.js",["418","419","420","421","422"],"E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\customer\\customer_products_details\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\rating_component.js",["423"],"import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { message, Modal, notification, Rate } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\nimport { getToken } from '../../utils/storage';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../config';\r\nimport { onUserRatingUpdate } from '../../redux';\r\n\r\nconst RatingComponent = () => {\r\n    const dispatch = useDispatch();\r\n    //States\r\n    const [displayRatingModalBool, setDisplayRatingModalBool] = useState(false);\r\n    const [userRating, setUserRating] = useState(null);\r\n\r\n    const User = useSelector(state => state.user?.user);\r\n\r\n    useEffect(() => {\r\n        setUserRating(User?.application_rating ? parseInt(User.application_rating) : null);\r\n        console.log(User?.application_rating);\r\n        console.log(userRating);\r\n    }, [User]);\r\n\r\n    const handleOnClick = () => {\r\n        if (!getToken()) {\r\n            message.info(\"You must login to rate!\");\r\n        } else {\r\n            setDisplayRatingModalBool(true);\r\n        }\r\n    }\r\n\r\n    const updateRating = () => {\r\n        axios.post(`${API_URL}/users/update-application-rating`, {\r\n            user_id: User?.user_id,\r\n            application_rating: userRating\r\n        }).then(res => {\r\n            notification.success({\r\n                message: res.data,\r\n                duration: 3\r\n            });\r\n            dispatch(onUserRatingUpdate(userRating));\r\n            setDisplayRatingModalBool(false);\r\n        }).catch(err => {\r\n            notification.error({\r\n                message: err.response.data.message,\r\n                duration: 3\r\n            });\r\n        })\r\n    }\r\n\r\n    const handleModalCancel = () => {\r\n        setUserRating(User?.application_rating ? parseInt(User.application_rating) : null);\r\n        setDisplayRatingModalBool(false);\r\n    }\r\n\r\n    const handleRateChange = (number) => {\r\n        setUserRating(number);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={handleOnClick}>\r\n                <div>\r\n                    <SmileOutlined style={{ cursor: \"pointer\", fontSize: \"2.5rem\" }} />\r\n                </div>\r\n                <div>\r\n                    Rating\r\n            </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Rate Application\"\r\n                visible={displayRatingModalBool}\r\n                onOk={updateRating}\r\n                onCancel={handleModalCancel}\r\n                maskClosable={false}\r\n                style={{\r\n                    textAlign: \"center\"\r\n                }}\r\n            >\r\n                <p>Rate the Application.</p>\r\n                <Rate value={userRating} onChange={handleRateChange} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RatingComponent;","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\index.js",["424","425"],"import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Rate, Progress } from 'antd';\r\nimport { getAllCustomerDetails } from '../../../redux';\r\nimport { RatingDiv } from './style';\r\nimport './style.css';\r\n\r\nconst AdminRatingsPage = () => {\r\n    const dispatch = useDispatch();\r\n    const [totalRating, setTotalRating] = useState(0);\r\n    const [totalRaters, setTotalRaters] = useState(0);\r\n    const [ratingsObject, setRatingsObject] = useState({\r\n        \"0\": 0,\r\n        \"1\": 0,\r\n        \"2\": 0,\r\n        \"3\": 0,\r\n        \"4\": 0,\r\n        \"5\": 0,\r\n    });\r\n\r\n    const allCustomerDetails = useSelector(state => state.adminCustomerDetails?.customerDetails);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCustomerDetails());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let totalRaters = 0;\r\n        let totalRates = 0;\r\n\r\n        allCustomerDetails?.forEach(user => {\r\n            if (user?.application_rating) {\r\n                totalRates += parseInt(user?.application_rating);\r\n\r\n                if (user?.application_rating in ratingsObject) {\r\n                    setRatingsObject((prevState) => ({\r\n                        ...prevState,\r\n                        [user?.application_rating]: ratingsObject[user?.application_rating] + 1\r\n                    }));\r\n\r\n                }\r\n                totalRaters++;\r\n            }\r\n        });\r\n        setTotalRaters(totalRaters);\r\n        setTotalRating((totalRates / totalRaters).toFixed(1));\r\n\r\n    }, [allCustomerDetails]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"div-header\">\r\n                <h1>Application Ratings</h1>\r\n            </div>\r\n            <RatingDiv>\r\n\r\n                <Row\r\n                    gutter={24}\r\n                >\r\n                    <Col\r\n                        md={{ span: 8, offset: 3 }}\r\n                        xs={24}\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\"\r\n                        }}\r\n                    >\r\n                        <p id=\"total-rating\">{totalRating?totalRating:0}</p>\r\n                        <Rate allowHalf value={totalRating?totalRating:0} disabled />\r\n                        <p id=\"total-raters\">Total Raters: {totalRaters}</p>\r\n                    </Col>\r\n                    <Col\r\n                        md={12}\r\n                        xs={24}\r\n                    >\r\n                        <Row>\r\n                            <Col\r\n\r\n                                md={{ span: 4, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <p className=\"stars-label\">5 Stars:</p>\r\n                            </Col>\r\n                            <Col\r\n                                md={{ span: 8, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <span className=\"rating-bar\"><Progress percent={(ratingsObject[\"5\"] / totalRaters) * 100} showInfo={false} /></span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col\r\n\r\n                                md={{ span: 4, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <p className=\"stars-label\">4 Stars:</p>\r\n                            </Col>\r\n                            <Col\r\n                                md={{ span: 8, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <span className=\"rating-bar\">\r\n                                    <Progress percent={(ratingsObject[\"4\"] / totalRaters) * 100} showInfo={false} />\r\n                                </span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col\r\n\r\n                                md={{ span: 4, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <p className=\"stars-label\">3 Stars:</p>\r\n                            </Col>\r\n                            <Col\r\n                                md={{ span: 8, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <span className=\"rating-bar\"><Progress percent={(ratingsObject[\"3\"] / totalRaters) * 100} showInfo={false} /></span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col\r\n\r\n                                md={{ span: 4, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <p className=\"stars-label\">2 Stars:</p>\r\n                            </Col>\r\n                            <Col\r\n                                md={{ span: 8, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <span className=\"rating-bar\"><Progress percent={(ratingsObject[\"2\"] / totalRaters) * 100} showInfo={false} /></span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col\r\n\r\n                                md={{ span: 4, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <p className=\"stars-label\">1 Stars:</p>\r\n                            </Col>\r\n                            <Col\r\n                                md={{ span: 8, offset: 2 }}\r\n                                xs={{ span: 24 }}\r\n                            >\r\n                                <span className=\"rating-bar\"><Progress percent={(ratingsObject[\"1\"] / totalRaters) * 100} showInfo={false} /></span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </RatingDiv>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminRatingsPage;","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\ratings\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\index.js",["426","427","428","429","430","431"],"E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\active_info_bar.js",["432","433"],"import { CloseCircleOutlined, CheckCircleOutlined } from '@ant-design/icons';\r\nimport { Image } from 'antd';\r\nimport { ActiveInfoDiv } from './style.js';\r\n\r\nconst ActiveInfoBar = ({ isUserOnline, currentUserId, userId }) => {\r\n    return (\r\n        <div>\r\n            <ActiveInfoDiv>\r\n                {isUserOnline ?\r\n                    <CheckCircleOutlined\r\n                        style={{\r\n                            color: \"#51b320\",\r\n                            fontSize: \"1.5rem\",\r\n                            paddingRight: \"10px\"\r\n                        }}\r\n                    />\r\n                    :\r\n                    <CloseCircleOutlined\r\n                        style={{\r\n                            color: \"#737572\",\r\n                            fontSize: \"1.5rem\",\r\n                            paddingRight: \"10px\"\r\n                        }}\r\n                    />\r\n                }\r\n\r\n                <div>\r\n                    {\r\n                        (currentUserId && currentUserId == userId) ?\r\n                            <span>Seller is {isUserOnline ? 'Online' : 'Offline'}</span>\r\n                            :\r\n                            <span>Buyer is {isUserOnline ? 'Online' : 'Offline'}</span>\r\n                    }\r\n                </div>\r\n            </ActiveInfoDiv>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ActiveInfoBar;","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\messages.js",["434","435"],"import { LeftCircleFilled } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Messages = ({ message: { user_id, text } }) => {\r\n    const current_user_id = useSelector(state => state?.user?.user?.user_id)\r\n\r\n    let isSentByCurrentUser = false;\r\n    \r\n    if (user_id == current_user_id) {\r\n        isSentByCurrentUser = true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isSentByCurrentUser?\r\n            (\r\n            <div>\r\n                <p style={{                    \r\n                    float:\"right\",\r\n                    backgroundColor:\"#f5f6f7\",\r\n                    borderRadius: \"18px\",\r\n                    width: \"50%\",\r\n                    padding:\"10px\"\r\n                }}>{text}</p>\r\n            </div>\r\n        )\r\n        :\r\n        (\r\n            <div>\r\n                <p style={{                    \r\n                    float:\"left\",\r\n                    backgroundColor:\"#74b6f7\",\r\n                    borderRadius: \"18px\",\r\n                    width: \"50%\",\r\n                    padding:\"10px\"\r\n                }}>{text}</p>\r\n            </div>\r\n        )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst AllMessages=({messages})=>(\r\n    <div>\r\n        {messages?.map((message,i)=>(            \r\n            <div key={i} style={{display:\"inline-block\", width:\"100%\"}}><Messages message={message}/></div>\r\n        )            \r\n        )}\r\n    </div>\r\n    \r\n)\r\n\r\nexport default AllMessages;","E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\order_product\\index.js",["436","437","438","439","440","441","442","443","444"],"E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\order_product\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\chat\\order_product\\payment_modal.js",["445","446","447","448","449","450"],"import { useState, useEffect } from 'react';\r\nimport { Col, Row, Image, Button, notification, Input } from 'antd';\r\nimport { PaymentModalModal, PaymentTypeDiv } from './style';\r\nimport KhaltiCheckout from \"khalti-checkout-web\";\r\nimport CashInHandImg from '../../../assests/images/cash_in_hand.png';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OnlinePaymentImg from '../../../assests/images/online_payment.png'\r\nimport axios from 'axios';\r\nimport { getAllProducts } from '../../../redux';\r\nimport { API_URL, KHALTI_PUBLIC_KEY, KHALTI_SECRET_KEY } from '../../../config';\r\nimport $ from \"jquery\";\r\n\r\nconst PaymentModal = ({\r\n    product,\r\n    sellerId,\r\n    currentUserId,\r\n    openModalBool,\r\n    setOpenModalBool\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const [registerOrderError, setRegisterOrderError] = useState(null);\r\n    const [currentUserAddress, setCurrentUserAddress] = useState(null);\r\n    const [inputValue, setInputValue] = useState(1);\r\n    const [paymentMethod, setPaymentMethod] = useState(null);\r\n    const [sellerAddress, setSellerAddress] = useState(null);\r\n    const [registerOrderMessage, setRegisterOrderMessage] = useState(null);\r\n    const [khaltiPaymentSuccessBool, setKhaltiPaymentSuccessBool] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (registerOrderError) {\r\n\r\n            notification.error({\r\n                message: registerOrderError,\r\n                duration: 5\r\n            });\r\n            setRegisterOrderError(null);\r\n        }\r\n\r\n        if (registerOrderMessage) {\r\n            notification.info({\r\n                message: registerOrderMessage,\r\n                duration: 5\r\n            });\r\n\r\n            dispatch(getAllProducts(currentUserId));\r\n\r\n            setRegisterOrderMessage(null);\r\n        }\r\n\r\n    }, [registerOrderError, registerOrderMessage]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}/users/get-user-address?user_id=${currentUserId}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                let userAddress = {\r\n                    latitude: res?.data[0][0][\"latitude\"],\r\n                    longitude: res?.data[0][0][\"longitude\"]\r\n                }\r\n                setCurrentUserAddress(userAddress);\r\n\r\n                let sellerAddress = {\r\n                    latitude: product?.user_detail?.address?.latitude,\r\n                    longitude: product?.user_detail?.address?.longitude,\r\n                }\r\n\r\n                setSellerAddress(sellerAddress);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, [currentUserId, product]);\r\n\r\n    const liveKhaltiServerCheck = (payload) => {\r\n        let data = {\r\n            \"token\": payload.token,\r\n            \"amount\": payload.amount\r\n        }\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\": KHALTI_SECRET_KEY\r\n            }\r\n        }\r\n\r\n        //For Live Testing\r\n        axios.post(\"https://cors-anywhere.herokuapp.com/https://khalti.com/api/v2/payment/verify/\", data, config)\r\n            .then(response => {\r\n                console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //Khalti Configuration\r\n    let khaltiConfig = {\r\n        \"publicKey\": KHALTI_PUBLIC_KEY,\r\n        \"productIdentity\": product?.product_id,\r\n        \"productName\": product?.product_name,\r\n        \"productUrl\": `${API_URL}/products/new-products`,\r\n        \"eventHandler\": {\r\n            onSuccess(payload) {\r\n                // hit merchant api for initiating verfication                \r\n                setKhaltiPaymentSuccessBool(true);\r\n\r\n                /* For Live Testing\r\n                 liveKhaltiServerCheck(payload)\r\n                */\r\n            },\r\n            // onError handler is optional\r\n            onError(error) {\r\n                // handle errors\r\n                console.log(error);\r\n                setKhaltiPaymentSuccessBool(false);\r\n            }\r\n        },\r\n        // one can set the order of payment options and also the payment options based on the order and items in the array\r\n        paymentPreference: [\r\n            \"KHALTI\",\r\n        ],\r\n    };\r\n\r\n    const checkout = new KhaltiCheckout(khaltiConfig);\r\n\r\n    const registerOrder = () => {        \r\n        if (paymentMethod == \"cash_in_hand\") {\r\n            const values = {\r\n                product_quantity: inputValue,\r\n                payment_method: paymentMethod,\r\n                user_id: currentUserId,\r\n                seller_id: sellerId,\r\n                product_id: product?.product_id,\r\n                product_price: product?.product_price * inputValue,\r\n                current_user_address: currentUserAddress,\r\n                seller_address: sellerAddress,\r\n                delivered: false,\r\n                paid: false,\r\n                time_for_delivery: product?.time_for_delivery_in_hours\r\n            }\r\n\r\n\r\n            axios.post(`${API_URL}/users/register-order`, values)\r\n                .then(res => {\r\n                    setRegisterOrderMessage(res.data);\r\n                })\r\n                .catch(err => {\r\n                    if (err.response.data.details) {\r\n                        setRegisterOrderError(err.response.data.details[0][\"message\"]);\r\n                    } else {\r\n                        setRegisterOrderError(err.response.data.message);\r\n                    }\r\n\r\n                });\r\n        } else if (paymentMethod == \"online_payment\") {\r\n            //If paid from khalti successful\r\n            if (khaltiPaymentSuccessBool) {\r\n                const values = {\r\n                    product_quantity: inputValue,\r\n                    payment_method: paymentMethod,\r\n                    user_id: currentUserId,\r\n                    seller_id: sellerId,\r\n                    product_id: product?.product_id,\r\n                    product_price: product?.product_price * inputValue,\r\n                    current_user_address: currentUserAddress,\r\n                    seller_address: sellerAddress,\r\n                    delivered: false,\r\n                    paid: true,\r\n                    time_for_delivery: product?.time_for_delivery_in_hours\r\n                }\r\n\r\n                axios.post(`${API_URL}/users/register-order`, values)\r\n                    .then(res => {\r\n                        setRegisterOrderMessage(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        if (err.response.data.details) {\r\n                            setRegisterOrderError(err.response.data.details[0][\"message\"]);\r\n                        } else {\r\n                            setRegisterOrderError(err.response.data.message);\r\n                        }\r\n                    });\r\n            } else {\r\n                notification.error({\r\n                    message: \"Please Pay First!\",\r\n                    duration: 3\r\n                })\r\n            }\r\n        }else{\r\n            notification.error({\r\n                message:\"Please select payment method!\",\r\n                duration:3\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleImageClick = (paymentType) => {\r\n        setPaymentMethod(paymentType);\r\n        if (paymentType == \"cash_in_hand\") {\r\n            $(\"#cash-in-hand-img\").css({\r\n                border: \"2px solid green\"\r\n            });\r\n            $(\"#online-payment-img\").css({\r\n                border: \"1px solid black\"\r\n            });\r\n        } else {\r\n\r\n            //Display Khalti Modal\r\n            //Khalti Takes payment in paisa\r\n            //Dollar into Rupees\r\n            checkout.show({ amount: (product?.product_price * 100 * 100 * inputValue) });\r\n\r\n            $(\"#cash-in-hand-img\").css({\r\n                border: \"1px solid black\"\r\n            });\r\n            $(\"#online-payment-img\").css({\r\n                border: \"2px solid green\"\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PaymentModalModal\r\n            centered\r\n            visible={openModalBool}\r\n            width={900}\r\n            onCancel={() => { setOpenModalBool(false);}}\r\n            maskClosable={false}\r\n            footer={[\r\n                <div>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => { registerOrder() }}\r\n                    >\r\n                        Order\r\n                    </Button>\r\n                    <Button\r\n                        type=\"danger\"\r\n                        onClick={() => { setOpenModalBool(false) }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n            ]}\r\n        >\r\n            <div>\r\n                <div>\r\n                    <span style={{ fontSize: \"1rem\" }}>Products Quantity:</span>\r\n                    <Input style={{ width: \"50%\", margin: \"10px\" }} onChange={(e) => { setInputValue(e.target.value) }} placeholder=\"Number of products you want\" />\r\n                </div>\r\n                <Row justify=\"center\" style={{ textAlign: \"center\" }}>\r\n                    <Col md={12}\r\n                        xs={24}\r\n                    >\r\n                        <PaymentTypeDiv\r\n                            onClick={() => {\r\n                                handleImageClick(\"cash_in_hand\")\r\n                            }}\r\n                            id=\"cash-in-hand-img\"\r\n                        >\r\n                            <div>\r\n                                <Image\r\n\r\n                                    preview={false}\r\n                                    width={200}\r\n                                    src={CashInHandImg}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <h1>Cash In Hand</h1>\r\n                            </div>\r\n                        </PaymentTypeDiv>\r\n\r\n                    </Col>\r\n                    <Col md={12}\r\n                        xs={24}\r\n                    >\r\n                        <PaymentTypeDiv\r\n                            onClick={() => {\r\n                                handleImageClick(\"online_payment\")\r\n                            }}\r\n                            id=\"online-payment-img\"\r\n                        >\r\n                            <div>\r\n                                <Image\r\n\r\n                                    preview={false}\r\n                                    width={200}\r\n                                    src={OnlinePaymentImg}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <h1>Online Payment</h1>\r\n                            </div>\r\n                        </PaymentTypeDiv>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </PaymentModalModal>\r\n    );\r\n};\r\n\r\nexport default PaymentModal;","E:\\FYP\\geo-ecommerce\\src\\utils\\harvesine_calculator.js",["451"],"import { keyframes } from \"styled-components\";\r\n\r\nexport const getLatLongDistance = (lat1, long1, lat2, long2) => {\r\n    const earthRadius = 6371;\r\n    let radianLat = degtoRadian(lat2 - lat1);\r\n    let radianLong = degtoRadian(long2 - long1);\r\n\r\n    let a =\r\n        Math.sin(radianLat / 2) * Math.sin(radianLat / 2) +\r\n        Math.cos(degtoRadian(lat1)) * Math.cos(degtoRadian(lat2)) *\r\n        Math.sin(radianLong / 2) * Math.sin(radianLong / 2)\r\n        ;\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let distance = earthRadius * c; // Distance in km\r\n    return distance;\r\n}\r\n\r\nconst degtoRadian = (deg) => {\r\n    return deg * (Math.PI / 180);\r\n}\r\n\r\nexport const AVERAGE_BIKE_SPEED = 20;//km/hr\r\n\r\nexport const timeConverter=(time)=>{\r\n    let hours=(time/60);\r\n    let flooredHour=Math.floor(hours);\r\n    let minutes=Math.round((hours-flooredHour)*60);\r\n    return flooredHour+\"hr : \"+minutes+\"m\";\r\n}","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\orders_tab\\index.js",["452","453","454","455"],"import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Table, Alert, Button, Modal, Select, notification } from 'antd';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../../../config';\r\nimport { getAllOrderDetails } from '../../../../redux';\r\n\r\n\r\nconst SellerOrderTab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userId = useSelector(state => state.user.user?.user_id);\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalProduct, setModalProduct] = useState(null);\r\n    const [paidValue, setPaidValue] = useState(null);\r\n    const [deliveredValue, setDeliveredValue] = useState(null);\r\n\r\n    const gettingAllOrderDetails = useSelector(state => state?.sellerAllProducts?.gettingAllOrderDetails);\r\n    const gettingAllOrderDetailsError = useSelector(state => state?.sellerAllProducts?.gettingAllOrderDetailsError);\r\n    const allOrderedProducts = useSelector(state => state?.sellerAllProducts?.allOrderDetails);\r\n\r\n    useEffect(() => {\r\n        const filteredProducts = allOrderedProducts?.filter((data, index) => (\r\n            !data?.paid || !data?.delivered\r\n        ));\r\n\r\n        setProducts(filteredProducts);\r\n\r\n    }, [allOrderedProducts]);\r\n\r\n    const handleOnClick = (record) => {\r\n        setModalProduct(record);\r\n        setPaidValue(record.paid);\r\n        setDeliveredValue(record.delivered);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const updatePaymentInformation = () => {\r\n\r\n        const values = {\r\n            order_detail_id: modalProduct.key,\r\n            paidValue: paidValue,\r\n            deliveredValue: deliveredValue\r\n        };\r\n\r\n        axios.post(`${API_URL}/users/update-seller-paid-values`, values)\r\n            .then(res => {\r\n                notification.success({\r\n                    message: res.data,\r\n                    duration: 5\r\n                });\r\n\r\n                dispatch(getAllOrderDetails(userId));\r\n            })\r\n            .catch(err => {\r\n\r\n                notification.error({\r\n                    message: err.response.data?.details[0][\"message\"],\r\n                    duration: 5\r\n                })\r\n            })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalProduct(null);\r\n        setShowModal(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Customer Name\",\r\n            dataIndex: \"customerName\",\r\n            key: \"customerName\",\r\n        },\r\n        {\r\n            title: \"Customer Email\",\r\n            dataIndex: \"customerEmail\",\r\n            key: \"customerEmail\"\r\n        },\r\n        {\r\n            title: \"Product Name\",\r\n            dataIndex: \"productName\",\r\n            key: \"productName\"\r\n        },\r\n        {\r\n            title: \"Quantity Ordered\",\r\n            dataIndex: \"quantityOrdered\",\r\n            key: \"quantityOrdered\"\r\n        },\r\n        {\r\n            title: \"Price Paid\",\r\n            dataIndex: \"pricePaid\",\r\n            key: \"pricePaid\"\r\n        },\r\n        {\r\n            title: \"Payment Method\",\r\n            dataIndex: \"paymentMethod\",\r\n            key: \"paymentMethod\"\r\n        },\r\n        {\r\n            title: \"Paid\",\r\n            dataIndex: \"paid\",\r\n            key: \"paid\",\r\n            render: (text, record, index) => {\r\n                return (\r\n                    <Select\r\n                        style={{ width: \"100%\" }}\r\n                        value={record?.paid ? \"paid\" : \"notPaid\"}\r\n                        onClick={() => { handleOnClick(record) }}\r\n                    >\r\n                        <Select.Option value=\"paid\">Paid</Select.Option>\r\n                        <Select.Option value=\"notPaid\">Not Paid</Select.Option>\r\n                    </Select>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: \"Delivered\",\r\n            dataIndex: \"delivered\",\r\n            key: \"delivered\",\r\n            render: (text, record, index) => {\r\n                return (\r\n                    <Select\r\n                        style={{ width: \"100%\" }}\r\n                        value={record?.delivered ? \"Delivered\" : \"notDelivered\"}\r\n                        onClick={() => { handleOnClick(record) }}\r\n                    >\r\n                        <Select.Option value=\"delivered\">Delivered</Select.Option>\r\n                        <Select.Option value=\"notDelivered\">Not Delivered</Select.Option>\r\n                    </Select>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: \"Ordered At\",\r\n            dataIndex: \"orderedAt\",\r\n            key: \"orderedAt\"\r\n        }\r\n    ];\r\n\r\n    const tableData = products?.map((data, index) => ({\r\n        key: data?.order_detail_id,\r\n        customerName: `${data?.User?.first_name} ${data?.User?.last_name ? data?.User?.last_name : \"\"}`,\r\n        customerEmail: data?.User?.email,\r\n        productName: data?.Product?.product_name,\r\n        productPrice: data?.Product?.product_price,\r\n        pricePaid: data?.product_price,\r\n        quantityOrdered: data?.product_quantity,\r\n        paymentMethod: data?.payment_method,\r\n        paid: data?.paid,\r\n        delivered: data?.delivered,\r\n        orderedAt: data?.createdAt ? new Date(data.createdAt).toLocaleString() : \"\",\r\n    }));\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: \"white\"\r\n            }}\r\n        >\r\n            {gettingAllOrderDetailsError &&\r\n                (\r\n                    window.scrollTo(0, 0),\r\n                    <Alert type=\"error\" message={gettingAllOrderDetailsError} banner closable />\r\n                )\r\n            }\r\n\r\n            <Table\r\n                columns={columns}\r\n                dataSource={tableData}\r\n                loading={gettingAllOrderDetails}\r\n                bordered\r\n                style={{\r\n                    overflow: \"auto\"\r\n                }}\r\n            />\r\n            {modalProduct ?\r\n                (\r\n                    <Modal\r\n                        title={`Update Customer ${modalProduct?.customerName}`}\r\n                        visible={showModal}\r\n                        maskClosable={false}\r\n                        onOk={updatePaymentInformation}\r\n                        onCancel={closeModal}\r\n                    >\r\n                        <Row>\r\n                            <Col md={6}\r\n                                xs={10}\r\n                                style={{ marginBottom: \"20px\" }}\r\n                            >\r\n                                <h4>Product Name:</h4>\r\n                            </Col>\r\n                            <Col md={8}\r\n                                xs={12}>\r\n                                {modalProduct?.productName}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}\r\n                                xs={10}\r\n                                style={{ marginBottom: \"20px\" }}\r\n                            >\r\n                                <h4>Ordered At:</h4>\r\n                            </Col>\r\n                            <Col md={8}\r\n                                xs={12}>\r\n                                {modalProduct?.orderedAt}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}\r\n                                xs={10}\r\n                                style={{ marginBottom: \"20px\" }}\r\n                            >\r\n                                <h4>Paid:</h4>\r\n                            </Col>\r\n                            <Col md={8}\r\n                                xs={12}>\r\n                                <Select\r\n                                    id=\"paid-select-tag\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    defaultValue={modalProduct?.paid ? \"paid\" : \"notPaid\"}\r\n                                    onChange={(values) => { setPaidValue(values == \"paid\" ? true : false) }}\r\n                                >\r\n                                    <Select.Option value=\"paid\">Paid</Select.Option>\r\n                                    <Select.Option value=\"notPaid\">Not Paid</Select.Option>\r\n                                </Select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}\r\n                                xs={10}\r\n                            >\r\n                                Delivered:\r\n                            </Col>\r\n                            <Col md={8}\r\n                                xs={12}>\r\n                                <Select\r\n                                    id=\"delivered-select-tag\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    defaultValue={modalProduct.delivered ? \"delivered\" : \"notDelivered\"}\r\n                                    onChange={(values) => { setDeliveredValue(values == \"delivered\" ? true : false) }}\r\n                                >\r\n                                    <Select.Option value=\"delivered\">Delivered</Select.Option>\r\n                                    <Select.Option value=\"notDelivered\">Not Delivered</Select.Option>\r\n                                </Select>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal>\r\n                ) :\r\n                (\r\n                    <>\r\n                    </>\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default SellerOrderTab;","E:\\FYP\\geo-ecommerce\\src\\pages\\sell_your_products\\components\\sold_products_tab\\index.js",["456","457"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col, Table, Alert } from 'antd';\r\n\r\nconst SoldProductsTab = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const gettingAllOrderDetails = useSelector(state => state?.sellerAllProducts?.gettingAllOrderDetails);\r\n    const gettingAllOrderDetailsError = useSelector(state => state?.sellerAllProducts?.gettingAllOrderDetailsError);\r\n    const allOrderedProducts = useSelector(state => state?.sellerAllProducts?.allOrderDetails);\r\n\r\n    useEffect(() => {\r\n        const filteredProducts = allOrderedProducts?.filter((data, index) => (\r\n            data?.paid && data?.delivered\r\n        ));\r\n\r\n        setProducts(filteredProducts);\r\n    }, [allOrderedProducts]);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Product Name\",\r\n            dataIndex: \"productName\",\r\n            key: \"productName\"\r\n        },\r\n        {\r\n            title: \"Product Price\",\r\n            dataIndex: \"productPrice\",\r\n            key: \"productPrice\"\r\n        },\r\n        {\r\n            title: \"Customer Name\",\r\n            dataIndex: \"customerName\",\r\n            key: \"customerName\",\r\n        },\r\n        {\r\n            title: \"Customer Email\",\r\n            dataIndex: \"customerEmail\",\r\n            key: \"customerEmail\"\r\n        },\r\n        {\r\n            title: \"Quantity Ordered\",\r\n            dataIndex: \"quantityOrdered\",\r\n            key: \"quantityOrdered\"\r\n        },\r\n        {\r\n            title: \"Price Paid\",\r\n            dataIndex: \"pricePaid\",\r\n            key: \"pricePaid\"\r\n        },\r\n        {\r\n            title: \"Payment Method\",\r\n            dataIndex: \"paymentMethod\",\r\n            key: \"paymentMethod\"\r\n        },\r\n    ];\r\n\r\n    const tableData = products?.map((data, index) => ({\r\n        key: data?.order_detail_id,\r\n        customerName: `${data?.User?.first_name} ${data?.User?.last_name ? data?.User?.last_name : \"\"}`,\r\n        customerEmail: data?.User?.email,\r\n        productName: data?.Product?.product_name,\r\n        productPrice: data?.Product?.product_price,\r\n        pricePaid: data?.product_price,\r\n        quantityOrdered: data?.product_quantity,\r\n        paymentMethod: data?.payment_method,\r\n        orderedAt: data?.createdAt ? new Date(data.createdAt).toLocaleString() : \"\",\r\n    }));\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: \"white\"\r\n            }}\r\n        >\r\n            {gettingAllOrderDetailsError &&\r\n                (\r\n                    window.scrollTo(0, 0),\r\n                    <Alert type=\"error\" message={gettingAllOrderDetailsError} banner closable />\r\n                )\r\n            }\r\n\r\n            <Table\r\n                columns={columns}\r\n                dataSource={tableData}\r\n                loading={gettingAllOrderDetails}\r\n                bordered\r\n                style={{\r\n                    overflow: \"auto\"\r\n                }}\r\n            />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SoldProductsTab;","E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\index.js",["458","459","460","461","462","463"],"import { PageLayout, MainDiv, CustomTab, CustomTabPane } from \"./style\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport UserPersonalInformationTab from './personal_information';\r\nimport UserOrdersTab from './orders';\r\n\r\nconst UserProfile = () => {\r\n    const dispatch = useDispatch();\r\n    const User = useSelector(state => state.user?.user);\r\n    return (\r\n        <CustomTab defaultActiveKey=\"1\">\r\n            <CustomTabPane tab=\"Personal Information\" key=\"1\">\r\n                <UserPersonalInformationTab />\r\n            </CustomTabPane>\r\n            <CustomTabPane tab=\"Your Orders\" key=\"2\">\r\n                <UserOrdersTab />\r\n            </CustomTabPane>\r\n        </CustomTab>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\style.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\personal_information\\index.js",[],"E:\\FYP\\geo-ecommerce\\src\\pages\\user_profile\\orders\\index.js",["464","465"],"import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from 'antd';\r\n\r\nconst UserOrdersTab = () => {\r\n    const [userOrderDetails, setUserOrderDetails] = useState(null);\r\n\r\n    const User = useSelector(state => state.user?.user);\r\n\r\n    useEffect(() => {\r\n        const mappedOrderDetails = User?.order_details?.map((data, index) => ({\r\n            key: index,\r\n            orderedQuantity: data?.product_quantity,\r\n            delivered: data?.delivered,\r\n            paid: data?.paid,\r\n            paymentMethod: data?.payment_method,\r\n            productName: data?.Product?.product_name,\r\n            sellerName: `${data?.Product?.user_detail?.first_name || \"\"} ${data?.Product?.user_detail?.last_name || \"\"}`,\r\n            sellerEmail: data?.Product?.user_detail?.email\r\n        }));\r\n\r\n        setUserOrderDetails(mappedOrderDetails);\r\n\r\n        console.log(userOrderDetails);\r\n\r\n    }, [User]);\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Product Name\",\r\n            dataIndex: \"productName\",\r\n            key: \"productName\"\r\n        },\r\n        {\r\n            title: \"Seller Name\",\r\n            dataIndex: \"sellerName\",\r\n            key: \"sellerName\"\r\n        },\r\n        {\r\n            title: \"Seller Email\",\r\n            dataIndex: \"sellerEmail\",\r\n            key: \"sellerEmail\"\r\n        },\r\n        {\r\n            title: \"Quantity Ordered\",\r\n            dataIndex: \"orderedQuantity\",\r\n            key: \"orderedQuantity\"\r\n        },\r\n        {\r\n            title: \"Payment Method\",\r\n            dataIndex: \"paymentMethod\",\r\n            key: \"paymentMethod\"\r\n        },\r\n        {\r\n            title: \"Paid\",\r\n            dataIndex: \"paid\",\r\n            key: \"paid\",\r\n            render: (text, record, index) => {\r\n                return (\r\n                    record?.paid ?\r\n                        <span style={{ color: \"green\" }}>Paid</span>\r\n                        :\r\n                        <span style={{ color: \"red\" }}>Not Paid</span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: \"Delivered\",\r\n            dataIndex: \"delivered\",\r\n            key: \"delivered\",\r\n            render: (text, record, index) => {\r\n                return (\r\n                    record?.delivered ?\r\n                        <span style={{ color: \"green\" }}>Delivered</span>\r\n                        :\r\n                        <span style={{ color: \"red\" }}>Not Delivered</span>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={userOrderDetails}\r\n        />\r\n    )\r\n};\r\n\r\nexport default UserOrdersTab;","E:\\FYP\\geo-ecommerce\\src\\pages\\admin\\orders\\index.js",["466","467"],"import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllCustomerDetails } from '../../../redux';\r\nimport { notification } from 'antd';\r\nimport { Table } from \"ant-table-extensions\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nconst AdminOrdersPage = () => {\r\n    const dispatch = useDispatch();\r\n    const gettingAllCustomerDetailsBool = useSelector(state => state.adminCustomerDetails?.gettingAllCustomerDetails);\r\n    const gettingAllCustomerDetailsError = useSelector(state => state.adminCustomerDetails?.gettingAllCustomerDetailsError);\r\n    const allCustomerDetails = useSelector(state => state.adminCustomerDetails?.customerDetails);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCustomerDetails());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        gettingAllCustomerDetailsError &&\r\n            (\r\n                notification.error({\r\n                    message: gettingAllCustomerDetailsError,\r\n                    duration: 3\r\n                })\r\n            )\r\n    }, [gettingAllCustomerDetailsError]);\r\n\r\n    const columns = [\r\n        {\r\n            title: \"All Orders\",\r\n            children: [\r\n                {\r\n                    title: \"Customer Name\",\r\n                    dataIndex: \"customerName\",\r\n                    key: \"customerName\"\r\n                },\r\n                {\r\n                    title: \"Customer Email\",\r\n                    dataIndex: \"customerEmail\",\r\n                    key: \"customerEmail\"\r\n                },\r\n                {\r\n                    title: \"Product Name\",\r\n                    dataIndex: \"productName\",\r\n                    key: \"productName\"\r\n                },\r\n                {\r\n                    title: \"Seller Name\",\r\n                    dataIndex: \"sellerName\",\r\n                    key: \"sellerName\"\r\n                },\r\n                {\r\n                    title: \"Seller Email\",\r\n                    dataIndex: \"sellerEmail\",\r\n                    key: \"sellerEmail\"\r\n                },\r\n                {\r\n                    title: \"Quantity Ordered\",\r\n                    dataIndex: \"orderedQuantity\",\r\n                    key: \"orderedQuantity\"\r\n                },\r\n                {\r\n                    title: \"Payment Method\",\r\n                    dataIndex: \"paymentMethod\",\r\n                    key: \"paymentMethod\"\r\n                },\r\n                {\r\n                    title: \"Paid\",\r\n                    dataIndex: \"paid\",\r\n                    key: \"paid\",\r\n                    render: (text, record, index) => {\r\n                        return (\r\n                            record?.paid ?\r\n                                <span style={{ color: \"green\" }}>Paid</span>\r\n                                :\r\n                                <span style={{ color: \"red\" }}>Not Paid</span>\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    title: \"Delivered\",\r\n                    dataIndex: \"delivered\",\r\n                    key: \"delivered\",\r\n                    render: (text, record, index) => {                        \r\n                        return (\r\n                            record?.delivered ?\r\n                                <span style={{ color: \"green\" }}>Delivered</span>\r\n                                :\r\n                                <span style={{ color: \"red\" }}>Not Delivered</span>\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    title: \"Ordered At\",\r\n                    dataIndex: \"orderedAt\",\r\n                    key: \"orderedAt\"\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const tableData = allCustomerDetails?.filter((data) => (data?.order_details?.length > 0)).flatMap((data, i) => (\r\n        data?.order_details?.map((orderData, j) => (\r\n            {\r\n                key: orderData?.id,\r\n                customerName: `${data?.first_name} ${data?.last_name ? data.last_name : \"\"}`,\r\n                customerEmail: data?.email,\r\n                sellerName: `${orderData?.Product?.user_detail?.first_name || \"\"} ${data?.Product?.user_detail?.last_name || \"\"}`,\r\n                sellerEmail: orderData?.Product?.user_detail?.email,\r\n                productName: orderData?.Product?.product_name,\r\n                orderedQuantity: orderData?.product_quantity,\r\n                paymentMethod: orderData?.payment_method,\r\n                paid: orderData?.paid,\r\n                delivered: orderData?.delivered,\r\n                orderedAt: orderData?.createdAt ? new Date(orderData?.createdAt).toLocaleString() : \"\"\r\n            }))\r\n    )\r\n    );\r\n\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={tableData}\r\n            loading={gettingAllCustomerDetailsBool}\r\n            searchableProps={{\r\n                inputProps: {\r\n                    prefix: <SearchOutlined />,\r\n                    style: {\r\n                        width: \"200px\"\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AdminOrdersPage;","E:\\FYP\\geo-ecommerce\\src\\components\\nav_bar\\message_dropdown.js",["468","469"],"import { useSelector, useDispatch } from 'react-redux';\r\nimport { MessageOutlined } from '@ant-design/icons';\r\nimport { Dropdown } from 'antd';\r\nimport { MessageDropDownMenuDiv } from './style';\r\nimport { getToken } from '../../utils/storage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MessageDropDown = () => {\r\n    const User = useSelector(state => state?.user?.user);\r\n\r\n\r\n\r\n\r\n    const MessageDropDownDiv = () => {\r\n        return (\r\n            <MessageDropDownMenuDiv>\r\n                {User?.message_rooms?.length > 0 ?\r\n                    (\r\n                        User?.message_rooms?.map((data, index) => (\r\n                            data?.messages?.length > 0 ?\r\n                                (\r\n                                    <div\r\n                                        key={index}\r\n                                        className=\"message-div\"\r\n                                        style={{ borderBottom: \"2px solid grey\", cursor: \"pointer\" }}\r\n                                    >\r\n                                        <Link\r\n                                            onClick={() => {\r\n                                                //Setting User Token to storage\r\n                                                const userToken = getToken();\r\n                                                localStorage.setItem(\"user\", userToken);\r\n                                            }}\r\n                                            to={`/chat?user_id=${data?.user_id}&product_id=${data?.product_id}&seller_id=${data?.seller_id}`}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            <div>\r\n                                                <span style={{color:\"grey\"}}>Product: </span><span className=\"product-name\">{data?.Product?.[\"product_name\"]}</span>\r\n                                            </div>\r\n                                            <div style={{ display: \"flex\" }}>\r\n                                                <span className=\"message-sender\">\r\n                                                    {User?.user_id == data?.messages?.[0][\"user_id\"] ?\r\n                                                        <p>You:</p>\r\n                                                        :\r\n                                                        <p>{data?.messages?.[0][\"User\"]?.first_name}</p>\r\n                                                    }\r\n                                                </span>\r\n                                                <span className=\"message\">{data?.messages?.[data?.messages?.length - 1][\"message\"]}</span>\r\n                                            </div>\r\n                                        </Link>\r\n\r\n                                    </div>\r\n                                ) :\r\n                                \"\"\r\n                        ))\r\n                    )\r\n                    : (\r\n                        <div>\r\n                            No Messages\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            </MessageDropDownMenuDiv >\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dropdown\r\n                overlay={<MessageDropDownDiv />}\r\n                trigger={[\"click\"]}\r\n                style={{\r\n                    pointer: \"cursor\"\r\n                }}\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <MessageOutlined style={{ cursor: \"pointer\", fontSize: \"2.5rem\" }} />\r\n                    </div>\r\n                    <div>\r\n                        Messages\r\n                    </div>\r\n                </div>\r\n\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageDropDown;","E:\\FYP\\geo-ecommerce\\src\\pages\\landing\\components\\chat_bot\\chat-bot.js",[],{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","severity":1,"message":"475","line":1,"column":8,"nodeType":"476","messageId":"477","endLine":1,"endColumn":12},{"ruleId":"474","severity":1,"message":"478","line":5,"column":27,"nodeType":"476","messageId":"477","endLine":5,"endColumn":33},{"ruleId":"474","severity":1,"message":"479","line":9,"column":10,"nodeType":"476","messageId":"477","endLine":9,"endColumn":30},{"ruleId":"480","severity":1,"message":"481","line":18,"column":6,"nodeType":"482","endLine":18,"endColumn":17,"suggestions":"483"},{"ruleId":"474","severity":1,"message":"484","line":3,"column":16,"nodeType":"476","messageId":"477","endLine":3,"endColumn":24},{"ruleId":"474","severity":1,"message":"485","line":3,"column":26,"nodeType":"476","messageId":"477","endLine":3,"endColumn":36},{"ruleId":"480","severity":1,"message":"481","line":28,"column":7,"nodeType":"482","endLine":28,"endColumn":9,"suggestions":"486"},{"ruleId":"480","severity":1,"message":"487","line":55,"column":8,"nodeType":"482","endLine":55,"endColumn":20,"suggestions":"488"},{"ruleId":"474","severity":1,"message":"484","line":3,"column":28,"nodeType":"476","messageId":"477","endLine":3,"endColumn":36},{"ruleId":"480","severity":1,"message":"481","line":27,"column":8,"nodeType":"482","endLine":27,"endColumn":10,"suggestions":"489"},{"ruleId":"474","severity":1,"message":"490","line":9,"column":24,"nodeType":"476","messageId":"477","endLine":9,"endColumn":37},{"ruleId":"491","severity":1,"message":"492","line":173,"column":49,"nodeType":"493","endLine":173,"endColumn":79},{"ruleId":"491","severity":1,"message":"492","line":233,"column":49,"nodeType":"493","endLine":233,"endColumn":106},{"ruleId":"474","severity":1,"message":"494","line":2,"column":16,"nodeType":"476","messageId":"477","endLine":2,"endColumn":24},{"ruleId":"474","severity":1,"message":"495","line":3,"column":28,"nodeType":"476","messageId":"477","endLine":3,"endColumn":33},{"ruleId":"474","severity":1,"message":"496","line":6,"column":8,"nodeType":"476","messageId":"477","endLine":6,"endColumn":23},{"ruleId":"480","severity":1,"message":"481","line":28,"column":8,"nodeType":"482","endLine":28,"endColumn":17,"suggestions":"497"},{"ruleId":"480","severity":1,"message":"498","line":81,"column":8,"nodeType":"482","endLine":81,"endColumn":10,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":90,"column":19,"nodeType":"502","messageId":"503","endLine":90,"endColumn":21},{"ruleId":"504","severity":1,"message":"505","line":93,"column":18,"nodeType":"476","messageId":"506","endLine":93,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":95,"column":19,"nodeType":"502","messageId":"503","endLine":95,"endColumn":21},{"ruleId":"474","severity":1,"message":"507","line":124,"column":11,"nodeType":"476","messageId":"477","endLine":124,"endColumn":28},{"ruleId":"504","severity":1,"message":"508","line":135,"column":22,"nodeType":"476","messageId":"506","endLine":135,"endColumn":27},{"ruleId":"474","severity":1,"message":"509","line":1,"column":27,"nodeType":"476","messageId":"477","endLine":1,"endColumn":39},{"ruleId":"474","severity":1,"message":"510","line":9,"column":10,"nodeType":"476","messageId":"477","endLine":9,"endColumn":16},{"ruleId":"511","severity":1,"message":"512","line":43,"column":1,"nodeType":"513","endLine":46,"endColumn":2},{"ruleId":"474","severity":1,"message":"514","line":11,"column":5,"nodeType":"476","messageId":"477","endLine":11,"endColumn":16},{"ruleId":"474","severity":1,"message":"515","line":13,"column":5,"nodeType":"476","messageId":"477","endLine":13,"endColumn":15},{"ruleId":"474","severity":1,"message":"516","line":14,"column":5,"nodeType":"476","messageId":"477","endLine":14,"endColumn":23},{"ruleId":"474","severity":1,"message":"517","line":15,"column":5,"nodeType":"476","messageId":"477","endLine":15,"endColumn":21},{"ruleId":"474","severity":1,"message":"518","line":23,"column":7,"nodeType":"476","messageId":"477","endLine":23,"endColumn":18},{"ruleId":"474","severity":1,"message":"519","line":29,"column":7,"nodeType":"476","messageId":"477","endLine":29,"endColumn":25},{"ruleId":"474","severity":1,"message":"520","line":36,"column":7,"nodeType":"476","messageId":"477","endLine":36,"endColumn":23},{"ruleId":"474","severity":1,"message":"521","line":64,"column":7,"nodeType":"476","messageId":"477","endLine":64,"endColumn":26},{"ruleId":"474","severity":1,"message":"522","line":90,"column":7,"nodeType":"476","messageId":"477","endLine":90,"endColumn":19},{"ruleId":"474","severity":1,"message":"523","line":3,"column":8,"nodeType":"476","messageId":"477","endLine":3,"endColumn":14},{"ruleId":"474","severity":1,"message":"524","line":4,"column":10,"nodeType":"476","messageId":"477","endLine":4,"endColumn":18},{"ruleId":"474","severity":1,"message":"525","line":1,"column":27,"nodeType":"476","messageId":"477","endLine":1,"endColumn":33},{"ruleId":"474","severity":1,"message":"526","line":1,"column":10,"nodeType":"476","messageId":"477","endLine":1,"endColumn":18},{"ruleId":"480","severity":1,"message":"527","line":23,"column":8,"nodeType":"482","endLine":23,"endColumn":37,"suggestions":"528"},{"ruleId":"500","severity":1,"message":"529","line":59,"column":32,"nodeType":"502","messageId":"503","endLine":59,"endColumn":34},{"ruleId":"500","severity":1,"message":"529","line":59,"column":62,"nodeType":"502","messageId":"503","endLine":59,"endColumn":64},{"ruleId":"474","severity":1,"message":"530","line":2,"column":41,"nodeType":"476","messageId":"477","endLine":2,"endColumn":45},{"ruleId":"474","severity":1,"message":"526","line":4,"column":10,"nodeType":"476","messageId":"477","endLine":4,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":13,"column":46,"nodeType":"502","messageId":"503","endLine":13,"endColumn":48},{"ruleId":"500","severity":1,"message":"529","line":46,"column":88,"nodeType":"502","messageId":"503","endLine":46,"endColumn":90},{"ruleId":"500","severity":1,"message":"501","line":12,"column":32,"nodeType":"502","messageId":"503","endLine":12,"endColumn":34},{"ruleId":"500","severity":1,"message":"501","line":39,"column":38,"nodeType":"502","messageId":"503","endLine":39,"endColumn":40},{"ruleId":"500","severity":1,"message":"529","line":79,"column":83,"nodeType":"502","messageId":"503","endLine":79,"endColumn":85},{"ruleId":"474","severity":1,"message":"531","line":3,"column":53,"nodeType":"476","messageId":"477","endLine":3,"endColumn":60},{"ruleId":"480","severity":1,"message":"532","line":47,"column":8,"nodeType":"482","endLine":47,"endColumn":38,"suggestions":"533"},{"ruleId":"480","severity":1,"message":"534","line":30,"column":8,"nodeType":"482","endLine":30,"endColumn":10,"suggestions":"535"},{"ruleId":"536","severity":1,"message":"537","line":35,"column":9,"nodeType":"538","messageId":"539","endLine":38,"endColumn":10},{"ruleId":"500","severity":1,"message":"501","line":66,"column":37,"nodeType":"502","messageId":"503","endLine":66,"endColumn":39},{"ruleId":"500","severity":1,"message":"501","line":69,"column":44,"nodeType":"502","messageId":"503","endLine":69,"endColumn":46},{"ruleId":"500","severity":1,"message":"501","line":72,"column":44,"nodeType":"502","messageId":"503","endLine":72,"endColumn":46},{"ruleId":"500","severity":1,"message":"501","line":76,"column":89,"nodeType":"502","messageId":"503","endLine":76,"endColumn":91},{"ruleId":"500","severity":1,"message":"501","line":77,"column":79,"nodeType":"502","messageId":"503","endLine":77,"endColumn":81},{"ruleId":"480","severity":1,"message":"540","line":87,"column":8,"nodeType":"482","endLine":87,"endColumn":35,"suggestions":"541"},{"ruleId":"474","severity":1,"message":"542","line":3,"column":29,"nodeType":"476","messageId":"477","endLine":3,"endColumn":43},{"ruleId":"543","severity":1,"message":"544","line":30,"column":59,"nodeType":"545","messageId":"546","endLine":30,"endColumn":61},{"ruleId":"480","severity":1,"message":"547","line":47,"column":8,"nodeType":"482","endLine":47,"endColumn":25,"suggestions":"548"},{"ruleId":"474","severity":1,"message":"549","line":3,"column":20,"nodeType":"476","messageId":"477","endLine":3,"endColumn":25},{"ruleId":"474","severity":1,"message":"550","line":4,"column":10,"nodeType":"476","messageId":"477","endLine":4,"endColumn":16},{"ruleId":"500","severity":1,"message":"529","line":35,"column":20,"nodeType":"502","messageId":"503","endLine":35,"endColumn":22},{"ruleId":"474","severity":1,"message":"551","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":14},{"ruleId":"474","severity":1,"message":"552","line":3,"column":41,"nodeType":"476","messageId":"477","endLine":3,"endColumn":49},{"ruleId":"474","severity":1,"message":"553","line":3,"column":59,"nodeType":"476","messageId":"477","endLine":3,"endColumn":66},{"ruleId":"474","severity":1,"message":"554","line":1,"column":10,"nodeType":"476","messageId":"477","endLine":1,"endColumn":16},{"ruleId":"474","severity":1,"message":"478","line":2,"column":27,"nodeType":"476","messageId":"477","endLine":2,"endColumn":33},{"ruleId":"474","severity":1,"message":"555","line":4,"column":21,"nodeType":"476","messageId":"477","endLine":4,"endColumn":31},{"ruleId":"474","severity":1,"message":"556","line":7,"column":10,"nodeType":"476","messageId":"477","endLine":7,"endColumn":19},{"ruleId":"474","severity":1,"message":"557","line":3,"column":10,"nodeType":"476","messageId":"477","endLine":3,"endColumn":15},{"ruleId":"474","severity":1,"message":"558","line":19,"column":11,"nodeType":"476","messageId":"477","endLine":19,"endColumn":31},{"ruleId":"480","severity":1,"message":"481","line":35,"column":8,"nodeType":"482","endLine":35,"endColumn":60,"suggestions":"559"},{"ruleId":"474","severity":1,"message":"531","line":4,"column":46,"nodeType":"476","messageId":"477","endLine":4,"endColumn":53},{"ruleId":"474","severity":1,"message":"560","line":7,"column":10,"nodeType":"476","messageId":"477","endLine":7,"endColumn":31},{"ruleId":"474","severity":1,"message":"561","line":15,"column":11,"nodeType":"476","messageId":"477","endLine":15,"endColumn":36},{"ruleId":"480","severity":1,"message":"562","line":40,"column":8,"nodeType":"482","endLine":40,"endColumn":38,"suggestions":"563"},{"ruleId":"480","severity":1,"message":"487","line":47,"column":8,"nodeType":"482","endLine":47,"endColumn":10,"suggestions":"564"},{"ruleId":"480","severity":1,"message":"565","line":22,"column":8,"nodeType":"482","endLine":22,"endColumn":14,"suggestions":"566"},{"ruleId":"480","severity":1,"message":"481","line":25,"column":8,"nodeType":"482","endLine":25,"endColumn":10,"suggestions":"567"},{"ruleId":"480","severity":1,"message":"568","line":48,"column":8,"nodeType":"482","endLine":48,"endColumn":28,"suggestions":"569"},{"ruleId":"474","severity":1,"message":"570","line":40,"column":11,"nodeType":"476","messageId":"477","endLine":40,"endColumn":29},{"ruleId":"480","severity":1,"message":"571","line":79,"column":8,"nodeType":"482","endLine":79,"endColumn":42,"suggestions":"572"},{"ruleId":"500","severity":1,"message":"501","line":123,"column":48,"nodeType":"502","messageId":"503","endLine":123,"endColumn":50},{"ruleId":"500","severity":1,"message":"501","line":131,"column":48,"nodeType":"502","messageId":"503","endLine":131,"endColumn":50},{"ruleId":"480","severity":1,"message":"573","line":137,"column":8,"nodeType":"482","endLine":137,"endColumn":31,"suggestions":"574"},{"ruleId":"500","severity":1,"message":"501","line":150,"column":35,"nodeType":"502","messageId":"503","endLine":150,"endColumn":37},{"ruleId":"474","severity":1,"message":"495","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":15},{"ruleId":"500","severity":1,"message":"501","line":29,"column":57,"nodeType":"502","messageId":"503","endLine":29,"endColumn":59},{"ruleId":"474","severity":1,"message":"575","line":1,"column":10,"nodeType":"476","messageId":"477","endLine":1,"endColumn":26},{"ruleId":"500","severity":1,"message":"501","line":9,"column":17,"nodeType":"502","messageId":"503","endLine":9,"endColumn":19},{"ruleId":"474","severity":1,"message":"576","line":1,"column":35,"nodeType":"476","messageId":"477","endLine":1,"endColumn":47},{"ruleId":"474","severity":1,"message":"577","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":16},{"ruleId":"474","severity":1,"message":"578","line":4,"column":23,"nodeType":"476","messageId":"477","endLine":4,"endColumn":34},{"ruleId":"579","severity":1,"message":"580","line":26,"column":64,"nodeType":"581","messageId":"582","endLine":26,"endColumn":65,"fix":"583"},{"ruleId":"500","severity":1,"message":"501","line":36,"column":77,"nodeType":"502","messageId":"503","endLine":36,"endColumn":79},{"ruleId":"480","severity":1,"message":"540","line":60,"column":8,"nodeType":"482","endLine":60,"endColumn":32,"suggestions":"584"},{"ruleId":"500","severity":1,"message":"501","line":63,"column":20,"nodeType":"502","messageId":"503","endLine":63,"endColumn":22},{"ruleId":"500","severity":1,"message":"501","line":133,"column":41,"nodeType":"502","messageId":"503","endLine":133,"endColumn":43},{"ruleId":"500","severity":1,"message":"501","line":199,"column":41,"nodeType":"502","messageId":"503","endLine":199,"endColumn":43},{"ruleId":"474","severity":1,"message":"585","line":6,"column":23,"nodeType":"476","messageId":"477","endLine":6,"endColumn":34},{"ruleId":"480","severity":1,"message":"586","line":50,"column":8,"nodeType":"482","endLine":50,"endColumn":50,"suggestions":"587"},{"ruleId":"474","severity":1,"message":"588","line":74,"column":11,"nodeType":"476","messageId":"477","endLine":74,"endColumn":32},{"ruleId":"500","severity":1,"message":"501","line":127,"column":27,"nodeType":"502","messageId":"503","endLine":127,"endColumn":29},{"ruleId":"500","severity":1,"message":"501","line":155,"column":34,"nodeType":"502","messageId":"503","endLine":155,"endColumn":36},{"ruleId":"500","severity":1,"message":"501","line":199,"column":25,"nodeType":"502","messageId":"503","endLine":199,"endColumn":27},{"ruleId":"474","severity":1,"message":"589","line":1,"column":10,"nodeType":"476","messageId":"477","endLine":1,"endColumn":19},{"ruleId":"474","severity":1,"message":"590","line":3,"column":34,"nodeType":"476","messageId":"477","endLine":3,"endColumn":40},{"ruleId":"474","severity":1,"message":"591","line":4,"column":8,"nodeType":"476","messageId":"477","endLine":4,"endColumn":9},{"ruleId":"500","severity":1,"message":"501","line":226,"column":81,"nodeType":"502","messageId":"503","endLine":226,"endColumn":83},{"ruleId":"500","severity":1,"message":"501","line":245,"column":86,"nodeType":"502","messageId":"503","endLine":245,"endColumn":88},{"ruleId":"474","severity":1,"message":"592","line":3,"column":10,"nodeType":"476","messageId":"477","endLine":3,"endColumn":13},{"ruleId":"474","severity":1,"message":"593","line":3,"column":15,"nodeType":"476","messageId":"477","endLine":3,"endColumn":18},{"ruleId":"474","severity":1,"message":"594","line":1,"column":10,"nodeType":"476","messageId":"477","endLine":1,"endColumn":20},{"ruleId":"474","severity":1,"message":"595","line":1,"column":22,"nodeType":"476","messageId":"477","endLine":1,"endColumn":29},{"ruleId":"474","severity":1,"message":"596","line":3,"column":8,"nodeType":"476","messageId":"477","endLine":3,"endColumn":13},{"ruleId":"474","severity":1,"message":"597","line":4,"column":10,"nodeType":"476","messageId":"477","endLine":4,"endColumn":17},{"ruleId":"474","severity":1,"message":"598","line":9,"column":11,"nodeType":"476","messageId":"477","endLine":9,"endColumn":19},{"ruleId":"474","severity":1,"message":"599","line":10,"column":11,"nodeType":"476","messageId":"477","endLine":10,"endColumn":15},{"ruleId":"474","severity":1,"message":"578","line":2,"column":23,"nodeType":"476","messageId":"477","endLine":2,"endColumn":34},{"ruleId":"480","severity":1,"message":"600","line":26,"column":8,"nodeType":"482","endLine":26,"endColumn":14,"suggestions":"601"},{"ruleId":"474","severity":1,"message":"526","line":1,"column":10,"nodeType":"476","messageId":"477","endLine":1,"endColumn":18},{"ruleId":"480","severity":1,"message":"481","line":16,"column":8,"nodeType":"482","endLine":16,"endColumn":10,"suggestions":"602"},{"ruleId":"474","severity":1,"message":"578","line":1,"column":23,"nodeType":"476","messageId":"477","endLine":1,"endColumn":34},{"ruleId":"500","severity":1,"message":"501","line":41,"column":68,"nodeType":"502","messageId":"503","endLine":41,"endColumn":70},"no-native-reassign",["603"],"no-negated-in-lhs",["604"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'getAllSellerProducts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["605"],"'Redirect' is defined but never used.","'withRouter' is defined but never used.",["606"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["607"],["608"],"'SmileOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","'Image' is defined but never used.","'pcBackgroundImg' is defined but never used.",["609"],"React Hook useEffect has a missing dependency: 'animateColor'. Either include it or remove the dependency array.",["610"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'getRotationDegree' is assigned a value but never used.","'angle' is already defined.","'PRODUCT_TYPE' is defined but never used.","'Select' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'USER_LOGOUT' is defined but never used.","'FETCH_USER' is defined but never used.","'FETCH_USER_SUCCESS' is defined but never used.","'FETCH_USER_ERROR' is defined but never used.","'onFetchUser' is assigned a value but never used.","'onFetchUserSuccess' is assigned a value but never used.","'onFetchUserError' is assigned a value but never used.","'onRegisterUserReset' is assigned a value but never used.","'onUserLogout' is assigned a value but never used.","'styled' is defined but never used.","'Fragment' is defined but never used.","'Header' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["611"],"Expected '!==' and instead saw '!='.","'Form' is defined but never used.","'message' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user?.user_id'. Either include them or remove the dependency array.",["612"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user_id'. Either include them or remove the dependency array.",["613"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'user_latitude' and 'user_longitude'. Either include them or remove the dependency array.",["614"],"'ExpandOutlined' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["615"],"'Modal' is defined but never used.","'select' is defined but never used.","'Link' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'Layout' is defined but never used.","'NavBarMenu' is defined but never used.","'useParams' is defined but never used.","'Table' is defined but never used.","'deletingCustomerBool' is assigned a value but never used.",["616"],"'getAllCustomerDetails' is defined but never used.","'deletingSellerProductBool' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filteredData' and 'history'. Either include them or remove the dependency array.",["617"],["618"],"React Hook useEffect has a missing dependency: 'userRating'. Either include it or remove the dependency array.",["619"],["620"],"React Hook useEffect has a missing dependency: 'ratingsObject'. Either include it or remove the dependency array. You can also do a functional update 'setRatingsObject(r => ...)' if you only need 'ratingsObject' in the 'setRatingsObject' call.",["621"],"'current_user_email' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'current_user_id'. Either include it or remove the dependency array. Outer scope values like 'API_URL' aren't valid dependencies because mutating them doesn't re-render the component.",["622"],"React Hook useEffect has a missing dependency: 'sellerId'. Either include it or remove the dependency array.",["623"],"'LeftCircleFilled' is defined but never used.","'notification' is defined but never used.","'filter' is defined but never used.","'useDispatch' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"624","text":"625"},["626"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUserId' and 'dispatch'. Either include them or remove the dependency array.",["627"],"'liveKhaltiServerCheck' is assigned a value but never used.","'keyframes' is defined but never used.","'Button' is defined but never used.","'$' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'PageLayout' is defined but never used.","'MainDiv' is defined but never used.","'axios' is defined but never used.","'API_URL' is defined but never used.","'dispatch' is assigned a value but never used.","'User' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userOrderDetails'. Either include it or remove the dependency array.",["628"],["629"],"no-global-assign","no-unsafe-negation",{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"632","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"637","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"632","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},[1301,1316],"\r\n            .",{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"632","fix":"671"},"Update the dependencies array to be: [dispatch, loggingIn]",{"range":"672","text":"673"},"Update the dependencies array to be: [dispatch]",{"range":"674","text":"675"},"Update the dependencies array to be: [history, userDetail]",{"range":"676","text":"677"},{"range":"678","text":"675"},"Update the dependencies array to be: [dispatch, user_id]",{"range":"679","text":"680"},"Update the dependencies array to be: [animateColor]",{"range":"681","text":"682"},"Update the dependencies array to be: [addingSellerProductsSuccess, dispatch, userId]",{"range":"683","text":"684"},"Update the dependencies array to be: [dispatch, updatingSellerProductSuccess, user?.user_id]",{"range":"685","text":"686"},{"range":"687","text":"680"},"Update the dependencies array to be: [allProducts, product_type, user_latitude, user_longitude]",{"range":"688","text":"689"},"Update the dependencies array to be: [products, searchInputText]",{"range":"690","text":"691"},"Update the dependencies array to be: [deletingCustomerSuccess, deletingSellerProductBool, dispatch]",{"range":"692","text":"693"},"Update the dependencies array to be: [deletingSellerProductSuccess, filteredData, history]",{"range":"694","text":"695"},"Update the dependencies array to be: [history]",{"range":"696","text":"697"},"Update the dependencies array to be: [User, userRating]",{"range":"698","text":"699"},{"range":"700","text":"675"},"Update the dependencies array to be: [allCustomerDetails, ratingsObject]",{"range":"701","text":"702"},"Update the dependencies array to be: [current_user_id, history.location.search]",{"range":"703","text":"704"},"Update the dependencies array to be: [currentUserId, sellerId, userId]",{"range":"705","text":"706"},"Update the dependencies array to be: [productId, allProducts, user_latitude, user_longitude]",{"range":"707","text":"708"},"Update the dependencies array to be: [currentUserId, dispatch, registerOrderError, registerOrderMessage]",{"range":"709","text":"710"},"Update the dependencies array to be: [User, userOrderDetails]",{"range":"711","text":"712"},{"range":"713","text":"675"},[584,595],"[dispatch, loggingIn]",[1224,1226],"[dispatch]",[1988,2000],"[history, userDetail]",[1219,1221],[1325,1334],"[dispatch, user_id]",[3357,3359],"[animateColor]",[1057,1086],"[addingSellerProductsSuccess, dispatch, userId]",[2385,2415],"[dispatch, updatingSellerProductSuccess, user?.user_id]",[1352,1354],[3767,3794],"[allProducts, product_type, user_latitude, user_longitude]",[1837,1854],"[products, searchInputText]",[1881,1933],"[deletingCustomerSuccess, deletingSellerProductBool, dispatch]",[2032,2062],"[deletingSellerProductSuccess, filteredData, history]",[2198,2200],"[history]",[876,882],"[User, userRating]",[802,804],[1531,1551],"[allCustomerDetails, ratingsObject]",[2718,2752],"[current_user_id, history.location.search]",[4955,4978],"[currentUserId, sellerId, userId]",[2549,2573],"[productId, allProducts, user_latitude, user_longitude]",[1799,1841],"[currentUserId, dispatch, registerOrderError, registerOrderMessage]",[958,964],"[User, userOrderDetails]",[791,793]]